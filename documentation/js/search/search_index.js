var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddToCartDTO.html",[0,0.068,1,3.028]],["body/classes/AddToCartDTO.html",[0,0.118,1,5.278,2,1.843,3,0.17,4,0.17,5,0.133,6,5.298,7,0.373,8,1.334,9,3.861,10,0.351,11,0.012,12,2.421,13,1.677,14,2.859,15,0.797,16,6.058,17,0.248,18,2.029,19,1.786,20,0.17,21,0.01,22,0.01]],["title/guards/AdminGUard.html",[23,3.284,24,3.028]],["body/guards/AdminGUard.html",[0,0.088,3,0.15,4,0.15,5,0.117,7,0.33,10,0.311,11,0.012,15,0.705,17,0.299,20,0.15,21,0.009,22,0.009,24,4.898,25,4.246,26,4.689,27,3.667,28,7.046,29,1.746,30,4.689,31,5.224,32,5.361,33,1.439,34,1.439,35,0.758,36,4.898,37,1.439,38,3.502,39,3.85,40,5.346,41,0.84,42,3.242,43,2.57,44,3.242,45,3.077,46,1.856,47,2.127,48,4.246,49,4.689,50,2.106,51,3.915,52,5.361]],["title/interfaces/Adress.html",[53,0.741,54,1.987]],["body/interfaces/Adress.html",[0,0.099,3,0.129,4,0.129,5,0.101,7,0.284,8,1.124,10,0.437,11,0.012,12,2.742,17,0.279,18,2.644,19,1.359,20,0.171,21,0.009,22,0.009,35,1.065,53,0.824,54,3.474,55,1.765,56,3.65,57,3.65,58,5.74,59,5.74,60,5.74,61,5.74,62,1.365,63,3.726,64,1.402,65,4.82,66,2.732,67,2.789,68,3.841,69,1.237,70,2.949,71,1.595,72,2.304,73,2.041,74,2.304,75,1.402,76,4.031,77,2.646,78,1.544,79,2.407,80,2.52,81,1.495,82,2.646,83,2.304,84,2.52]],["title/controllers/AppController.html",[85,1.645,86,3.028]],["body/controllers/AppController.html",[0,0.048,3,0.082,4,0.082,5,0.064,7,0.18,10,0.308,11,0.012,13,1.845,15,0.877,17,0.322,20,0.082,21,0.006,22,0.006,29,1.147,33,1.789,34,1.789,35,0.942,37,1.789,39,2.53,41,0.458,43,1.401,45,1.678,47,1.748,50,1.855,69,0.784,71,1.836,72,2.652,75,1.614,83,2.203,85,1.748,86,3.218,87,1.159,88,2.556,89,2.692,90,4.407,91,4.407,92,4.407,93,4.407,94,4.407,95,5.828,96,2.922,97,2.922,98,2.922,99,4.891,100,2.922,101,4.406,102,2.922,103,2.922,104,2.543,105,2.922,106,2.922,107,2.922,108,2.922,109,2.922,110,2.922,111,2.922,112,2.922,113,2.922,114,2.922,115,3.782,116,2.832,117,1.87,118,2.263,119,5.908,120,3.854,121,2.82,122,2.922,123,2.032,124,3.854,125,4.407,126,2.922,127,2.922,128,1.678,129,1.767,130,1.598,131,1.526,132,2.314,133,2.665,134,2.665,135,2.922,136,4.407,137,1.767,138,2.134,139,1.526,140,1.598,141,2.665,142,1.99,143,2.134,144,2.922,145,2.922,146,1.99,147,2.314,148,3.395,149,2.556,150,2.77,151,2.134,152,1.577,153,2.556,154,2.922,155,2.35,156,2.922,157,2.314,158,1.011,159,1.99,160,2.556,161,2.922,162,1.119,163,3.045,164,2.556,165,1.678,166,1.678,167,2.556,168,2.314,169,2.922,170,2.922,171,2.922,172,2.844,173,2.922,174,4.64,175,2.922,176,2.922,177,2.922,178,2.556,179,4.64,180,3.49,181,2.922,182,2.922,183,5.306,184,2.922,185,2.922,186,2.922,187,2.922,188,2.922,189,1.99,190,4.407,191,5.908,192,2.922,193,2.922,194,2.922,195,2.922,196,2.134,197,2.922,198,2.922,199,2.556,200,1.767,201,2.922,202,2.922]],["title/modules/AppModule.html",[78,1.389,203,3.028]],["body/modules/AppModule.html",[0,0.047,3,0.081,4,0.081,5,0.063,10,0.168,11,0.012,15,0.382,17,0.341,20,0.081,21,0.006,22,0.006,29,0.755,33,0.779,34,1.176,35,0.41,37,0.779,41,0.455,46,1.004,78,1.468,86,3.857,87,1.739,101,2.651,131,1.515,148,4.253,149,2.537,150,3.47,151,2.119,152,2.378,153,2.537,158,2.3,159,1.976,168,2.298,203,6.217,204,1.391,205,2.018,206,2.537,207,2.537,208,2.537,209,4.525,210,4.525,211,4.253,212,4.525,213,4.525,214,4.525,215,4.525,216,4.253,217,2.943,218,4.253,219,4.019,220,2.226,221,2.834,222,2.943,223,2.288,224,1.515,225,1.515,226,2.298,227,2.396,228,3.597,229,3.833,230,2.298,231,3.471,232,4.661,233,2.901,234,3.471,235,2.119,236,2.901,237,2.537,238,2.537,239,2.901,240,2.901,241,2.901,242,2.901,243,2.901,244,2.901,245,2.901,246,2.298,247,2.901,248,2.901,249,2.901,250,2.298,251,2.537,252,3.471,253,1.976,254,1.755,255,2.901,256,1.857,257,2.901,258,1.857,259,2.901,260,2.901,261,2.901,262,2.537,263,2.901,264,2.901,265,2.901,266,3.201,267,2.537,268,2.901,269,2.901,270,1.515,271,2.537,272,2.298,273,2.298,274,2.298,275,2.298,276,2.537,277,1.857,278,2.298,279,2.537,280,2.537,281,2.537,282,1.869,283,2.901,284,2.901,285,2.901,286,2.901,287,2.901,288,2.298,289,3.833,290,2.537,291,2.901]],["title/injectables/AppService.html",[148,2.653,292,0.816]],["body/injectables/AppService.html",[0,0.099,3,0.169,4,0.169,5,0.132,7,0.372,11,0.012,15,0.795,17,0.247,20,0.169,21,0.01,22,0.01,29,1.878,37,1.621,41,0.946,50,1.897,62,1.169,148,4.617,292,1.419,293,2.235,294,5.282,295,7.993,296,6.04,297,6.04,298,6.04]],["title/guards/AuthGuard.html",[23,3.284,130,2.267]],["body/guards/AuthGuard.html",[0,0.09,3,0.155,4,0.155,5,0.121,7,0.34,10,0.32,11,0.012,15,0.727,17,0.279,20,0.155,21,0.01,22,0.01,25,4.374,27,3.736,28,7.099,29,1.778,30,4.831,31,5.279,33,1.483,34,1.483,35,0.781,36,4.99,37,1.483,38,3.568,39,3.923,40,5.418,41,0.865,42,3.34,46,1.912,47,2.191,48,4.374,50,1.735,130,3.736,299,4.831,300,5.524,301,5.524]],["title/modules/AuthModule.html",[78,1.389,209,2.823]],["body/modules/AuthModule.html",[0,0.058,3,0.1,4,0.1,5,0.078,11,0.012,17,0.335,20,0.1,21,0.007,22,0.007,41,0.556,78,1.703,131,1.853,150,4.15,152,2.556,158,2.472,204,1.701,205,2.34,209,5.83,216,4.571,217,3.163,218,5.086,220,2.393,221,3.046,222,3.163,223,2.654,224,1.853,225,1.853,227,2.779,229,4.446,238,3.103,251,3.103,253,2.416,254,2.146,256,5.086,258,5.086,262,4.446,271,3.103,272,2.81,273,2.81,274,2.81,275,2.81,276,3.103,277,2.271,278,2.81,279,3.103,280,3.103,281,3.103,302,3.103,303,3.548,304,3.103,305,3.103,306,5.412,307,3.548,308,5.083,309,3.103,310,2.591,311,2.037,312,1.701,313,2.037,314,1.459,315,3.548,316,3.548,317,3.548,318,3.548,319,2.146,320,2.146]],["title/injectables/AuthService.html",[150,2.165,292,0.816]],["body/injectables/AuthService.html",[0,0.043,3,0.073,4,0.073,5,0.057,7,0.16,10,0.234,11,0.012,15,0.838,17,0.308,20,0.073,21,0.006,22,0.006,29,1.05,33,1.709,34,1.709,35,0.9,37,1.616,39,2.316,41,0.408,46,2.576,50,1.89,70,3.56,71,2.376,72,3.182,73,2.666,74,2.016,81,0.844,89,2.581,95,3.528,99,3.161,104,2.667,118,1.11,123,2.544,150,2.107,152,1.991,158,2.204,159,1.773,162,1.545,163,3.455,165,2.835,172,2.897,174,3.528,189,1.773,220,2.225,222,2.941,252,5.26,253,1.773,254,1.575,277,2.582,278,2.062,289,3.528,290,3.528,292,0.794,293,0.964,310,1.901,312,1.248,314,1.07,319,1.575,321,2.062,322,4.035,323,4.035,324,3.195,325,4.035,326,2.604,327,2.604,328,4.035,329,2.604,330,4.035,331,2.604,332,4.035,333,2.604,334,3.528,335,2.604,336,3.912,337,4.035,338,2.604,339,2.277,340,1.666,341,2.277,342,2.946,343,2.277,344,2.062,345,2.277,346,2.277,347,2.604,348,1.575,349,2.946,350,2.604,351,1.666,352,1.901,353,2.604,354,2.604,355,2.062,356,6.003,357,4.035,358,3.193,359,2.666,360,2.604,361,2.604,362,2.604,363,5.265,364,2.277,365,2.277,366,4.035,367,3.528,368,3.528,369,3.528,370,2.277,371,2.604,372,2.604,373,4.035,374,4.035,375,2.604,376,2.604,377,2.604,378,2.062,379,2.604,380,2.604,381,4.035,382,4.035,383,2.604,384,5.569,385,2.604,386,2.187,387,2.604,388,3.912,389,2.604,390,2.604,391,2.604,392,2.582,393,2.604,394,2.604,395,2.604,396,3.607,397,4.035,398,4.035,399,4.035,400,4.035,401,2.604,402,2.277,403,1.773,404,2.604,405,2.604,406,2.277,407,1.901]],["title/classes/BodyChargeDto.html",[0,0.068,408,2.823]],["body/classes/BodyChargeDto.html",[0,0.116,2,1.784,3,0.164,4,0.164,5,0.128,7,0.361,8,1.308,10,0.34,11,0.012,13,1.623,14,2.17,15,0.771,17,0.29,18,2.374,19,1.728,20,0.199,21,0.01,22,0.01,62,1.148,67,2.623,69,1.574,408,5.187,409,5.127,410,5.562,411,5.127,412,5.863,413,4.286,414,3.205]],["title/interfaces/CartDbData.html",[53,0.741,415,2.653]],["body/interfaces/CartDbData.html",[3,0.151,4,0.151,5,0.118,7,0.331,8,1.24,9,3.838,10,0.445,11,0.012,12,2.7,17,0.275,20,0.206,21,0.009,22,0.009,35,0.949,53,1.31,55,2.059,64,1.635,84,3.673,282,3.126,415,4.299,416,3.925,417,4.009,418,4.644,419,3.838,420,6.081,421,3.251,422,3.251,423,3.66,424,4.063,425,3.66]],["title/interfaces/Carts.html",[53,0.741,116,1.987]],["body/interfaces/Carts.html",[0,0.103,3,0.137,4,0.137,5,0.107,7,0.301,8,1.168,9,3.706,10,0.47,11,0.012,17,0.287,20,0.178,21,0.009,22,0.009,53,0.874,55,1.873,62,1.328,67,2.745,69,1.313,71,1.693,116,3.554,282,3.497,417,3.872,418,4.485,419,3.706,421,4.842,422,2.957,426,3.873,427,4.745,428,3.275,429,4.745,430,5.415,431,2.957,432,3.33]],["title/controllers/CartsController.html",[85,1.645,433,3.028]],["body/controllers/CartsController.html",[0,0.034,3,0.059,4,0.059,5,0.046,7,0.13,10,0.392,11,0.012,13,1.693,15,0.805,17,0.308,20,0.059,21,0.005,22,0.005,29,0.887,33,1.641,34,1.641,35,0.864,37,1.641,39,3.334,41,0.33,43,1.634,44,1.273,45,1.209,46,1.487,47,0.835,50,1.704,62,1.305,64,0.641,69,0.565,75,1.307,81,2.133,85,0.835,87,0.835,89,2.493,99,4.21,101,4.087,104,1.634,115,1.151,116,1.634,117,2.75,118,2.107,121,3.161,123,1.306,128,1.209,129,1.273,130,1.151,132,1.668,133,2.062,134,2.987,137,1.273,139,1.099,140,1.151,141,1.273,146,1.434,147,1.668,152,1.22,155,3.219,165,1.209,166,1.957,172,2.388,179,1.842,180,3.403,199,2.982,200,1.273,266,1.538,351,1.347,432,1.434,433,2.49,434,1.842,435,1.273,436,4.297,437,4.297,438,3.758,439,3.758,440,3.758,441,2.982,442,3.758,443,2.106,444,4.333,445,2.106,446,3.41,447,2.49,448,3.41,449,2.106,450,2.106,451,2.106,452,3.581,453,4.241,454,2.106,455,2.106,456,4.396,457,2.106,458,3.955,459,4.894,460,2.106,461,2.106,462,2.106,463,3.41,464,2.106,465,1.842,466,2.982,467,2.106,468,1.842,469,2.982,470,2.106,471,2.106,472,4.164,473,2.49,474,2.182,475,2.833,476,2.982,477,2.106,478,2.106,479,1.434,480,1.434,481,1.434,482,2.7,483,3.364,484,2.106,485,3.41,486,2.106,487,1.842,488,1.209,489,1.668,490,2.106,491,2.106,492,1.842,493,1.842,494,1.842,495,2.106,496,2.106,497,2.106,498,2.106,499,2.106,500,0.866,501,2.106,502,1.842,503,4.32,504,5.08,505,2.106,506,2.106,507,2.106,508,2.106,509,2.106,510,2.062,511,3.193,512,1.434,513,2.106,514,4.297,515,2.106,516,1.842,517,2.106,518,1.209,519,1.842,520,2.106,521,2.106,522,1.842,523,1.538,524,2.106,525,2.106,526,2.106,527,3.41,528,2.106,529,4.297,530,3.334,531,2.106,532,2.106,533,2.106,534,4.297,535,2.75,536,2.106,537,2.982,538,1.209,539,2.106,540,2.106,541,3.41,542,2.106,543,3.41,544,2.982,545,3.41,546,2.106]],["title/modules/CartsModule.html",[78,1.389,210,2.823]],["body/modules/CartsModule.html",[0,0.08,3,0.138,4,0.138,5,0.107,10,0.284,11,0.012,15,0.645,17,0.328,20,0.138,21,0.009,22,0.009,29,1.276,33,1.316,34,1.316,35,0.693,37,1.316,41,0.768,78,2.122,87,2.514,152,2.817,155,2.171,204,2.35,205,2.917,210,5.634,220,2.637,221,3.357,223,3.308,224,2.56,225,2.56,227,3.464,230,3.882,231,5.018,232,5.878,234,3.882,235,3.58,313,2.814,314,2.015,433,5.127,492,4.287,547,4.902,548,4.902,549,4.902,550,4.902,551,3.137,552,3.58,553,4.287,554,4.902,555,3.338,556,4.287,557,4.902]],["title/injectables/CartsService.html",[152,1.484,292,0.816]],["body/injectables/CartsService.html",[0,0.021,1,0.957,3,0.037,4,0.037,5,0.029,7,0.081,9,0.655,10,0.283,11,0.012,15,0.89,17,0.239,20,0.037,21,0.003,22,0.003,29,0.595,33,1.816,34,1.816,35,0.968,37,1.79,41,0.205,42,0.792,46,2.188,50,2.094,62,0.948,64,0.399,81,2.05,89,2.681,104,3.091,116,0.628,123,0.502,152,0.818,155,2.505,162,0.876,163,1.312,172,3.143,220,1.22,221,1.553,270,3.367,282,0.975,292,0.45,293,0.485,313,0.752,314,0.539,339,1.146,340,0.838,358,2.372,359,2.856,378,2.408,386,2.406,414,0.716,415,1.463,417,0.684,418,0.792,419,2.588,428,2.844,429,1.463,438,1.999,439,1.999,440,1.999,441,1.999,442,4.272,444,4.161,456,3.739,458,1.557,465,1.999,468,1.999,473,0.957,475,2.158,494,1.146,502,1.999,511,2.953,516,1.999,518,2.973,522,3.186,523,3.018,530,0.752,535,2.645,537,3.615,538,1.746,544,1.146,558,1.146,559,2.286,560,2.286,561,2.286,562,2.286,563,2.286,564,2.286,565,2.286,566,5.407,567,4.102,568,2.286,569,2.286,570,2.286,571,0.838,572,2.66,573,1.31,574,2.091,575,1.31,576,1.31,577,2.286,578,1.31,579,2.286,580,1.31,581,2.286,582,1.31,583,2.286,584,1.31,585,1.31,586,1.31,587,1.31,588,1.31,589,2.286,590,3.643,591,1.31,592,2.286,593,2.286,594,2.66,595,1.31,596,2.286,597,1.31,598,2.286,599,1.31,600,2.286,601,1.31,602,2.286,603,1.31,604,2.286,605,1.31,606,2.286,607,1.31,608,3.643,609,2.286,610,1.31,611,1.31,612,3.041,613,1.146,614,1.31,615,1.31,616,1.31,617,1.31,618,1.31,619,0.957,620,1.31,621,3.041,622,3.326,623,3.567,624,1.839,625,2.954,626,1.383,627,1.31,628,1.31,629,1.31,630,3.041,631,1.31,632,1.31,633,1.31,634,1.31,635,1.146,636,1.146,637,0.957,638,1.31,639,1.31,640,1.31,641,3.643,642,1.31,643,1.31,644,3.643,645,2.286,646,3.868,647,3.615,648,4.272,649,5.64,650,3.041,651,2.286,652,3.041,653,1.31,654,1.999,655,1.999,656,3.186,657,1.663,658,1.31,659,0.957,660,3.186,661,2.499,662,1.31,663,1.557,664,3.643,665,1.31,666,0.892,667,1.31,668,1.146,669,1.31,670,1.31,671,1.31,672,1.146,673,2.091,674,1.31,675,1.31,676,1.31,677,1.31,678,1.31,679,2.286,680,1.31,681,4.541,682,1.31,683,1.81,684,1.31,685,1.946,686,1.31,687,1.31,688,1.31,689,1.31,690,2.286,691,1.31,692,1.31,693,1.31,694,3.041,695,1.31,696,1.31,697,3.041,698,1.31,699,1.999,700,1.31,701,1.31,702,1.31,703,2.286,704,2.286,705,2.286,706,1.31,707,1.31,708,2.286,709,1.31,710,1.31,711,1.31,712,1.31,713,1.31,714,1.31,715,2.286,716,1.038,717,1.31,718,1.31,719,2.286,720,1.31,721,1.31,722,1.31,723,1.31,724,1.31,725,1.31,726,1.31,727,1.31,728,1.557,729,1.31,730,0.957,731,1.31,732,1.31,733,1.31,734,1.31,735,1.31,736,1.31,737,1.31,738,1.31,739,1.31]],["title/interfaces/ClassConstructor.html",[53,0.741,740,2.823]],["body/interfaces/ClassConstructor.html",[0,0.117,3,0.144,4,0.144,5,0.112,11,0.012,17,0.319,20,0.183,21,0.009,22,0.009,27,2.803,31,4.441,40,4.763,41,0.803,42,3.101,47,2.587,50,2.252,53,0.917,55,1.964,270,2.677,359,2.271,386,2.271,431,3.944,500,2.108,740,4.884,741,3.744,742,5.704,743,4.485,744,5.704,745,4.485,746,4.485,747,4.485,748,4.485,749,4.485,750,3.744,751,4.061,752,4.485,753,4.485,754,3.744,755,4.061,756,4.485,757,5.704,758,5.165,759,4.485,760,4.061,761,4.485,762,4.485,763,4.485,764,4.485,765,4.485]],["title/classes/CreateCartDTO.html",[0,0.068,472,2.823]],["body/classes/CreateCartDTO.html",[0,0.102,2,1.463,3,0.135,4,0.135,5,0.105,7,0.296,8,1.155,10,0.403,11,0.012,12,2.096,13,1.926,14,2.316,15,0.915,17,0.256,18,2.33,19,1.417,20,0.135,21,0.009,22,0.009,62,1.194,66,2.408,67,2.316,68,3.334,69,1.291,75,2.116,81,2.477,155,3.081,359,2.771,414,3.421,456,4.62,472,4.261,474,4.004,475,3.989,476,5.473,511,3.989,657,3.421,659,5.38,766,4.205,767,3.784,768,5.473,769,4.808,770,4.808,771,4.956,772,3.808,773,4.808,774,3.274,775,3.421,776,3.421,777,6.258,778,4.808,779,4.808]],["title/classes/CreateProductDto.html",[0,0.068,780,2.38]],["body/classes/CreateProductDto.html",[0,0.094,2,1.02,3,0.094,4,0.094,5,0.073,7,0.206,8,0.901,10,0.46,11,0.012,12,2.571,13,2.198,14,2.129,15,1.044,17,0.2,18,2.53,19,0.988,20,0.188,21,0.007,22,0.007,35,0.813,38,1.75,41,0.525,53,0.872,62,1.328,66,1.16,75,2.2,81,1.865,413,4.06,510,2.027,530,3.853,624,3.479,625,3.479,626,3.479,775,1.833,776,1.833,780,2.801,781,5.121,782,2.145,783,3.681,784,3.681,785,3.681,786,2.757,787,3.681,788,3.917,789,4.021,790,3.355,791,3.353,792,3.869,793,4.834,794,3.353,795,3.353,796,3.353,797,3.353,798,4.296,799,3.353,800,3.353,801,3.353,802,4.042,803,3.353,804,3.353,805,3.353,806,3.353,807,3.353,808,3.353,809,3.353,810,2.145,811,2.283,812,2.283,813,2.283,814,1.924,815,2.448,816,2.145,817,2.145,818,3.563,819,2.145,820,2.145,821,2.145,822,2.145,823,2.145,824,2.145,825,2.027,826,3.322,827,2.145,828,2.283,829,2.145,830,2.283,831,2.145,832,2.027,833,2.283,834,2.283,835,2.448,836,2.283,837,2.448,838,2.283]],["title/classes/CreateReviewDto.html",[0,0.068,839,2.823]],["body/classes/CreateReviewDto.html",[0,0.093,2,1.268,3,0.117,4,0.117,5,0.091,7,0.256,8,1.05,10,0.446,11,0.012,12,2.518,13,2.082,14,2.575,15,0.989,17,0.233,18,2.169,19,1.229,20,0.117,21,0.008,22,0.008,35,0.804,62,1.18,66,1.969,67,2.899,68,2.727,69,1.119,75,2.383,530,3.994,774,4.41,786,3.104,790,3.64,792,2.97,798,4.453,816,4.145,819,2.667,839,3.874,840,6.73,841,3.301,842,4.41,843,4.41,844,4.41,845,5.689,846,4.168,847,3.645,848,3.645,849,3.645,850,3.645,851,7.518,852,7.518,853,7.518,854,4.168,855,4.168,856,5.689,857,4.168,858,4.168,859,4.168,860,4.168,861,3.645,862,3.645,863,3.645,864,4.73]],["title/classes/CreateUserDto.html",[0,0.068,70,2.653]],["body/classes/CreateUserDto.html",[0,0.089,2,1.196,3,0.11,4,0.11,5,0.086,7,0.242,8,1.009,10,0.46,11,0.012,12,2.104,13,2.199,15,1.045,17,0.257,18,2.537,19,1.159,20,0.153,21,0.008,22,0.008,35,0.772,53,0.703,54,3.419,56,6.355,57,3.113,58,3.113,59,3.113,60,3.113,61,3.113,62,1.337,63,4.037,64,1.196,65,4.327,66,2.622,67,2.64,68,3.702,69,1.055,70,3.497,71,2.174,72,3.139,73,2.781,74,3.139,75,1.196,76,4.779,77,3.137,78,1.317,79,3.279,80,3.434,81,2.037,82,3.605,83,3.139,84,2.987,767,2.377,865,3.99,866,3.931,867,3.931,868,3.931,869,3.438,870,3.931,871,4.277,872,3.931,873,3.931,874,3.931,875,3.931,876,5.493,877,3.931,878,3.931,879,3.931]],["title/injectables/CurrentCartMiddleware.html",[292,0.816,555,2.823]],["body/injectables/CurrentCartMiddleware.html",[0,0.075,3,0.13,4,0.13,5,0.101,7,0.284,10,0.353,11,0.012,15,0.802,17,0.317,20,0.13,21,0.009,22,0.009,27,2.526,29,1.586,33,1.636,34,1.636,35,0.861,37,1.24,41,0.724,46,2.11,47,2.991,53,0.826,89,2.285,99,2.956,115,2.526,116,2.922,118,1.97,152,2.596,155,2.7,157,3.659,158,1.599,159,3.146,162,1.769,165,3.499,172,1.899,292,1.199,293,1.71,312,2.214,444,3.333,459,4.642,483,4.646,488,3.499,500,1.899,555,4.151,880,5.403,881,3.373,882,4.451,883,4.62,884,4.62,885,4.451,886,5.298,887,5.298,888,4.62,889,4.451,890,3.146,891,3.373,892,3.373,893,3.373,894,3.373,895,3.659,896,4.04]],["title/injectables/CurrentUserMiddleware.html",[292,0.816,551,2.653]],["body/injectables/CurrentUserMiddleware.html",[0,0.077,3,0.133,4,0.133,5,0.103,7,0.291,10,0.359,11,0.012,15,0.814,17,0.299,20,0.133,21,0.009,22,0.009,27,2.585,29,1.611,33,1.661,34,1.661,35,0.875,37,1.269,41,0.741,43,2.266,46,2.142,47,3.014,53,0.845,89,2.311,99,3.026,118,2.64,123,2.371,158,2.534,162,1.811,172,1.944,292,1.218,293,1.75,459,4.685,483,4.699,488,3.553,500,1.944,551,3.961,552,5.039,882,4.52,885,4.52,886,5.346,887,5.346,889,4.52,891,3.453,892,3.453,893,3.453,894,3.453,897,3.745,898,4.729,899,4.729,900,4.215,901,4.729,902,3.745,903,3.453,904,4.52,905,4.136,906,4.136]],["title/classes/DataChargeDto.html",[0,0.068,907,3.028]],["body/classes/DataChargeDto.html",[0,0.11,2,1.649,3,0.152,4,0.152,5,0.119,7,0.333,8,1.247,10,0.426,11,0.012,13,1.5,14,2.006,15,0.968,17,0.315,18,2.262,19,1.597,20,0.189,21,0.009,22,0.009,62,1.094,67,2.499,69,1.455,115,4.022,116,3.526,118,3.137,123,2.818,351,3.468,411,4.739,413,4.084,414,2.963,890,3.69,907,5.372,908,4.739,909,5.372,910,5.419,911,5.419,912,5.419]],["title/controllers/DeliveryController.html",[85,1.645,913,3.028]],["body/controllers/DeliveryController.html",[0,0.05,3,0.086,4,0.086,5,0.067,7,0.189,9,1.537,10,0.419,11,0.012,13,1.881,15,0.894,17,0.302,20,0.086,21,0.006,22,0.006,29,1.191,33,1.823,34,1.823,35,0.96,37,1.823,41,0.482,43,2.194,44,1.86,45,1.765,46,1.064,50,2.133,62,1.287,64,0.935,69,0.825,75,1.393,77,1.765,85,1.22,87,1.22,89,1.832,104,1.474,117,1.968,118,2.584,121,3.877,123,2.601,128,1.765,129,1.86,133,3.308,134,3.308,137,1.86,139,1.605,140,1.681,141,1.86,166,2.628,200,1.86,217,2.422,351,1.968,386,1.362,417,1.605,435,1.86,444,4.343,452,2.734,466,4.004,469,4.004,475,2.39,479,3.724,480,2.094,481,2.094,500,1.264,504,4.004,538,3.14,792,2.39,913,3.343,914,2.689,915,4.004,916,5.299,917,4.004,918,3.626,919,4.578,920,4.784,921,2.689,922,4.578,923,3.075,924,3.075,925,4.812,926,2.435,927,3.075,928,3.075,929,2.689,930,3.075,931,3.075,932,4.108,933,4.004,934,4.004,935,4.004,936,2.689,937,3.075,938,4.332,939,3.075,940,3.075,941,3.075,942,3.877,943,4.578,944,3.075,945,2.245,946,2.245,947,2.689,948,3.075,949,3.075,950,3.075,951,2.245,952,2.689,953,3.075,954,3.075,955,3.075,956,2.689,957,3.075,958,2.245,959,3.075,960,3.075,961,3.075,962,3.075,963,3.075,964,3.075,965,3.075,966,3.075,967,1.968,968,3.075,969,3.075,970,3.075,971,3.075,972,2.689,973,2.689,974,2.689,975,2.689,976,2.689,977,2.689,978,2.689,979,2.689,980,2.689,981,2.689,982,2.689,983,2.689,984,3.075]],["title/classes/DeliveryData.html",[0,0.068,925,2.653]],["body/classes/DeliveryData.html",[0,0.105,2,1.517,3,0.14,4,0.14,5,0.109,7,0.307,8,1.183,9,3.538,10,0.433,11,0.012,13,2.069,14,2.371,15,0.983,17,0.306,18,2.146,19,1.47,20,0.14,21,0.009,22,0.009,35,0.905,62,1.038,64,1.517,66,2.218,67,2.765,68,3.071,69,1.339,75,1.517,77,3.678,417,3.696,421,4.673,422,3.016,767,3.016,814,2.863,871,3.396,925,4.1,951,5.775,958,5.169,985,4.362,986,4.988,987,4.362,988,4.988,989,4.988,990,4.988,991,4.679,992,4.988,993,4.988,994,4.988,995,3.642]],["title/classes/DeliveryData-1.html",[0,0.056,657,1.89,925,2.213]],["body/classes/DeliveryData-1.html",[0,0.111,2,1.662,3,0.153,4,0.153,5,0.12,7,0.336,8,1.253,9,3.69,10,0.448,11,0.012,14,2.022,15,1.016,17,0.302,18,1.83,19,1.61,20,0.153,21,0.009,22,0.009,35,0.959,64,1.662,66,1.891,282,2.895,417,3.855,421,4.803,422,3.304,925,4.343,951,5.911,958,5.392,996,4.778,997,5.463,998,5.463,999,5.463,1000,5.463]],["title/modules/DeliveryModule.html",[78,1.389,211,2.653]],["body/modules/DeliveryModule.html",[0,0.078,3,0.134,4,0.134,5,0.104,11,0.012,17,0.33,20,0.134,21,0.009,22,0.009,41,0.746,78,2.083,87,2.467,152,2.795,158,2.703,204,2.283,205,2.863,211,5.465,217,3.459,220,2.616,221,3.48,222,3.459,223,3.247,224,2.487,225,2.487,227,3.4,311,2.734,312,2.283,313,2.734,314,1.958,319,2.88,913,5.056,947,4.165,1001,4.763,1002,4.763,1003,4.763,1004,4.763]],["title/injectables/DeliveryService.html",[217,1.836,292,0.816]],["body/injectables/DeliveryService.html",[0,0.032,3,0.055,4,0.055,5,0.043,7,0.12,9,3.202,10,0.237,11,0.012,12,0.654,15,0.814,17,0.242,20,0.055,21,0.004,22,0.004,29,0.835,33,1.66,34,1.66,35,0.874,37,1.59,41,0.306,46,2.468,50,2.012,54,1.538,62,0.661,64,0.594,77,3.551,79,1.675,80,1.068,89,2.563,104,2.839,123,1.563,152,1.69,155,2.092,158,0.676,162,1.229,163,2.343,165,2.343,172,2.972,217,1.421,220,1.582,222,2.624,270,3.093,282,0.833,292,0.631,293,0.723,311,1.122,312,0.937,314,0.803,319,1.182,340,2.053,358,3.401,359,2.992,378,3.232,386,3.432,402,1.709,403,3.217,406,1.709,417,2.928,419,2.961,424,2.857,428,2.942,429,1.25,444,3.239,452,0.977,474,1.25,511,1.02,535,3.791,566,4.563,571,1.25,574,1.841,622,3.217,623,2.98,673,2.995,685,2.612,730,1.427,792,1.02,895,1.547,915,2.806,916,2.806,917,2.806,920,2.806,921,2.806,929,2.806,932,2.857,942,2.053,945,1.427,946,1.427,951,4.517,952,4.563,958,2.98,967,1.25,995,1.427,1005,1.709,1006,3.208,1007,3.208,1008,5.218,1009,1.954,1010,1.954,1011,3.208,1012,1.954,1013,1.954,1014,3.208,1015,1.954,1016,3.208,1017,1.954,1018,3.208,1019,1.954,1020,3.208,1021,1.954,1022,1.547,1023,3.208,1024,1.954,1025,1.547,1026,1.954,1027,1.954,1028,1.954,1029,1.709,1030,1.954,1031,1.954,1032,3.208,1033,1.954,1034,1.954,1035,1.709,1036,1.709,1037,1.954,1038,4.724,1039,3.208,1040,3.208,1041,4.081,1042,3.208,1043,3.232,1044,3.208,1045,4.081,1046,1.954,1047,1.954,1048,1.954,1049,1.954,1050,4.081,1051,0.977,1052,1.709,1053,4.724,1054,3.208,1055,1.954,1056,3.208,1057,1.954,1058,1.954,1059,1.954,1060,1.954,1061,1.954,1062,5.218,1063,4.081,1064,3.208,1065,1.954,1066,1.954,1067,1.547,1068,3.208,1069,1.954,1070,1.709,1071,1.954,1072,2.541,1073,1.954,1074,3.208,1075,1.709,1076,3.208,1077,1.954,1078,1.709,1079,1.547,1080,1.547,1081,1.709,1082,1.709]],["title/injectables/FacebookStrategy.html",[292,0.816,306,2.823]],["body/injectables/FacebookStrategy.html",[0,0.077,3,0.173,4,0.132,5,0.103,7,0.29,10,0.273,11,0.012,15,0.813,17,0.282,20,0.132,21,0.009,22,0.009,29,1.608,33,1.266,34,1.85,35,0.667,37,1.266,39,3.548,41,0.739,46,2.139,62,1.262,71,2.139,73,2.089,74,2.358,89,2.309,123,2.64,131,2.463,162,2.64,196,4.513,235,4.513,292,1.216,293,1.746,306,4.208,750,3.445,1083,4.126,1084,5.033,1085,4.718,1086,4.126,1087,6.028,1088,7.043,1089,6.028,1090,6.18,1091,4.718,1092,4.718,1093,4.718,1094,5.459,1095,3.445,1096,3.445,1097,3.212,1098,2.853,1099,3.445,1100,3.445,1101,4.126,1102,4.718,1103,4.126,1104,4.718,1105,4.126,1106,4.718,1107,4.126,1108,4.718,1109,5.405,1110,4.126,1111,4.126,1112,4.126,1113,4.126]],["title/classes/FindManyIdsDTO.html",[0,0.068,932,2.508]],["body/classes/FindManyIdsDTO.html",[0,0.117,2,1.805,3,0.166,4,0.166,5,0.13,7,0.365,8,1.318,10,0.344,11,0.012,13,1.643,15,0.781,17,0.292,19,1.749,20,0.166,21,0.01,22,0.01,67,2.642,69,1.592,792,3.727,793,4.567,932,4.317,938,6.063,945,5.212,1114,5.188,1115,5.932,1116,5.932]],["title/injectables/GoogleStrategy.html",[218,2.653,292,0.816]],["body/injectables/GoogleStrategy.html",[0,0.076,3,0.131,4,0.131,5,0.102,7,0.286,10,0.27,11,0.012,15,0.806,17,0.309,20,0.131,21,0.009,22,0.009,29,1.594,33,1.249,34,1.644,35,0.657,37,1.249,39,3.515,41,0.729,46,2.119,62,1.257,71,2.119,73,2.06,74,2.325,89,2.293,123,2.345,131,2.429,162,2.622,189,4.17,218,3.919,272,3.684,273,3.684,274,3.684,275,3.684,292,1.205,293,1.722,1084,4.999,1086,4.068,1087,5.987,1088,6.611,1089,5.987,1094,5.421,1095,3.397,1096,3.397,1097,4.661,1098,2.813,1099,3.397,1100,3.397,1101,4.068,1103,4.068,1105,4.068,1107,4.068,1109,4.068,1110,4.068,1111,4.068,1112,4.068,1113,4.068,1117,4.068,1118,4.652,1119,7.275,1120,4.652,1121,4.068,1122,4.652,1123,4.652,1124,4.652,1125,4.652,1126,4.652,1127,4.652,1128,4.068,1129,4.068,1130,4.652]],["title/injectables/JwtAuthGuard.html",[139,2.165,292,0.816]],["body/injectables/JwtAuthGuard.html",[0,0.102,3,0.175,4,0.175,5,0.137,11,0.012,17,0.301,20,0.175,21,0.01,22,0.01,41,0.979,130,3.415,131,3.261,139,3.843,140,3.415,292,1.448,293,2.312,1098,3.778,1131,4.947,1132,6.247]],["title/injectables/JwtStrategy.html",[256,2.653,292,0.816]],["body/injectables/JwtStrategy.html",[0,0.083,3,0.142,4,0.142,5,0.111,7,0.312,10,0.294,11,0.012,15,0.853,17,0.308,20,0.142,21,0.009,22,0.009,29,1.686,33,1.362,34,1.362,35,0.717,37,1.362,41,0.795,50,1.594,51,3.707,71,2.471,73,3.161,81,2.315,89,2.391,104,2.433,131,2.65,162,2.734,254,3.07,256,4.147,292,1.275,293,1.879,310,3.707,384,4.439,388,5.653,392,4.568,396,3.707,407,3.707,428,2.165,1084,4.732,1095,3.707,1096,3.707,1097,3.456,1098,3.07,1099,3.707,1100,3.707,1133,4.439,1134,5.076,1135,6.48,1136,5.076,1137,5.076,1138,5.076,1139,5.076,1140,5.076,1141,5.076,1142,5.076,1143,5.076]],["title/injectables/LocalAuthGuard.html",[142,2.823,292,0.816]],["body/injectables/LocalAuthGuard.html",[0,0.102,3,0.175,4,0.175,5,0.137,11,0.012,17,0.301,20,0.175,21,0.01,22,0.01,41,0.979,130,3.415,131,3.261,142,5.012,143,4.561,292,1.448,293,2.312,1098,3.778,1131,4.947,1144,6.247]],["title/injectables/LocalStrategy.html",[258,2.653,292,0.816]],["body/injectables/LocalStrategy.html",[0,0.08,3,0.138,4,0.138,5,0.108,7,0.302,10,0.368,11,0.012,15,0.835,17,0.315,20,0.138,21,0.009,22,0.009,29,1.652,33,1.704,34,1.704,35,0.897,37,1.319,39,3.643,41,0.77,46,1.701,50,1.543,62,1.276,71,2.197,72,3.713,89,2.355,123,2.693,131,2.566,150,4.113,162,1.882,172,2.02,254,2.972,258,4.061,277,3.145,292,1.249,293,1.819,309,4.298,310,3.588,358,2.821,359,2.176,407,3.588,500,2.02,1022,5.026,1084,4.634,1095,3.588,1096,3.588,1097,3.346,1098,2.972,1099,3.588,1100,3.588,1145,4.298,1146,4.914,1147,4.914,1148,6.347,1149,4.914,1150,4.298,1151,4.914,1152,4.914]],["title/interfaces/OrderBy.html",[53,0.741,1153,2.653]],["body/interfaces/OrderBy.html",[3,0.171,4,0.171,5,0.133,7,0.375,8,1.339,10,0.353,11,0.012,20,0.204,21,0.01,22,0.01,53,1.297,55,2.334,62,1.299,427,5.13,1153,5.13,1154,4.826,1155,4.15,1156,3.686]],["title/classes/PaymentDTO.html",[0,0.068,1157,2.823]],["body/classes/PaymentDTO.html",[0,0.104,2,1.502,3,0.139,4,0.139,5,0.108,7,0.304,8,1.175,10,0.447,11,0.012,13,2.061,14,1.828,15,1.014,17,0.26,18,2.133,19,1.456,20,0.179,21,0.009,22,0.009,35,1.171,62,1.206,66,2.576,68,3.692,69,1.326,84,4.069,282,2.715,419,3.522,728,4.798,825,2.987,865,5.145,1043,5.58,1156,4.501,1157,4.335,1158,3.911,1159,7.046,1160,4.939,1161,4.939,1162,4.939,1163,4.939,1164,4.939,1165,4.939,1166,3.363,1167,3.363]],["title/controllers/PaymentsController.html",[85,1.645,228,2.823]],["body/controllers/PaymentsController.html",[0,0.057,3,0.098,4,0.098,5,0.077,7,0.216,10,0.396,11,0.012,13,1.892,15,0.899,17,0.327,20,0.098,21,0.007,22,0.007,24,2.559,29,1.311,33,1.834,34,1.834,35,0.965,37,1.834,41,0.549,43,1.68,44,2.12,45,2.012,47,1.39,50,2.145,62,1.237,64,1.066,69,0.941,71,2.042,85,1.39,87,1.39,115,3.889,116,3.091,118,1.495,123,1.342,128,2.012,129,2.12,133,3.047,134,2.12,137,2.12,139,1.83,140,1.916,141,2.12,155,2.231,200,2.12,219,3.047,228,3.431,351,2.243,408,4.392,410,2.559,428,2.516,435,2.12,452,2.518,480,2.387,482,4.671,500,1.441,538,4.384,890,2.387,967,4.799,1157,2.387,1168,3.065,1169,3.065,1170,5.159,1171,4.407,1172,5.039,1173,5.159,1174,5.159,1175,3.505,1176,3.505,1177,3.505,1178,3.99,1179,3.065,1180,3.505,1181,4.989,1182,3.505,1183,5.039,1184,3.505,1185,4.407,1186,3.505,1187,3.505,1188,3.505,1189,3.505,1190,3.505,1191,3.505,1192,3.505,1193,2.387,1194,3.065,1195,3.065,1196,3.065,1197,3.505,1198,2.559,1199,3.505,1200,3.505,1201,3.505,1202,3.065,1203,3.505,1204,3.505,1205,3.505,1206,3.505,1207,3.505,1208,3.505,1209,3.505,1210,5.039,1211,3.505,1212,3.505,1213,3.505,1214,3.065,1215,3.505]],["title/interfaces/PaymentsFilters.html",[53,0.741,1155,2.823]],["body/interfaces/PaymentsFilters.html",[3,0.167,4,0.167,5,0.131,7,0.367,8,1.322,10,0.415,11,0.012,20,0.201,21,0.01,22,0.01,53,1.28,55,2.286,62,1.29,427,3.819,1153,5.394,1154,4.726,1155,4.878,1156,4.814]],["title/modules/PaymentsModule.html",[78,1.389,212,2.823]],["body/modules/PaymentsModule.html",[0,0.077,3,0.131,4,0.131,5,0.102,11,0.012,17,0.333,20,0.131,21,0.009,22,0.009,41,0.734,78,2.061,87,2.44,152,2.782,158,2.691,204,2.245,205,2.832,212,5.805,217,3.443,219,4.702,220,2.604,221,3.316,222,3.443,223,3.212,224,2.446,225,2.446,227,3.363,228,4.677,311,2.689,312,2.245,313,2.689,314,1.926,319,2.833,320,2.833,1196,4.097,1216,4.685,1217,4.685,1218,4.685,1219,4.685]],["title/injectables/PaymentsService.html",[219,2.508,292,0.816]],["body/injectables/PaymentsService.html",[0,0.036,3,0.061,4,0.061,5,0.048,7,0.135,10,0.256,11,0.012,15,0.85,17,0.286,20,0.061,21,0.005,22,0.005,29,0.915,33,1.734,34,1.734,35,0.913,37,1.668,41,0.343,42,1.324,46,1.218,50,1.856,54,1.686,71,1.915,73,1.558,77,2.9,79,1.837,80,1.923,89,2.56,104,2.653,123,1.689,152,1.808,155,1.558,158,1.748,162,1.347,163,3.177,165,2.532,172,3.016,180,2.786,217,2.751,219,2.127,220,1.692,221,0.933,222,2.237,270,3.878,282,0.933,292,0.692,293,0.81,311,1.256,312,1.049,313,1.256,314,0.9,319,1.324,320,1.324,340,1.4,356,4.418,358,2.9,359,2.237,386,1.953,392,1.4,403,1.49,410,2.569,414,1.196,418,1.324,419,2.204,424,2.667,427,2.251,428,2.918,447,1.598,452,1.094,474,1.4,511,1.143,518,2.532,535,2.822,538,3.393,571,1.4,574,2.019,622,4.025,623,3.221,647,1.914,666,1.49,685,2.251,728,3.44,730,1.598,882,1.598,900,3.003,909,1.598,967,4.134,991,1.598,995,1.598,1022,1.733,1025,1.733,1043,4.681,1051,1.758,1153,4.557,1155,1.49,1156,1.324,1157,1.49,1166,2.395,1167,3.44,1169,3.076,1170,3.076,1171,3.076,1173,3.076,1174,3.076,1178,5.116,1179,3.076,1181,4.717,1185,3.857,1193,1.49,1194,1.914,1195,1.914,1220,1.914,1221,3.518,1222,3.518,1223,3.518,1224,4.041,1225,2.189,1226,3.518,1227,2.189,1228,2.189,1229,3.518,1230,2.189,1231,3.518,1232,2.189,1233,3.518,1234,2.189,1235,3.518,1236,2.189,1237,3.518,1238,2.189,1239,3.076,1240,2.189,1241,2.189,1242,2.189,1243,3.076,1244,2.189,1245,1.914,1246,1.733,1247,1.914,1248,1.914,1249,1.733,1250,1.914,1251,2.189,1252,2.189,1253,2.189,1254,2.189,1255,2.189,1256,2.189,1257,2.189,1258,2.189,1259,2.189,1260,2.189,1261,4.411,1262,2.189,1263,2.189,1264,3.518,1265,2.189,1266,4.411,1267,2.189,1268,2.189,1269,2.189,1270,2.189,1271,3.518,1272,2.189]],["title/interfaces/PicturesTags.html",[53,0.741,831,2.653]],["body/interfaces/PicturesTags.html",[0,0.103,3,0.11,4,0.11,5,0.086,7,0.242,8,1.009,10,0.439,11,0.012,12,2.627,14,2.022,17,0.223,18,2.473,19,1.159,20,0.2,21,0.008,22,0.008,35,1.16,38,2.053,41,0.616,53,0.977,55,1.506,62,1.371,66,1.361,75,2.065,81,1.275,413,3.798,510,2.377,530,3.605,624,2.377,625,2.377,626,2.377,775,2.149,776,2.149,780,2.257,781,2.516,782,2.516,783,2.516,784,2.516,785,2.516,786,1.884,787,2.516,788,2.677,789,3.605,790,2.731,792,3.544,793,4.565,798,4.019,802,4.565,810,2.516,811,2.677,812,2.677,813,2.677,814,2.257,815,2.871,816,2.516,817,2.516,818,3.99,819,2.516,820,2.516,821,2.516,822,2.516,823,2.516,824,2.516,825,2.377,826,4.622,827,2.516,828,2.677,829,2.516,830,2.677,831,3.497,832,4.105,833,4.622,834,4.622,835,4.957,836,4.622,837,4.957,838,4.622]],["title/injectables/PrismaService.html",[220,1.389,292,0.816]],["body/injectables/PrismaService.html",[0,0.087,3,0.15,4,0.15,5,0.117,7,0.329,10,0.31,11,0.012,15,0.881,17,0.274,20,0.15,21,0.009,22,0.009,27,2.923,29,1.743,33,1.435,34,1.435,35,0.756,37,1.797,41,0.838,64,1.627,89,2.736,172,2.753,220,2.243,292,1.317,293,1.979,1098,4.05,1273,4.676,1274,7.312,1275,6.697,1276,8.052,1277,6.697,1278,7.664,1279,5.347,1280,4.676,1281,5.347,1282,5.347,1283,5.347,1284,5.347]],["title/interfaces/ProductSizes.html",[53,0.741,802,2.653]],["body/interfaces/ProductSizes.html",[0,0.103,3,0.111,4,0.111,5,0.087,7,0.244,8,1.016,10,0.449,11,0.012,12,2.857,14,2.036,17,0.225,18,2.481,19,1.17,20,0.201,21,0.008,22,0.008,35,0.777,38,2.073,41,0.622,53,0.983,55,1.521,62,1.314,66,1.374,75,2.074,81,1.287,413,3.818,510,4.123,530,3.624,624,2.401,625,2.401,626,2.401,775,3.727,776,3.727,780,2.279,781,2.54,782,2.54,783,2.54,784,2.54,785,2.54,786,1.903,787,2.54,788,2.703,789,3.624,790,2.75,792,3.559,793,4.581,798,4.04,802,4.362,810,2.54,811,2.703,812,2.703,813,2.703,814,2.279,815,2.899,816,2.54,817,2.54,818,4.017,819,2.54,820,4.362,821,4.362,822,4.362,823,4.362,824,4.362,825,2.401,826,3.746,827,2.54,828,2.703,829,2.54,830,2.703,831,2.54,832,2.401,833,2.703,834,2.703,835,2.899,836,2.703,837,2.899,838,2.703]],["title/controllers/ProductsController.html",[85,1.645,1285,3.028]],["body/controllers/ProductsController.html",[0,0.037,3,0.063,4,0.063,5,0.049,7,0.138,10,0.416,11,0.012,13,1.655,15,0.786,17,0.275,20,0.063,21,0.005,22,0.005,29,0.933,33,1.604,34,1.684,35,0.844,37,1.604,41,0.351,50,1.876,51,1.637,62,1.21,64,0.682,69,0.602,75,2.097,81,0.727,85,0.889,87,0.889,117,3.278,121,4.171,128,1.287,134,3.388,137,1.356,166,3.216,221,1.53,270,1.873,282,1.53,428,2.548,435,1.356,452,2.8,459,1.435,473,3.741,475,2.925,479,3.053,480,1.527,481,1.527,482,2.841,488,1.287,500,0.922,510,2.711,512,1.527,518,1.287,519,1.961,538,2.573,572,1.961,613,4.48,624,2.169,625,1.356,626,1.356,657,2.451,661,2.169,663,1.527,666,2.442,775,1.226,776,1.226,780,3.741,783,1.435,784,4.659,785,2.869,786,2.149,787,1.435,789,2.573,790,1.121,792,1.873,817,1.435,820,2.295,821,2.869,822,2.295,823,1.435,824,1.435,825,2.169,827,1.435,832,2.169,833,2.442,834,2.442,836,1.527,838,2.442,864,1.637,918,2.841,932,3.614,933,3.137,934,3.137,935,3.137,936,1.961,938,1.776,942,3.278,946,1.637,967,3.278,972,1.961,973,1.961,974,1.961,975,1.961,976,1.961,977,1.961,978,1.961,979,1.961,980,1.961,981,1.961,982,1.961,983,1.961,1156,2.711,1181,1.637,1202,1.961,1214,1.961,1285,2.619,1286,1.961,1287,3.137,1288,3.137,1289,4.483,1290,3.587,1291,4.483,1292,1.961,1293,3.137,1294,3.137,1295,3.587,1296,3.587,1297,3.587,1298,2.242,1299,2.242,1300,3.137,1301,1.961,1302,2.242,1303,1.961,1304,3.587,1305,2.242,1306,2.242,1307,3.741,1308,2.242,1309,3.587,1310,2.242,1311,3.587,1312,2.242,1313,2.242,1314,2.242,1315,3.587,1316,2.242,1317,2.242,1318,2.841,1319,3.137,1320,3.587,1321,3.137,1322,2.242,1323,2.242,1324,1.287,1325,1.961,1326,1.961,1327,1.961,1328,3.587,1329,2.242,1330,2.242,1331,2.242,1332,2.242,1333,2.242,1334,2.242,1335,3.587,1336,5.123,1337,2.242,1338,2.242,1339,2.242,1340,2.242,1341,3.587,1342,5.123,1343,2.242,1344,2.242,1345,2.242,1346,2.242,1347,2.242,1348,2.242,1349,2.242,1350,2.242,1351,2.242,1352,2.242,1353,2.242,1354,2.242,1355,2.242,1356,2.242,1357,4.483,1358,2.242,1359,2.242,1360,2.242,1361,5.123,1362,2.242,1363,2.242,1364,2.242,1365,2.242,1366,5.123,1367,2.242,1368,2.242,1369,2.242,1370,2.242,1371,2.242,1372,2.242,1373,2.242,1374,2.242,1375,2.242,1376,2.242,1377,2.242,1378,2.242,1379,2.242,1380,2.242,1381,2.242,1382,2.242,1383,2.242,1384,2.242,1385,2.242,1386,3.587,1387,2.242,1388,2.242,1389,2.242,1390,2.242,1391,2.242,1392,2.242,1393,2.242,1394,2.242,1395,2.242,1396,2.242,1397,2.242,1398,2.242,1399,2.242,1400,2.242,1401,2.242,1402,2.242,1403,2.242,1404,2.242,1405,4.483,1406,3.587,1407,3.587,1408,1.961,1409,1.961,1410,1.961,1411,2.242,1412,1.961,1413,1.961,1414,3.587,1415,1.961,1416,1.961,1417,2.242,1418,2.242,1419,2.242,1420,2.242,1421,2.242,1422,2.242,1423,2.242,1424,2.242,1425,2.242,1426,2.242,1427,2.242,1428,2.242,1429,2.242]],["title/modules/ProductsModule.html",[78,1.389,213,2.823]],["body/modules/ProductsModule.html",[0,0.091,3,0.156,4,0.156,5,0.122,11,0.012,17,0.318,20,0.156,21,0.01,22,0.01,41,0.87,78,2.297,87,2.72,204,2.662,205,3.157,213,5.666,220,2.722,221,3.466,223,3.58,224,2.9,225,2.9,227,3.749,314,2.283,1285,5.432,1326,4.858,1430,5.554,1431,5.554,1432,5.554,1433,5.554]],["title/injectables/ProductsService.html",[221,1.768,292,0.816]],["body/injectables/ProductsService.html",[0,0.03,3,0.051,4,0.051,5,0.04,7,0.113,10,0.315,11,0.012,15,0.793,17,0.206,20,0.051,21,0.004,22,0.004,29,0.792,33,1.618,34,1.618,35,0.852,37,1.546,41,0.287,46,2.342,50,1.808,51,1.338,62,1.013,64,0.557,75,1.533,81,1.634,89,2.467,104,2.605,162,0.702,172,2.572,220,1.521,221,1.298,270,1.589,282,0.781,292,0.599,293,0.678,314,0.753,340,1.173,358,2.239,359,2.407,386,3.451,424,1.108,427,1.947,428,2.99,429,1.173,452,1.521,475,3.007,500,0.753,510,3.645,511,1.589,518,1.052,535,2.496,538,2.239,567,2.409,571,1.173,574,1.746,622,1.248,624,2.747,625,3.047,626,2.359,661,1.84,673,3.46,716,1.451,775,3.295,776,3.148,780,1.052,783,2.907,784,3.478,785,2.496,786,1.87,787,2.907,788,2.656,789,3.46,790,2.27,817,1.947,820,4.003,821,3.857,822,3.857,823,3.857,824,2.496,918,2.409,932,3.483,942,2.496,946,1.338,967,1.173,1051,0.916,1067,1.451,1070,1.603,1072,2.409,1075,2.661,1078,1.603,1079,1.451,1080,1.451,1081,1.603,1082,2.661,1153,4.235,1166,3.431,1167,3.093,1181,2.222,1287,2.661,1288,2.661,1292,2.661,1300,2.661,1301,2.661,1303,2.661,1324,1.052,1325,1.603,1327,1.603,1408,1.603,1434,1.603,1435,3.043,1436,3.043,1437,3.043,1438,1.832,1439,1.832,1440,1.832,1441,1.832,1442,3.043,1443,1.832,1444,3.043,1445,1.832,1446,2.661,1447,1.832,1448,3.043,1449,1.832,1450,3.043,1451,3.043,1452,3.043,1453,3.043,1454,3.043,1455,3.043,1456,3.043,1457,3.901,1458,1.832,1459,1.832,1460,1.832,1461,3.043,1462,1.832,1463,1.832,1464,3.043,1465,1.832,1466,1.832,1467,1.603,1468,1.832,1469,1.832,1470,3.043,1471,3.043,1472,3.043,1473,2.409,1474,3.972,1475,3.972,1476,3.043,1477,3.043,1478,3.043,1479,3.043,1480,3.043,1481,3.412,1482,1.832,1483,1.832,1484,3.043,1485,2.661,1486,3.043,1487,3.043,1488,3.043,1489,3.043,1490,3.043,1491,1.832,1492,1.832,1493,1.832,1494,1.832,1495,2.661,1496,1.832,1497,1.832,1498,3.043,1499,3.043,1500,3.043,1501,1.832]],["title/classes/QuantityShortDTO.html",[0,0.068,594,3.028]],["body/classes/QuantityShortDTO.html",[0,0.098,2,1.377,3,0.127,4,0.127,5,0.099,7,0.278,8,1.11,10,0.434,11,0.012,12,2.673,13,1.993,14,2.663,15,0.986,17,0.246,18,2.014,19,1.334,20,0.127,21,0.008,22,0.008,62,1.166,66,1.566,67,2.772,69,1.215,75,2.189,81,1.468,155,2.663,444,3.692,456,4.752,511,4.021,518,3.452,594,4.391,636,5.259,637,4.391,654,5.906,655,5.906,656,5.906,660,5.906,774,4.9,1502,3.958,1503,4.526,1504,4.526,1505,4.526,1506,6.014,1507,6.014,1508,4.526,1509,4.526,1510,5.259,1511,6.014,1512,6.014,1513,4.526,1514,4.526,1515,6.014,1516,5.259,1517,6.014,1518,4.526,1519,4.526,1520,4.526,1521,4.526]],["title/interfaces/Request.html",[47,1.645,53,0.741]],["body/interfaces/Request.html",[0,0.081,3,0.139,4,0.139,5,0.109,7,0.305,8,1.179,10,0.288,11,0.012,17,0.323,20,0.139,21,0.009,22,0.009,27,2.713,35,0.903,41,0.777,46,2.211,47,2.958,53,0.887,55,1.901,89,1.662,115,4.077,116,3.574,118,2.117,152,2.285,155,2.829,157,3.93,158,1.718,159,3.379,165,2.849,172,2.04,292,1.257,312,2.379,444,3.492,459,4.087,483,3.379,488,3.666,500,2.04,555,3.379,880,3.93,881,3.624,885,3.624,886,4.664,887,4.664,889,4.664,890,3.379,891,3.624,892,3.624,893,3.624,894,3.624,895,3.93,896,4.34]],["title/interfaces/Request-1.html",[47,1.372,53,0.618,657,1.89]],["body/interfaces/Request-1.html",[0,0.083,3,0.143,4,0.143,5,0.111,7,0.313,8,1.198,10,0.295,11,0.012,17,0.308,20,0.143,21,0.009,22,0.009,27,2.782,35,0.917,41,0.797,43,3.608,46,2.246,47,2.986,53,0.91,55,1.949,89,1.704,118,3.21,123,2.486,158,2.246,172,2.092,292,1.277,459,4.153,483,3.465,488,3.726,500,2.092,551,3.256,552,3.716,885,3.716,886,4.739,887,4.739,889,4.739,891,3.716,892,3.716,893,3.716,894,3.716,897,4.03,900,3.465,902,4.03,903,3.716,904,4.739,905,4.451,906,4.451]],["title/controllers/ReviewsController.html",[85,1.645,1522,3.028]],["body/controllers/ReviewsController.html",[0,0.053,3,0.092,4,0.092,5,0.072,7,0.201,10,0.416,11,0.012,13,1.84,15,0.875,17,0.307,20,0.092,21,0.007,22,0.007,29,1.247,33,1.784,34,1.784,35,0.939,37,1.784,41,0.512,43,2.297,44,1.978,45,1.877,50,2.087,62,1.3,64,0.995,69,0.878,75,1.725,85,1.297,87,1.297,117,2.093,121,3.066,123,2.748,128,1.877,129,1.978,130,1.788,133,2.898,134,3.429,137,1.978,139,1.708,140,1.788,141,1.978,166,1.877,200,1.978,386,1.448,403,2.227,428,3.202,435,1.978,452,2.834,456,3.776,479,2.227,480,2.227,481,2.227,489,2.59,500,1.345,503,2.86,512,2.227,657,1.788,661,3.776,663,2.227,666,3.263,786,1.568,790,1.635,832,2.898,839,4.729,842,2.227,843,2.227,844,2.227,904,3.499,926,2.59,1128,2.86,1318,4.944,1324,1.877,1412,2.86,1413,2.86,1415,2.86,1416,2.86,1522,3.499,1523,2.86,1524,2.86,1525,4.959,1526,4.191,1527,4.191,1528,4.191,1529,4.959,1530,3.271,1531,3.271,1532,3.271,1533,4.959,1534,2.86,1535,4.792,1536,3.271,1537,2.86,1538,4.792,1539,3.271,1540,2.86,1541,4.792,1542,3.271,1543,2.86,1544,5.46,1545,4.729,1546,4.191,1547,3.271,1548,3.271,1549,4.191,1550,2.86,1551,3.066,1552,2.86,1553,3.271,1554,3.271,1555,3.271,1556,2.86,1557,4.792,1558,4.792,1559,4.792,1560,3.271,1561,3.271,1562,3.271,1563,3.271,1564,3.271,1565,3.271,1566,3.271,1567,3.271,1568,3.271,1569,3.271,1570,3.271,1571,3.271,1572,3.271,1573,3.271]],["title/modules/ReviewsModule.html",[78,1.389,214,2.823]],["body/modules/ReviewsModule.html",[0,0.091,3,0.156,4,0.156,5,0.122,11,0.012,17,0.318,20,0.156,21,0.01,22,0.01,41,0.87,78,2.297,87,2.72,204,2.662,205,3.157,214,5.666,220,2.722,223,3.58,224,2.9,225,2.9,227,3.749,314,2.283,1522,5.432,1551,5.201,1552,4.858,1574,4.858,1575,4.858,1576,5.554,1577,5.554]],["title/injectables/ReviewsService.html",[292,0.816,1551,2.653]],["body/injectables/ReviewsService.html",[0,0.034,3,0.058,4,0.058,5,0.045,7,0.127,10,0.352,11,0.012,15,0.86,17,0.22,20,0.058,21,0.005,22,0.005,29,0.873,33,1.754,34,1.754,35,0.923,37,1.696,41,0.323,46,2.378,50,2.052,62,1.224,75,1.485,89,2.634,104,2.907,162,0.791,172,2.974,220,1.635,270,1.752,282,0.88,292,0.66,293,0.764,314,0.849,340,1.321,358,3.481,359,2.799,386,3.53,419,2.44,424,2.029,428,3.296,429,1.321,456,3.822,475,3.167,500,0.849,512,2.285,518,1.185,535,3.881,567,2.658,571,1.321,574,1.926,622,1.406,623,2.45,646,1.635,648,1.806,649,2.935,661,1.249,672,1.806,673,1.926,699,1.806,716,1.635,728,1.406,786,0.99,790,2.44,832,1.249,839,1.406,842,3.325,843,3.325,844,3.325,904,2.45,1067,1.635,1324,1.185,1446,2.935,1467,1.806,1473,5.442,1485,2.935,1524,4.697,1525,2.935,1526,2.935,1527,2.935,1528,2.935,1529,2.935,1533,2.935,1534,2.935,1537,2.935,1540,2.935,1543,2.935,1544,3.708,1545,3.325,1549,2.935,1550,1.806,1551,2.147,1556,2.935,1578,1.806,1579,3.356,1580,3.356,1581,2.065,1582,3.356,1583,2.065,1584,2.065,1585,2.065,1586,2.065,1587,2.065,1588,3.356,1589,2.065,1590,3.356,1591,2.065,1592,2.065,1593,4.203,1594,2.065,1595,2.065,1596,2.065,1597,5.371,1598,2.065,1599,2.065,1600,3.356,1601,2.065,1602,2.065,1603,2.065,1604,2.065,1605,3.356,1606,2.065,1607,2.065,1608,3.356,1609,3.356,1610,2.065,1611,2.065,1612,2.065,1613,3.356,1614,2.065,1615,2.065,1616,3.356,1617,4.883,1618,3.356,1619,3.356,1620,3.356,1621,3.356,1622,3.356,1623,1.806,1624,4.24,1625,4.24,1626,4.24,1627,3.356,1628,2.065,1629,2.065,1630,2.065,1631,2.065,1632,2.065,1633,3.356,1634,2.065]],["title/classes/SerializeInterceptor.html",[0,0.068,754,3.028]],["body/classes/SerializeInterceptor.html",[0,0.112,2,1.432,3,0.132,4,0.132,5,0.103,7,0.29,10,0.358,11,0.012,15,0.812,17,0.31,20,0.173,21,0.009,22,0.009,27,3.374,29,1.606,31,4.976,33,1.656,34,1.656,35,0.872,36,3.437,37,1.263,40,5.027,41,0.737,42,2.846,47,2.448,50,2.162,53,0.841,162,1.803,270,2.457,359,2.084,386,2.084,431,3.732,500,1.935,740,4.202,741,3.437,742,6.391,743,4.116,744,6.021,745,4.116,746,4.116,747,4.116,748,4.116,749,4.116,750,3.437,751,3.727,752,4.116,753,4.116,754,4.506,755,4.887,756,5.397,757,6.391,758,4.887,759,4.116,760,3.727,761,4.116,762,4.116,763,4.116,764,4.116,765,4.116,1635,6.171,1636,4.707,1637,4.707,1638,4.707]],["title/controllers/StripeController.html",[85,1.645,1639,3.028]],["body/controllers/StripeController.html",[0,0.064,3,0.11,4,0.11,5,0.086,11,0.012,17,0.337,20,0.11,21,0.008,22,0.008,41,0.612,43,1.873,45,2.243,46,1.353,47,2.159,50,1.227,69,1.049,77,3.594,85,1.55,87,1.55,89,1.309,99,3.482,101,2.363,115,3.423,116,2.608,118,1.667,128,3.124,129,2.363,132,3.095,133,3.291,138,2.854,139,2.041,140,2.137,141,2.363,152,1.947,155,2.41,158,1.884,162,1.497,163,4.086,164,3.418,165,2.243,172,2.574,178,3.418,200,2.363,217,2.773,220,1.823,222,2.773,311,2.243,312,1.873,314,1.607,320,2.363,351,2.501,358,2.243,359,1.731,386,1.731,408,3.706,435,2.363,447,2.854,452,2.72,472,2.661,474,2.501,511,2.041,574,2.243,685,3.482,730,2.854,890,2.661,900,2.661,907,2.854,909,2.854,991,2.854,995,2.854,1025,3.095,1051,1.953,1198,2.854,1224,2.854,1239,4.759,1243,4.759,1245,3.418,1246,3.095,1247,3.418,1248,3.418,1249,3.095,1250,3.418,1639,3.974,1640,3.418,1641,3.908,1642,3.908,1643,3.908,1644,3.908,1645,3.908,1646,3.418,1647,3.908,1648,3.908,1649,3.418,1650,3.908,1651,3.908,1652,3.908,1653,3.908]],["title/modules/StripeModule.html",[78,1.389,215,2.823]],["body/modules/StripeModule.html",[0,0.076,3,0.13,4,0.13,5,0.102,11,0.012,17,0.332,20,0.13,21,0.009,22,0.009,41,0.727,78,2.048,87,2.425,152,2.905,158,2.684,204,2.224,205,2.815,211,2.97,215,5.829,217,3.435,220,2.719,221,3.308,222,3.435,223,3.192,224,2.423,225,2.423,227,3.343,311,2.664,312,2.224,313,2.664,314,1.908,320,2.807,1639,4.993,1646,4.059,1654,4.641,1655,4.641,1656,4.641,1657,4.641,1658,4.641]],["title/injectables/StripeService.html",[222,1.836,292,0.816]],["body/injectables/StripeService.html",[0,0.071,3,0.121,4,0.121,5,0.095,7,0.266,8,1.076,10,0.382,11,0.012,15,0.929,17,0.311,20,0.121,21,0.008,22,0.008,29,1.517,33,1.771,34,1.98,35,0.932,37,1.565,41,0.677,50,1.831,62,1.231,71,2.445,89,2.545,104,2.071,158,1.496,162,1.655,163,3.787,217,1.914,220,1.447,222,2.582,250,3.422,270,2.256,292,1.147,293,1.599,311,2.48,314,1.776,320,2.613,359,1.914,386,2.922,410,3.155,500,1.776,909,3.155,991,4.257,1224,5.672,1249,4.617,1649,5.099,1659,3.779,1660,6.598,1661,5.83,1662,4.321,1663,7.599,1664,5.83,1665,5.83,1666,4.321,1667,5.83,1668,4.321,1669,4.321,1670,4.321,1671,4.321,1672,4.321,1673,4.321,1674,4.321,1675,4.321,1676,4.321,1677,4.321,1678,4.321,1679,4.321,1680,4.321,1681,4.321,1682,4.321]],["title/classes/Sustainable.html",[0,0.068,789,2.38]],["body/classes/Sustainable.html",[0,0.107,2,1.295,3,0.119,4,0.119,5,0.093,7,0.262,8,1.065,10,0.335,11,0.012,12,2.672,13,1.179,14,2.136,15,0.759,17,0.236,18,2.534,19,1.255,20,0.206,21,0.008,22,0.008,35,0.815,38,3.013,41,0.667,53,1.032,62,1.338,66,1.473,75,2.354,81,1.38,413,3.96,510,2.574,530,4.029,624,2.574,625,2.574,626,2.574,775,2.327,776,2.327,780,2.443,781,4.19,782,2.724,783,2.724,784,2.724,785,2.724,786,2.04,787,2.724,788,2.899,789,4.029,790,2.884,792,3.665,793,4.695,798,4.492,802,4.19,810,2.724,811,2.899,812,2.899,813,2.899,814,2.443,815,3.108,816,2.724,817,4.19,818,4.781,819,2.724,820,2.724,821,2.724,822,2.724,823,2.724,824,2.724,825,2.574,826,3.93,827,2.724,828,2.899,829,2.724,830,2.899,831,2.724,832,2.574,833,2.899,834,2.899,835,3.108,836,2.899,837,3.108,838,2.899,1683,4.257,1684,4.257]],["title/classes/TokenDto.html",[0,0.068,1685,3.028]],["body/classes/TokenDto.html",[0,0.123,2,1.728,3,0.159,4,0.159,5,0.124,7,0.349,8,1.283,10,0.329,11,0.012,13,1.573,15,0.747,17,0.328,19,1.674,20,0.159,21,0.01,22,0.01,54,2.722,62,1.126,63,3.105,64,1.728,66,1.966,67,2.573,69,1.525,83,3.755,348,3.435,430,5.076,431,3.435,1051,2.839,1685,5.076,1686,4.968,1687,4.498,1688,5.68]],["title/classes/Total_cartDTO.html",[0,0.068,619,3.028]],["body/classes/Total_cartDTO.html",[0,0.114,2,1.733,3,0.16,4,0.16,5,0.125,7,0.35,8,1.286,10,0.404,11,0.012,12,2.333,13,1.928,14,2.577,15,0.916,17,0.285,18,2.333,19,1.679,20,0.16,21,0.01,22,0.01,62,1.128,66,1.972,67,2.784,69,1.529,419,3.759,444,4.112,619,5.085,871,3.879,987,4.982,1689,4.982,1690,5.696,1691,5.696]],["title/classes/UpdateReviewDto.html",[0,0.068,1545,2.823]],["body/classes/UpdateReviewDto.html",[0,0.088,2,1.18,3,0.109,4,0.109,5,0.085,7,0.239,8,0.999,10,0.446,11,0.012,12,2.744,13,2.089,14,2.497,15,0.993,17,0.221,18,2.088,19,1.143,20,0.109,21,0.008,22,0.008,38,2.826,62,1.15,66,2.664,67,1.435,68,3.689,69,1.041,75,2.379,530,3.873,673,4.418,767,4.081,786,2.989,790,3.548,792,2.826,798,4.318,810,3.464,816,3.99,819,2.481,841,3.071,842,4.246,843,4.246,844,4.246,847,3.392,848,3.392,849,3.392,850,3.392,861,3.392,862,3.392,863,3.392,864,4.927,1516,6.732,1545,3.686,1623,5.453,1692,6.732,1693,5.413,1694,3.878,1695,3.878,1696,3.878,1697,7.698,1698,6.235,1699,3.878,1700,3.878,1701,3.878,1702,3.878,1703,3.878]],["title/classes/UserCartDTO.html",[0,0.068,432,2.823]],["body/classes/UserCartDTO.html",[0,0.106,2,1.556,3,0.144,4,0.144,5,0.112,7,0.315,8,1.202,9,2.556,10,0.437,11,0.012,13,1.984,15,0.943,17,0.293,20,0.183,21,0.009,22,0.009,53,0.914,62,1.311,67,2.791,69,1.373,71,2.479,116,3.816,282,3.055,417,2.671,418,3.093,419,2.556,421,4.332,422,3.093,426,4.051,427,3.273,428,3.216,429,3.273,430,5.507,431,3.093,432,4.434,1687,5.157,1704,5.115,1705,5.115,1706,5.115,1707,5.115,1708,5.115]],["title/classes/UserDto.html",[0,0.068,118,1.768]],["body/classes/UserDto.html",[0,0.104,2,1.227,3,0.113,4,0.113,5,0.088,7,0.248,8,1.027,10,0.463,11,0.012,13,2.211,15,1.05,17,0.294,19,1.189,20,0.113,21,0.008,22,0.008,35,0.97,38,2.905,54,1.934,62,1.327,63,4.069,64,1.227,66,2.73,67,2.823,68,3.451,69,1.083,71,2.204,73,2.82,79,3.324,80,3.481,81,2.065,82,3.655,83,3.182,118,2.372,348,2.44,392,4.074,428,2.715,430,5.83,431,2.44,865,2.946,1036,3.528,1051,2.016,1687,5.042,1709,3.528,1710,5.563,1711,4.034,1712,7.2,1713,4.034,1714,4.034,1715,4.034,1716,4.034,1717,4.034,1718,6.367,1719,4.034,1720,4.034,1721,4.034,1722,4.034,1723,4.034]],["title/controllers/UsersController.html",[85,1.645,1724,3.028]],["body/controllers/UsersController.html",[0,0.049,3,0.085,4,0.085,5,0.066,7,0.185,10,0.405,11,0.012,12,1.01,13,1.779,15,0.845,17,0.324,20,0.085,21,0.006,22,0.006,29,1.174,33,1.725,34,1.725,35,0.908,37,1.725,41,0.472,43,2.591,45,1.731,47,1.196,50,1.884,58,2.387,59,2.387,60,2.387,61,2.387,63,2.466,64,0.917,69,0.809,70,4.315,71,1.561,72,1.507,73,1.335,74,1.507,75,1.825,79,1.574,81,1.463,82,1.731,85,1.196,87,1.196,89,1.811,101,4.227,117,1.929,118,3.317,121,3.84,123,2.815,128,1.731,129,1.823,130,1.648,133,3.629,134,3.269,137,1.823,139,1.574,140,1.648,141,2.728,142,2.053,143,2.201,146,2.053,147,2.387,150,2.822,151,2.201,152,1.079,158,1.561,160,2.637,162,1.155,163,2.59,166,2.59,167,2.637,168,2.387,200,3.269,288,2.387,312,1.445,324,3.573,334,2.637,336,3.573,348,1.823,435,1.823,452,2.255,479,3.072,481,3.072,488,1.731,489,2.387,493,2.637,538,3.103,661,3.629,666,4.086,683,2.387,786,2.876,829,1.929,900,2.053,902,2.387,903,2.201,926,2.387,942,4.111,1318,4.752,1319,5.248,1321,5.248,1324,1.731,1546,5.248,1685,2.201,1724,3.294,1725,2.637,1726,3.015,1727,3.945,1728,4.511,1729,3.945,1730,3.015,1731,3.015,1732,3.015,1733,2.637,1734,3.015,1735,3.015,1736,3.015,1737,4.511,1738,3.015,1739,6.001,1740,3.015,1741,3.015,1742,2.637,1743,3.015,1744,3.015,1745,3.015,1746,3.015,1747,3.015,1748,3.015,1749,3.015,1750,3.015,1751,3.015,1752,3.015,1753,3.015,1754,3.015,1755,3.015,1756,3.015,1757,3.015,1758,3.015,1759,3.015,1760,3.015,1761,3.015,1762,3.015,1763,3.015,1764,3.015,1765,3.015,1766,3.015,1767,3.015,1768,3.015,1769,3.015,1770,3.015]],["title/modules/UsersModule.html",[78,1.389,216,2.653]],["body/modules/UsersModule.html",[0,0.071,3,0.121,4,0.121,5,0.095,10,0.251,11,0.012,15,0.57,17,0.334,20,0.121,21,0.008,22,0.008,29,1.127,33,1.162,34,1.162,35,0.612,37,1.162,41,0.678,78,1.956,87,2.316,150,3.97,151,3.162,152,2.721,158,2.632,204,2.076,205,2.688,216,5.411,217,3.367,220,2.547,221,3.243,222,3.367,223,3.048,224,2.261,225,2.261,227,3.192,230,3.429,231,4.624,232,5.598,234,3.429,235,3.162,252,4.624,253,2.949,312,2.076,313,2.486,314,1.78,319,2.619,320,2.619,551,2.771,553,3.787,556,3.787,903,3.162,1724,4.823,1771,4.33,1772,4.33,1773,4.33,1774,4.33,1775,4.33,1776,4.33]],["title/injectables/UsersService.html",[158,1.435,292,0.816]],["body/injectables/UsersService.html",[0,0.044,3,0.076,4,0.076,5,0.059,7,0.166,10,0.293,11,0.012,12,1.392,15,0.851,17,0.251,20,0.076,21,0.006,22,0.006,29,1.081,33,1.736,34,1.736,35,0.914,37,1.644,41,0.424,46,2.406,50,2.115,62,1.048,63,2.272,71,2.406,72,2.838,73,2.241,74,2.529,79,2.642,80,2.766,81,1.348,82,1.553,83,2.077,89,2.6,104,2.936,123,2.175,158,1.438,162,1.036,172,2.769,220,1.902,237,2.366,292,0.818,293,1.001,336,3.291,341,2.366,342,3.035,343,2.366,344,2.143,345,2.366,346,2.366,355,2.143,363,4.425,364,2.366,365,2.366,367,2.366,368,2.366,369,4.425,370,2.366,386,3.516,403,2.83,428,2.758,500,1.112,571,1.731,574,2.386,661,2.513,683,3.291,942,3.238,1029,3.635,1035,2.366,1051,2.077,1495,3.635,1727,3.635,1729,3.635,1733,3.635,1742,3.635,1777,2.143,1778,3.633,1779,4.156,1780,4.156,1781,2.706,1782,4.156,1783,2.706,1784,2.706,1785,4.156,1786,2.706,1787,4.156,1788,2.706,1789,2.706,1790,2.706,1791,4.156,1792,2.706,1793,7.512,1794,2.706,1795,2.706,1796,4.156,1797,4.156,1798,4.156,1799,4.156,1800,4.156,1801,4.156,1802,2.706,1803,5.06,1804,4.156,1805,4.156,1806,2.706,1807,2.706,1808,5.06,1809,4.156,1810,4.156,1811,4.156,1812,4.156,1813,2.706,1814,4.156,1815,4.156,1816,2.706]],["title/classes/addProductDTO.html",[0,0.068,458,2.823]],["body/classes/addProductDTO.html",[0,0.101,2,1.432,3,0.132,4,0.132,5,0.103,7,0.29,8,1.139,10,0.424,11,0.012,12,2.067,13,2.023,14,2.284,15,0.962,17,0.282,18,2.306,19,1.387,20,0.132,21,0.009,22,0.009,35,0.872,62,1.184,64,1.432,66,2.136,67,2.704,68,2.958,69,1.263,75,2.094,81,2.61,155,2.084,414,3.374,444,3.764,456,4.588,458,4.202,475,3.815,511,3.222,523,5.027,657,3.374,659,5.336,767,2.846,768,5.397,771,4.887,772,3.727,774,4.202,775,3.374,776,2.573,814,2.702,871,3.205,1817,4.116,1818,4.707,1819,4.707,1820,4.707,1821,4.707,1822,4.116,1823,4.707,1824,4.116]],["title/classes/addProductDataDTO.html",[0,0.068,453,3.028]],["body/classes/addProductDataDTO.html",[0,0.107,2,1.564,3,0.144,4,0.144,5,0.112,7,0.316,8,1.206,10,0.379,11,0.012,12,2.188,13,1.809,14,2.418,15,0.86,17,0.294,18,1.722,19,1.515,20,0.144,21,0.009,22,0.009,35,0.923,64,1.564,66,2.261,67,2.418,68,3.131,69,1.38,75,1.987,81,2.658,414,3.572,453,4.77,475,3.945,511,3.411,523,5.244,657,3.572,659,5.517,767,3.109,771,5.174,772,4.071,774,3.501,775,3.572,776,2.811,814,2.951,1822,4.496,1824,4.496,1825,4.496,1826,5.141,1827,5.141]],["title/interfaces/adressBillCreate.html",[53,0.741,1828,2.823]],["body/interfaces/adressBillCreate.html",[3,0.155,4,0.155,5,0.121,7,0.34,8,1.261,10,0.32,11,0.012,17,0.279,20,0.208,21,0.01,22,0.01,53,1.326,54,3.819,55,2.116,62,1.333,63,4.057,64,1.68,71,1.912,72,2.761,73,2.446,74,2.761,79,2.884,80,3.02,81,1.791,82,3.171,83,2.761,348,3.34,1051,3.982,1324,3.171,1778,3.535,1828,5.053,1829,4.033,1830,4.653]],["title/interfaces/adressDeliveryCreate.html",[53,0.741,1830,2.823]],["body/interfaces/adressDeliveryCreate.html",[3,0.155,4,0.155,5,0.121,7,0.34,8,1.261,10,0.32,11,0.012,17,0.279,20,0.208,21,0.01,22,0.01,53,1.326,54,3.819,55,2.116,62,1.333,63,4.057,64,1.68,71,1.912,72,2.761,73,2.446,74,2.761,79,2.884,80,3.02,81,1.791,82,3.171,83,2.761,348,3.34,1051,3.982,1324,3.171,1778,3.535,1828,4.653,1829,4.033,1830,5.053]],["title/coverage.html",[1831,4.958]],["body/coverage.html",[0,0.132,1,1.805,5,0.054,6,2.162,10,0.143,11,0.012,21,0.005,22,0.005,23,3.068,24,1.805,26,2.162,43,1.857,44,1.495,47,1.537,53,1.387,54,1.185,56,3.068,57,3.068,70,1.582,78,0.828,85,2.676,86,1.805,88,2.162,115,1.351,116,1.185,118,1.054,130,1.351,138,1.805,139,1.291,140,1.351,142,1.683,143,1.805,146,1.683,148,1.582,150,1.291,152,0.884,158,0.856,217,1.095,218,1.582,219,1.495,220,0.828,221,1.054,222,1.095,226,1.958,228,1.683,246,1.958,254,1.495,256,1.582,258,1.582,266,1.805,292,1.538,294,2.162,299,2.162,306,1.683,321,3.068,342,2.829,349,1.805,352,1.805,359,1.095,408,1.683,409,2.162,415,1.582,416,3.489,423,1.683,425,1.683,426,3.068,432,1.683,433,1.805,434,2.162,453,1.805,458,1.683,472,1.683,551,1.582,552,2.829,555,1.683,558,2.162,594,1.805,619,1.805,637,1.805,673,4.981,740,1.683,741,3.489,750,2.829,754,1.805,766,2.162,780,1.419,781,3.462,782,3.462,789,1.419,802,1.582,831,1.582,839,1.683,840,2.162,841,3.068,880,3.068,881,3.489,897,3.068,907,1.805,908,2.162,913,1.805,914,2.162,925,2.479,932,1.495,945,1.805,985,2.162,996,2.162,1005,2.162,1083,2.162,1114,2.162,1117,2.162,1131,3.068,1133,2.162,1145,2.162,1153,1.582,1154,3.068,1155,1.683,1157,1.683,1158,1.958,1168,2.162,1193,1.683,1198,1.805,1220,2.162,1273,2.162,1285,1.805,1286,2.162,1307,1.805,1434,2.162,1502,2.162,1522,1.805,1523,2.162,1545,1.683,1551,1.582,1578,2.162,1593,1.805,1639,1.805,1640,2.162,1659,2.162,1685,1.805,1686,2.162,1689,2.162,1692,2.162,1709,2.162,1724,1.805,1725,2.162,1777,3.068,1778,1.582,1817,2.162,1825,2.162,1828,1.683,1829,3.489,1830,1.683,1831,2.162,1832,2.162,1833,2.472,1834,2.472,1835,3.389,1836,7.096,1837,7.76,1838,7.544,1839,7.351,1840,6.516,1841,2.162,1842,2.162,1843,5.875,1844,2.162,1845,2.162,1846,5.41,1847,2.472,1848,5.875,1849,4.779,1850,6.516,1851,3.068,1852,2.162,1853,2.162,1854,2.472,1855,1.958,1856,2.162,1857,3.875,1858,4.779,1859,3.389,1860,1.958,1861,2.472]],["title/interfaces/createUser.html",[53,0.741,1778,2.653]],["body/interfaces/createUser.html",[3,0.128,4,0.128,5,0.1,7,0.282,8,1.118,10,0.474,11,0.012,17,0.248,20,0.191,21,0.008,22,0.008,35,1.172,53,1.214,54,3.255,55,1.753,62,1.388,63,4.374,64,1.393,71,2.502,72,3.613,73,3.201,74,3.613,79,3.774,80,3.952,81,2.344,82,4.149,83,3.613,348,2.768,1051,3.028,1324,2.628,1778,3.877,1828,4.922,1829,3.343,1830,4.922]],["title/dependencies.html",[205,2.297,1862,3.024]],["body/dependencies.html",[0,0.104,11,0.012,19,1.449,21,0.009,22,0.009,41,0.77,42,2.972,64,1.495,69,1.319,101,3.838,131,2.566,189,4.322,196,4.634,205,2.262,250,3.892,253,3.346,344,3.892,396,3.588,431,2.972,452,2.456,487,4.298,488,4.035,685,3.145,1097,5.364,1121,4.298,1150,4.298,1224,3.588,1863,6.347,1864,4.914,1865,6.347,1866,4.914,1867,4.914,1868,4.914,1869,4.914,1870,4.914,1871,4.914,1872,4.914,1873,4.914,1874,4.914,1875,4.914,1876,4.914,1877,6.347,1878,4.914,1879,4.914,1880,4.914,1881,4.914,1882,4.914,1883,4.914,1884,4.914,1885,4.298,1886,4.914,1887,4.914,1888,4.914,1889,4.914,1890,4.914,1891,4.914,1892,4.914,1893,4.914,1894,4.914,1895,4.914,1896,4.914,1897,4.914,1898,4.914,1899,4.914,1900,4.914,1901,4.298,1902,4.914,1903,4.914,1904,4.914,1905,4.914]],["title/miscellaneous/enumerations.html",[1906,2.213,1907,4.364]],["body/miscellaneous/enumerations.html",[7,0.383,11,0.01,21,0.01,22,0.01,781,3.985,782,4.701,826,5.003,827,3.985,828,4.24,829,3.985,830,4.24,1156,4.882,1158,4.931,1166,5.003,1167,5.003,1855,4.931,1906,3.985,1907,5.446,1908,6.227,1909,6.227,1910,6.227]],["title/classes/filtersProductsDTO.html",[0,0.068,1307,3.028]],["body/classes/filtersProductsDTO.html",[0,0.091,2,1.227,3,0.113,4,0.113,5,0.088,7,0.248,8,1.027,10,0.417,11,0.012,12,2.299,13,1.994,14,1.493,15,0.947,17,0.228,18,1.351,19,1.189,20,0.156,21,0.01,22,0.008,62,0.901,66,2.64,67,1.493,68,3.568,69,1.083,75,2.19,166,3.94,413,2.44,414,4.445,673,2.316,767,4.354,793,2.581,810,2.581,811,2.747,812,2.747,813,2.747,814,2.316,825,2.44,1156,4.354,1166,5.292,1167,5.436,1307,4.062,1474,6.297,1475,6.297,1855,3.195,1911,6.367,1912,6.367,1913,6.367,1914,6.864,1915,5.563,1916,4.034,1917,4.034,1918,6.864,1919,4.034,1920,4.034,1921,6.864,1922,4.034,1923,4.034,1924,5.563,1925,5.563,1926,4.034,1927,5.563,1928,4.034,1929,4.034,1930,6.864,1931,4.034]],["title/miscellaneous/functions.html",[1906,2.213,1932,4.364]],["body/miscellaneous/functions.html",[7,0.388,10,0.365,11,0.011,21,0.01,22,0.01,33,1.693,34,1.693,35,0.891,146,5.04,740,5.04,741,4.604,751,4.993,755,4.993,1851,4.993,1852,6.871,1906,4.035,1932,5.515,1933,5.515,1934,6.306]],["title/interfaces/googleJWT.html",[53,0.741,349,3.028]],["body/interfaces/googleJWT.html",[3,0.142,4,0.142,5,0.11,7,0.311,8,1.192,10,0.473,11,0.012,20,0.142,21,0.009,22,0.009,35,1.2,38,3.718,53,0.903,55,1.934,62,1.4,71,2.598,73,3.324,74,3.751,83,3.751,349,4.717,392,4.803,428,3.201,1094,5.944,1129,6.565,1842,4.417]],["title/index.html",[7,0.213,1935,3.458,1936,3.458]],["body/index.html",[5,0.072,11,0.012,21,0.007,22,0.007,29,0.855,54,1.575,62,0.532,75,1.463,77,3.592,120,5.473,123,2.178,124,4.206,155,2.771,189,3.274,196,3.511,205,2.214,277,3.077,324,2.603,396,2.4,428,1.402,447,4.57,473,5.381,474,4.599,475,3.477,512,3.274,574,2.76,635,2.874,637,2.4,646,2.603,657,1.797,663,2.238,685,3.639,758,5.274,760,4.504,864,2.4,882,2.4,1051,2.842,1052,2.874,1079,2.603,1080,3.808,1178,2.603,1246,4.504,1280,2.874,1293,4.974,1294,4.206,1409,2.874,1410,2.874,1510,4.206,1832,2.874,1860,3.808,1885,4.974,1901,5.473,1937,4.809,1938,4.809,1939,3.287,1940,3.287,1941,2.874,1942,3.287,1943,4.809,1944,6.258,1945,4.809,1946,4.809,1947,6.258,1948,4.809,1949,6.258,1950,6.258,1951,6.258,1952,5.687,1953,5.687,1954,4.809,1955,6.258,1956,6.66,1957,4.809,1958,3.287,1959,4.809,1960,5.687,1961,3.287,1962,4.809,1963,3.287,1964,3.287,1965,5.687,1966,3.287,1967,5.687,1968,3.287,1969,3.287,1970,3.287,1971,5.687,1972,4.809,1973,3.287,1974,4.809,1975,3.287,1976,3.287,1977,3.287,1978,3.287,1979,3.287,1980,3.287,1981,3.287,1982,3.287,1983,3.287,1984,3.287,1985,4.809,1986,3.287,1987,3.287,1988,4.809,1989,3.287,1990,3.287,1991,3.287,1992,3.287,1993,3.287,1994,5.687,1995,3.287,1996,4.809,1997,4.809,1998,5.687,1999,3.287,2000,3.287,2001,3.287,2002,3.287,2003,3.287,2004,3.287,2005,3.287,2006,3.287,2007,4.809,2008,3.287,2009,3.287,2010,3.287,2011,3.287,2012,3.287,2013,3.287,2014,3.287,2015,3.287,2016,4.809,2017,3.287,2018,3.287,2019,3.287,2020,3.287,2021,3.287,2022,4.206,2023,4.809,2024,3.287,2025,3.287,2026,3.287,2027,3.287,2028,3.287,2029,3.287,2030,3.287,2031,3.287,2032,3.287,2033,3.287,2034,3.287,2035,5.687,2036,3.287,2037,3.287,2038,3.287,2039,3.287,2040,3.287,2041,3.287,2042,3.287,2043,3.287,2044,3.287,2045,3.287,2046,3.287,2047,3.287,2048,3.287,2049,3.287,2050,3.287,2051,2.874,2052,3.287,2053,3.287,2054,3.287]],["title/modules.html",[204,2.717]],["body/modules.html",[11,0.01,21,0.01,22,0.01,203,4.269,204,2.802,209,3.981,210,3.981,211,3.741,212,3.981,213,3.981,214,3.981,215,3.981,216,3.741,2022,7.397,2055,8.458,2056,8.458,2057,8.458]],["title/classes/newPaymentDTO.html",[0,0.068,1193,2.823]],["body/classes/newPaymentDTO.html",[0,0.122,2,1.936,3,0.179,4,0.179,5,0.139,11,0.012,14,2.356,17,0.26,18,2.132,19,1.876,20,0.179,21,0.01,22,0.01,66,2.203,1193,5.068,1853,5.567]],["title/interfaces/newReview.html",[53,0.741,1593,3.028]],["body/interfaces/newReview.html",[3,0.143,4,0.143,5,0.111,7,0.313,8,1.198,10,0.479,11,0.012,12,2.822,20,0.143,21,0.009,22,0.009,35,0.917,53,0.91,55,1.949,62,1.288,75,2.29,84,4.516,518,4.321,728,5.125,786,3.608,790,3.762,842,5.125,843,5.125,844,5.125,1473,5.961,1593,4.739,1856,4.451]],["title/overview.html",[2058,4.958]],["body/overview.html",[2,0.918,11,0.012,21,0.006,22,0.006,25,2.391,55,1.156,87,1.198,148,3.462,150,3.838,152,2.678,158,2.489,203,6.219,204,1.447,205,2.079,206,2.641,207,2.641,208,2.641,209,5.746,210,5.006,211,5.138,212,5.467,213,4.762,214,4.762,215,5.527,216,5.168,217,3.184,218,4.601,219,3.632,220,2.578,221,3.241,222,3.184,223,2.358,224,1.576,225,1.576,256,4.475,258,4.475,288,2.391,293,1.117,302,2.641,304,2.641,305,2.641,306,4.762,663,2.056,956,2.641,1551,3.462,1574,2.641,1575,2.641,2058,2.641,2059,3.019,2060,3.019,2061,3.019]],["title/interfaces/ownerCart.html",[53,0.741,423,2.823]],["body/interfaces/ownerCart.html",[3,0.161,4,0.161,5,0.125,7,0.352,8,1.29,9,2.863,10,0.332,11,0.012,12,2.341,17,0.286,20,0.212,21,0.01,22,0.01,53,1.348,55,2.194,64,1.743,84,4.292,282,2.443,415,3.666,416,4.183,417,2.991,418,3.465,419,2.863,420,5.534,421,3.465,422,3.465,423,4.759,424,4.869,425,3.901]],["title/interfaces/productsCart.html",[53,0.741,425,2.823]],["body/interfaces/productsCart.html",[3,0.161,4,0.161,5,0.125,7,0.352,8,1.29,9,2.863,10,0.332,11,0.012,12,2.341,17,0.286,20,0.212,21,0.01,22,0.01,53,1.348,55,2.194,64,1.743,84,4.292,282,2.443,415,3.666,416,4.183,417,2.991,418,3.465,419,2.863,420,5.534,421,3.465,422,3.465,423,3.901,424,4.869,425,4.759]],["title/properties.html",[8,0.921,1862,3.024]],["body/properties.html",[8,1.202,11,0.012,21,0.011,22,0.011,75,1.98,1941,5.694,2051,5.694,2062,6.51,2063,6.51,2064,6.51]],["title/classes/userAuthDTO.html",[0,0.068,352,3.028]],["body/classes/userAuthDTO.html",[0,0.102,2,1.449,3,0.134,4,0.134,5,0.104,7,0.293,8,1.148,10,0.453,11,0.012,13,2.163,15,1.028,17,0.254,18,2.551,19,1.404,20,0.134,21,0.009,22,0.009,35,0.879,38,3.247,62,1.307,65,4.925,66,2.636,67,2.563,68,3.65,69,1.278,71,2.397,72,3.461,81,2.245,83,3.461,84,3.4,352,4.541,388,5.484,392,4.431,865,3.478,869,4.165,871,3.243,876,6.056,1844,6.959,1845,4.165,2065,4.763,2066,4.763,2067,4.763,2068,4.763,2069,4.763,2070,4.763]],["title/miscellaneous/variables.html",[1906,2.213,2071,4.364]],["body/miscellaneous/variables.html",[7,0.27,10,0.341,11,0.012,21,0.008,22,0.008,31,4.527,36,4.855,43,3.406,44,2.653,46,2.46,47,2.637,48,5.265,49,3.837,50,2.232,78,1.973,84,2.398,101,2.653,115,3.22,138,3.204,166,4.609,226,3.474,246,4.664,254,3.562,266,4.301,267,3.837,277,2.807,282,1.871,321,3.474,342,5.19,355,4.664,359,1.943,386,2.944,407,3.204,414,4.389,668,5.151,673,3.817,881,4.301,1072,3.474,1198,3.204,1481,3.837,1777,3.474,1835,6.215,1841,3.837,1851,3.474,1859,3.837,1860,5.265,1906,2.807,1933,3.837,2071,3.837,2072,4.387,2073,5.89,2074,4.387,2075,5.89,2076,4.387,2077,4.387,2078,4.387,2079,6.649,2080,6.649,2081,4.387,2082,4.387,2083,4.387,2084,4.387,2085,4.387]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"index.html":{},"modules.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"overview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"properties.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":673,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/variables.html":{}}}],["0'})@isenum(sort)@isoptional",{"_index":1922,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["0,1,2,3,4",{"_index":853,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["0.0",{"_index":1612,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["0.0.1",{"_index":2063,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":1673,"title":{},"body":{"injectables/StripeService.html":{}}}],["09976fc1d5e4",{"_index":981,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["1",{"_index":657,"title":{"classes/DeliveryData-1.html":{},"interfaces/Request-1.html":{}},"body":{"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"index.html":{}}}],["1.0.0",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1346,"title":{},"body":{"controllers/ProductsController.html":{}}}],["1000",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["10000",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["12",{"_index":1408,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["14",{"_index":1931,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["14'})@isenum(sort)@isoptional",{"_index":1928,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["15.2.6",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":862,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["160cm",{"_index":1766,"title":{},"body":{"controllers/UsersController.html":{}}}],["160})@isstring()@isoptional()@maxlength(160",{"_index":1694,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["160})@isstring()@maxlength(160",{"_index":846,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["162192_1280_k0nq7t.png",{"_index":1416,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["17",{"_index":956,"title":{},"body":{"controllers/DeliveryController.html":{},"overview.html":{}}}],["173cm",{"_index":1756,"title":{},"body":{"controllers/UsersController.html":{}}}],["18",{"_index":2061,"title":{},"body":{"overview.html":{}}}],["2",{"_index":663,"title":{},"body":{"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["2.0.19",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["2.0.44",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["2.1.11",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1864,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":519,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{}}}],["2016",{"_index":957,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["2020",{"_index":1672,"title":{},"body":{"injectables/StripeService.html":{}}}],["2022",{"_index":1402,"title":{},"body":{"controllers/ProductsController.html":{}}}],["23:15:30",{"_index":1403,"title":{},"body":{"controllers/ProductsController.html":{}}}],["24",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["27",{"_index":1674,"title":{},"body":{"injectables/StripeService.html":{}}}],["3",{"_index":512,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"index.html":{}}}],["3.0.0",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["3.15.2",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["3.99",{"_index":953,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["30",{"_index":959,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["31c9ed5e",{"_index":972,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["32",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["3743981",{"_index":1376,"title":{},"body":{"controllers/ProductsController.html":{}}}],["4",{"_index":1409,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["4.0.0",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["4370",{"_index":974,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["4849",{"_index":973,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["4bf9",{"_index":979,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["5",{"_index":864,"title":{},"body":{"classes/CreateReviewDto.html":{},"controllers/ProductsController.html":{},"classes/UpdateReviewDto.html":{},"index.html":{}}}],["5'})@apiproperty()@isnumber",{"_index":856,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["5'})@isnumber",{"_index":854,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["5'})@isoptional()@isboolean",{"_index":1702,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["5'})@isoptional()@isnumber",{"_index":1698,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["50",{"_index":861,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["50})@isstring()@isoptional()@maxlength(50",{"_index":1701,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["50})@isstring()@maxlength(50",{"_index":859,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["58kg",{"_index":1757,"title":{},"body":{"controllers/UsersController.html":{}}}],["59000",{"_index":1753,"title":{},"body":{"controllers/UsersController.html":{}}}],["6",{"_index":1410,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["6.0.4",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["60s",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["68b6",{"_index":978,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["7",{"_index":1411,"title":{},"body":{"controllers/ProductsController.html":{}}}],["7.2.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2060,"title":{},"body":{"overview.html":{}}}],["8.3.2",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["87b4",{"_index":980,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["9",{"_index":2059,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1865,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["9.14.0",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["926199_1920_aeityg.jpg",{"_index":1413,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["9843",{"_index":975,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["_count",{"_index":1483,"title":{},"body":{"injectables/ProductsService.html":{}}}],["_scrypt",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["accepted",{"_index":1925,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["accepted,no",{"_index":1914,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["access_type",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{}}}],["accesstoken",{"_index":1094,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"interfaces/googleJWT.html":{}}}],["according",{"_index":1295,"title":{},"body":{"controllers/ProductsController.html":{}}}],["account",{"_index":1927,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["add",{"_index":473,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"index.html":{}}}],["added",{"_index":723,"title":{},"body":{"injectables/CartsService.html":{}}}],["adding",{"_index":777,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["addowner",{"_index":436,"title":{},"body":{"controllers/CartsController.html":{}}}],["addowner(user",{"_index":443,"title":{},"body":{"controllers/CartsController.html":{}}}],["addownercart",{"_index":559,"title":{},"body":{"injectables/CartsService.html":{}}}],["addownercart(user",{"_index":575,"title":{},"body":{"injectables/CartsService.html":{}}}],["addproduct",{"_index":678,"title":{},"body":{"injectables/CartsService.html":{}}}],["addproductdata",{"_index":522,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["addproductdata.quantitywanted",{"_index":715,"title":{},"body":{"injectables/CartsService.html":{}}}],["addproductdatadto",{"_index":453,"title":{"classes/addProductDataDTO.html":{}},"body":{"controllers/CartsController.html":{},"classes/addProductDataDTO.html":{},"coverage.html":{}}}],["addproductdto",{"_index":458,"title":{"classes/addProductDTO.html":{}},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/addProductDTO.html":{},"coverage.html":{}}}],["addproductdto})@patch('remove/product/:productid/:cartid",{"_index":460,"title":{},"body":{"controllers/CartsController.html":{}}}],["addproducttocart",{"_index":560,"title":{},"body":{"injectables/CartsService.html":{}}}],["addproducttocart(addproductdata",{"_index":577,"title":{},"body":{"injectables/CartsService.html":{}}}],["addtocart",{"_index":437,"title":{},"body":{"controllers/CartsController.html":{}}}],["addtocart(productid",{"_index":451,"title":{},"body":{"controllers/CartsController.html":{}}}],["addtocartdto",{"_index":1,"title":{"classes/AddToCartDTO.html":{}},"body":{"classes/AddToCartDTO.html":{},"injectables/CartsService.html":{},"coverage.html":{}}}],["adequate/sufficient",{"_index":1521,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["adequate/sufficient'})@isstring",{"_index":1513,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["admin",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PaymentsService.html":{},"classes/UserDto.html":{},"interfaces/googleJWT.html":{},"classes/userAuthDTO.html":{}}}],["adminguard",{"_index":24,"title":{"guards/AdminGUard.html":{}},"body":{"guards/AdminGUard.html":{},"controllers/PaymentsController.html":{},"coverage.html":{}}}],["adress",{"_index":54,"title":{"interfaces/Adress.html":{}},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"index.html":{}}}],["adress_bill",{"_index":80,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["adress_delivery",{"_index":79,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["adressbillcreate",{"_index":1828,"title":{"interfaces/adressBillCreate.html":{}},"body":{"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{}}}],["adressdelivery",{"_index":1712,"title":{},"body":{"classes/UserDto.html":{}}}],["adressdeliverycreate",{"_index":1830,"title":{"interfaces/adressDeliveryCreate.html":{}},"body":{"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{}}}],["affiliatecart",{"_index":1043,"title":{},"body":{"injectables/DeliveryService.html":{},"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{}}}],["affiliated",{"_index":1247,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["affiliatedelivery",{"_index":1257,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["affiliateuser",{"_index":1045,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["agency/clothes_ecommerce.git",{"_index":2006,"title":{},"body":{"index.html":{}}}],["already",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["amount",{"_index":991,"title":{},"body":{"classes/DeliveryData.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{}}}],["any,info",{"_index":1092,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["any,user",{"_index":1091,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["api",{"_index":1956,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":484,"title":{},"body":{"controllers/CartsController.html":{}}}],["apibasicauth",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/StripeController.html":{}}}],["apibearerauth",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth()@apibody({type",{"_index":926,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth()@apiforbiddenresponse({description",{"_index":445,"title":{},"body":{"controllers/CartsController.html":{}}}],["apibearerauth()@get('/currentuser')@useguards(jwtauthguard",{"_index":1731,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth()@useguards(jwtauthguard)@get('profile",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth()@useguards(jwtauthguard)@post('/create",{"_index":1176,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["apibody",{"_index":134,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["apiforbiddenresponse",{"_index":485,"title":{},"body":{"controllers/CartsController.html":{}}}],["apioauth2",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2(['googlestrategy",{"_index":181,"title":{},"body":{"controllers/AppController.html":{}}}],["apioauth2(['googlestrategy'])@get('/login/google')@useguards(undefined",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["apiokresponse",{"_index":136,"title":{},"body":{"controllers/AppController.html":{}}}],["apiparam",{"_index":486,"title":{},"body":{"controllers/CartsController.html":{}}}],["apiproperty",{"_index":67,"title":{},"body":{"interfaces/Adress.html":{},"classes/BodyChargeDto.html":{},"interfaces/Carts.html":{},"classes/CreateCartDTO.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/FindManyIdsDTO.html":{},"classes/QuantityShortDTO.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/userAuthDTO.html":{}}}],["apiproperty()@expose",{"_index":1687,"title":{},"body":{"classes/TokenDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose()@isoptional",{"_index":1718,"title":{},"body":{"classes/UserDto.html":{}}}],["apiproperty()@isarray",{"_index":1115,"title":{},"body":{"classes/FindManyIdsDTO.html":{}}}],["apiproperty()@isemail",{"_index":869,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/userAuthDTO.html":{}}}],["apiproperty()@isenum(delivery_type",{"_index":989,"title":{},"body":{"classes/DeliveryData.html":{}}}],["apiproperty()@isnumber",{"_index":987,"title":{},"body":{"classes/DeliveryData.html":{},"classes/Total_cartDTO.html":{}}}],["apiproperty()@isstring",{"_index":871,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/DeliveryData.html":{},"classes/Total_cartDTO.html":{},"classes/addProductDTO.html":{},"classes/userAuthDTO.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":411,"title":{},"body":{"classes/BodyChargeDto.html":{},"classes/DataChargeDto.html":{}}}],["apiproperty({description",{"_index":774,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/CreateReviewDto.html":{},"classes/QuantityShortDTO.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["apiproperty({maxlength",{"_index":845,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["apiproperty({type",{"_index":1704,"title":{},"body":{"classes/UserCartDTO.html":{}}}],["apipropertyoptional",{"_index":68,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateCartDTO.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DeliveryData.html":{},"classes/PaymentDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/userAuthDTO.html":{}}}],["apipropertyoptional()@isoptional",{"_index":865,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PaymentDTO.html":{},"classes/UserDto.html":{},"classes/userAuthDTO.html":{}}}],["apipropertyoptional()@isstring",{"_index":1163,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["apipropertyoptional()@isstring()@isoptional",{"_index":876,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/userAuthDTO.html":{}}}],["apipropertyoptional({description",{"_index":767,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/CreateUserDto.html":{},"classes/DeliveryData.html":{},"classes/UpdateReviewDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{}}}],["apipropertyoptional({maxlength",{"_index":1693,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["apipropertyoptional({type",{"_index":848,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["apiquery",{"_index":1328,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags",{"_index":137,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["apitags('app",{"_index":161,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('carts",{"_index":498,"title":{},"body":{"controllers/CartsController.html":{}}}],["apitags('delivery",{"_index":949,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["apitags('payments",{"_index":1199,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["apitags('products",{"_index":1331,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('reviews",{"_index":1553,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["apitags('users",{"_index":1746,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiversion",{"_index":1671,"title":{},"body":{"injectables/StripeService.html":{}}}],["app",{"_index":1280,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":1284,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":86,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appellation",{"_index":1349,"title":{},"body":{"controllers/ProductsController.html":{}}}],["application",{"_index":1967,"title":{},"body":{"index.html":{}}}],["apply",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":203,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval_prompt",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{}}}],["appservice",{"_index":148,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":749,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["arr",{"_index":1072,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":792,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/FindManyIdsDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{}}}],["array.ids",{"_index":1073,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["asc",{"_index":1166,"title":{},"body":{"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{}}}],["asc'})@isenum(sort)@isoptional",{"_index":1919,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["asked",{"_index":1517,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["assez",{"_index":1350,"title":{},"body":{"controllers/ProductsController.html":{}}}],["async",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["august",{"_index":1401,"title":{},"body":{"controllers/ProductsController.html":{}}}],["auth",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["auth.dto",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.dto.ts",{"_index":1845,"title":{},"body":{"coverage.html":{},"classes/userAuthDTO.html":{}}}],["auth.dto.ts:11",{"_index":2067,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.dto.ts:16",{"_index":2068,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.dto.ts:21",{"_index":2070,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.dto.ts:25",{"_index":2065,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.dto.ts:30",{"_index":2069,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.dto.ts:7",{"_index":2066,"title":{},"body":{"classes/userAuthDTO.html":{}}}],["auth.guard",{"_index":141,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":1131,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":151,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["auth/constants",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/google.strategy",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt.strategy",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/local.strategy",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["authentification",{"_index":1953,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":130,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/CartsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authguard('jwt",{"_index":1132,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1144,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":209,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2051,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":150,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":1507,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["aux",{"_index":1560,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["available",{"_index":660,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{}}}],["available'})@isnumber",{"_index":1518,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["availablequantity",{"_index":656,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{}}}],["availables",{"_index":1025,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["avec",{"_index":1386,"title":{},"body":{"controllers/ProductsController.html":{}}}],["avg",{"_index":1616,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["await",{"_index":172,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"injectables/UsersService.html":{}}}],["azerty64",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["back",{"_index":635,"title":{},"body":{"injectables/CartsService.html":{},"index.html":{}}}],["backend",{"_index":1939,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{}}}],["badrequestexception('email",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('no",{"_index":684,"title":{},"body":{"injectables/CartsService.html":{}}}],["bash",{"_index":1998,"title":{},"body":{"index.html":{}}}],["bdd",{"_index":1252,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["before",{"_index":760,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"index.html":{}}}],["between",{"_index":1516,"title":{},"body":{"classes/QuantityShortDTO.html":{},"classes/UpdateReviewDto.html":{}}}],["bi",{"_index":1382,"title":{},"body":{"controllers/ProductsController.html":{}}}],["bill",{"_index":1253,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["bis",{"_index":2039,"title":{},"body":{"index.html":{}}}],["black",{"_index":1379,"title":{},"body":{"controllers/ProductsController.html":{}}}],["body",{"_index":452,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["body.cartid",{"_index":540,"title":{},"body":{"controllers/CartsController.html":{}}}],["body.ids",{"_index":1082,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["body.productid",{"_index":539,"title":{},"body":{"controllers/CartsController.html":{}}}],["body.size",{"_index":514,"title":{},"body":{"controllers/CartsController.html":{}}}],["bodychargedto",{"_index":408,"title":{"classes/BodyChargeDto.html":{}},"body":{"classes/BodyChargeDto.html":{},"controllers/PaymentsController.html":{},"controllers/StripeController.html":{},"coverage.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{},"classes/UserDto.html":{},"interfaces/googleJWT.html":{},"classes/userAuthDTO.html":{}}}],["boolean(createproductdata.sustainable.isactive",{"_index":1459,"title":{},"body":{"injectables/ProductsService.html":{}}}],["boolean(toupdate.sustainable",{"_index":1497,"title":{},"body":{"injectables/ProductsService.html":{}}}],["bootstrap",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boutonnage",{"_index":1399,"title":{},"body":{"controllers/ProductsController.html":{}}}],["brand",{"_index":783,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["browse",{"_index":2057,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2022,"title":{},"body":{"index.html":{},"modules.html":{}}}],["buffer",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["built",{"_index":1943,"title":{},"body":{"index.html":{}}}],["c'est",{"_index":1391,"title":{},"body":{"controllers/ProductsController.html":{}}}],["calculate",{"_index":736,"title":{},"body":{"injectables/CartsService.html":{}}}],["calculatetotalcart",{"_index":561,"title":{},"body":{"injectables/CartsService.html":{}}}],["calculatetotalcart(cartid",{"_index":579,"title":{},"body":{"injectables/CartsService.html":{}}}],["callbackurl",{"_index":1105,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["callhandler",{"_index":742,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["can't",{"_index":1320,"title":{},"body":{"controllers/ProductsController.html":{}}}],["canactivate",{"_index":28,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":30,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{}}}],["cart",{"_index":155,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/DeliveryService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{},"classes/addProductDTO.html":{},"index.html":{}}}],["cart'})@isstring",{"_index":1819,"title":{},"body":{"classes/addProductDTO.html":{}}}],["cart'})@isstring()@isoptional",{"_index":769,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["cart.id",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"injectables/PaymentsService.html":{}}}],["cart.products.map((products",{"_index":692,"title":{},"body":{"injectables/CartsService.html":{}}}],["cart.ts",{"_index":881,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cart.ts:18",{"_index":884,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{}}}],["cart.ts:21",{"_index":888,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{}}}],["cartdbdata",{"_index":415,"title":{"interfaces/CartDbData.html":{}},"body":{"interfaces/CartDbData.html":{},"injectables/CartsService.html":{},"coverage.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["cartdeleted",{"_index":545,"title":{},"body":{"controllers/CartsController.html":{}}}],["cartdelivery",{"_index":592,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartid",{"_index":444,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"classes/Total_cartDTO.html":{},"classes/addProductDTO.html":{}}}],["cartid,size",{"_index":506,"title":{},"body":{"controllers/CartsController.html":{}}}],["cartid.id",{"_index":677,"title":{},"body":{"injectables/CartsService.html":{}}}],["cartidsarray",{"_index":971,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["carts",{"_index":116,"title":{"interfaces/Carts.html":{}},"body":{"controllers/AppController.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{},"classes/UserCartDTO.html":{},"coverage.html":{}}}],["carts.controller",{"_index":554,"title":{},"body":{"modules/CartsModule.html":{}}}],["carts.service",{"_index":492,"title":{},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{}}}],["carts/carts.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["carts/carts.service",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["carts/decorators/current",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["carts/dtos/usercart.dto",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["cartscontroller",{"_index":433,"title":{"controllers/CartsController.html":{}},"body":{"controllers/CartsController.html":{},"modules/CartsModule.html":{},"coverage.html":{}}}],["cartservice",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{}}}],["cartsmodule",{"_index":210,"title":{"modules/CartsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules.html":{},"overview.html":{}}}],["cartsservice",{"_index":152,"title":{"injectables/CartsService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["cartstatus",{"_index":1259,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["catch",{"_index":648,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{}}}],["categories",{"_index":784,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["categories.categories",{"_index":1480,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoriespicture",{"_index":836,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{}}}],["channel",{"_index":2034,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1649,"title":{},"body":{"controllers/StripeController.html":{},"injectables/StripeService.html":{}}}],["charge(data",{"_index":1665,"title":{},"body":{"injectables/StripeService.html":{}}}],["charge.paymentmethodid",{"_index":1652,"title":{},"body":{"controllers/StripeController.html":{}}}],["check",{"_index":685,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"dependencies.html":{},"index.html":{}}}],["checkdeliveryamount",{"_index":915,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["checkdeliveryamount(@param('cartid",{"_index":963,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["checkdeliveryamount(cartid",{"_index":921,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["checkquantityincart",{"_index":562,"title":{},"body":{"injectables/CartsService.html":{}}}],["checkquantityincart(cartid",{"_index":581,"title":{},"body":{"injectables/CartsService.html":{}}}],["chill",{"_index":1414,"title":{},"body":{"controllers/ProductsController.html":{}}}],["choisir",{"_index":1341,"title":{},"body":{"controllers/ProductsController.html":{}}}],["choose",{"_index":2009,"title":{},"body":{"index.html":{}}}],["city",{"_index":58,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["class",{"_index":0,"title":{"classes/AddToCartDTO.html":{},"classes/BodyChargeDto.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/FindManyIdsDTO.html":{},"classes/PaymentDTO.html":{},"classes/QuantityShortDTO.html":{},"classes/SerializeInterceptor.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"classes/userAuthDTO.html":{}},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"coverage.html":{},"dependencies.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"classes/userAuthDTO.html":{}}}],["classconstructor",{"_index":740,"title":{"interfaces/ClassConstructor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddToCartDTO.html":{},"classes/BodyChargeDto.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/FindManyIdsDTO.html":{},"classes/PaymentDTO.html":{},"classes/QuantityShortDTO.html":{},"classes/SerializeInterceptor.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"overview.html":{},"classes/userAuthDTO.html":{}}}],["classic",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["clientes",{"_index":1395,"title":{},"body":{"controllers/ProductsController.html":{}}}],["clientid",{"_index":1101,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["clientsecret",{"_index":1103,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["clone",{"_index":1950,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cartsmodule",{"_index":547,"title":{},"body":{"modules/CartsModule.html":{}}}],["cluster_cartsmodule_providers",{"_index":548,"title":{},"body":{"modules/CartsModule.html":{}}}],["cluster_deliverymodule",{"_index":1001,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["cluster_deliverymodule_providers",{"_index":1002,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["cluster_paymentsmodule",{"_index":1216,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["cluster_paymentsmodule_providers",{"_index":1217,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["cluster_productsmodule",{"_index":1430,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":1431,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_reviewsmodule",{"_index":1574,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_reviewsmodule_providers",{"_index":1575,"title":{},"body":{"modules/ReviewsModule.html":{},"overview.html":{}}}],["cluster_stripemodule",{"_index":1654,"title":{},"body":{"modules/StripeModule.html":{}}}],["cluster_stripemodule_providers",{"_index":1655,"title":{},"body":{"modules/StripeModule.html":{}}}],["cluster_usersmodule",{"_index":1771,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1772,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1951,"title":{},"body":{"index.html":{}}}],["col",{"_index":1337,"title":{},"body":{"controllers/ProductsController.html":{}}}],["collectinstore",{"_index":952,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["color",{"_index":785,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["colorpicture",{"_index":837,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{}}}],["command",{"_index":1999,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1938,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2018,"title":{},"body":{"index.html":{}}}],["compodocs",{"_index":1955,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1986,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":1663,"title":{},"body":{"injectables/StripeService.html":{}}}],["configure",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["configure(consumer",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["confirm",{"_index":1682,"title":{},"body":{"injectables/StripeService.html":{}}}],["conforme",{"_index":1559,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["connect",{"_index":424,"title":{},"body":{"interfaces/CartDbData.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["console.log",{"_index":733,"title":{},"body":{"injectables/CartsService.html":{}}}],["console.log('addtocart",{"_index":721,"title":{},"body":{"injectables/CartsService.html":{}}}],["console.log('cart",{"_index":1047,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["console.log('data",{"_index":1676,"title":{},"body":{"injectables/StripeService.html":{}}}],["console.log('delivery",{"_index":1049,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["console.log('error",{"_index":699,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{}}}],["console.log('hey",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log('quantityincart",{"_index":693,"title":{},"body":{"injectables/CartsService.html":{}}}],["console.log('stripe",{"_index":1034,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["console.log(values",{"_index":708,"title":{},"body":{"injectables/CartsService.html":{}}}],["consolelogger",{"_index":611,"title":{},"body":{"injectables/CartsService.html":{}}}],["consommateurs",{"_index":1372,"title":{},"body":{"controllers/ProductsController.html":{}}}],["const",{"_index":46,"title":{},"body":{"guards/AdminGUard.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":162,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1146,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(cartservice",{"_index":883,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{}}}],["constructor(configservice",{"_index":1662,"title":{},"body":{"injectables/StripeService.html":{}}}],["constructor(dto",{"_index":1636,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["constructor(prisma",{"_index":571,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":500,"title":{},"body":{"controllers/CartsController.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":898,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["constructor(usersservice",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["consumer.apply(currentcartmiddleware).forroutes",{"_index":557,"title":{},"body":{"modules/CartsModule.html":{}}}],["consumer.apply(currentusermiddleware).forroutes",{"_index":1776,"title":{},"body":{"modules/UsersModule.html":{}}}],["contents",{"_index":1942,"title":{},"body":{"index.html":{}}}],["context",{"_index":36,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":48,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":85,"title":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('carts",{"_index":499,"title":{},"body":{"controllers/CartsController.html":{}}}],["controller('delivery",{"_index":950,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["controller('payments",{"_index":1200,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('products",{"_index":1332,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('reviews",{"_index":1554,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["controller('stripe",{"_index":1647,"title":{},"body":{"controllers/StripeController.html":{}}}],["controller('users",{"_index":1747,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":487,"title":{},"body":{"controllers/CartsController.html":{},"dependencies.html":{}}}],["cookiesession",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["corbel",{"_index":2053,"title":{},"body":{"index.html":{}}}],["couleur",{"_index":1557,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["count",{"_index":1481,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":59,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["coup",{"_index":1392,"title":{},"body":{"controllers/ProductsController.html":{}}}],["courtes",{"_index":1340,"title":{},"body":{"controllers/ProductsController.html":{}}}],["coverage",{"_index":1831,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1051,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"controllers/StripeController.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"index.html":{}}}],["create_at",{"_index":1159,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["createcartdata",{"_index":516,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["createcartdto",{"_index":472,"title":{"classes/CreateCartDTO.html":{}},"body":{"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{},"controllers/StripeController.html":{},"coverage.html":{}}}],["createcharge",{"_index":1648,"title":{},"body":{"controllers/StripeController.html":{}}}],["createchargedto",{"_index":1643,"title":{},"body":{"controllers/StripeController.html":{}}}],["created",{"_index":1973,"title":{},"body":{"index.html":{}}}],["created_at",{"_index":427,"title":{},"body":{"interfaces/Carts.html":{},"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"classes/UserCartDTO.html":{}}}],["createdelivery",{"_index":916,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["createdelivery(data",{"_index":1011,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["createdelivery(deliverydata",{"_index":924,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["createmany",{"_index":1467,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["createparamdecorator",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpayment",{"_index":1170,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpayment(datas",{"_index":1226,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpayment(payment",{"_index":1175,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["createproduct",{"_index":1287,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":1417,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(createproductdata",{"_index":1292,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdata",{"_index":1300,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproductdata.style",{"_index":1461,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproductdata.sustainable.description",{"_index":1460,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproductdata.sustainable?.isactive",{"_index":1458,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":780,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{},"coverage.html":{}}}],["createreview",{"_index":1525,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreview(createreviewdata",{"_index":1530,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["createreview(data",{"_index":1582,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createreviewdata",{"_index":1533,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["createreviewdata.pictures",{"_index":1605,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["createreviewdto",{"_index":839,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"coverage.html":{}}}],["creates",{"_index":1961,"title":{},"body":{"index.html":{}}}],["createstripecustomer",{"_index":1661,"title":{},"body":{"injectables/StripeService.html":{}}}],["createstripecustomer(name",{"_index":1667,"title":{},"body":{"injectables/StripeService.html":{}}}],["createuser",{"_index":1778,"title":{"interfaces/createUser.html":{}},"body":{"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{}}}],["createuser(createuserdata",{"_index":1782,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdata.adress_bill",{"_index":1799,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.adress_bill.number",{"_index":1800,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.adress_bill.postcode",{"_index":1801,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.adress_delivery",{"_index":1795,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.morphology",{"_index":1796,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.password",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdata.size",{"_index":1797,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.token",{"_index":1794,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdata.weight",{"_index":1798,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":70,"title":{"classes/CreateUserDto.html":{}},"body":{"interfaces/Adress.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["creating",{"_index":476,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{}}}],["crud",{"_index":1976,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["currency",{"_index":1680,"title":{},"body":{"injectables/StripeService.html":{}}}],["currentcart",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentcart.id",{"_index":178,"title":{},"body":{"controllers/AppController.html":{},"controllers/StripeController.html":{}}}],["currentcartmiddleware",{"_index":555,"title":{"injectables/CurrentCartMiddleware.html":{}},"body":{"modules/CartsModule.html":{},"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["currenterror",{"_index":640,"title":{},"body":{"injectables/CartsService.html":{}}}],["currenterror.error_messages",{"_index":653,"title":{},"body":{"injectables/CartsService.html":{}}}],["currenterror.error_messages[0",{"_index":642,"title":{},"body":{"injectables/CartsService.html":{}}}],["currentuser",{"_index":43,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"controllers/CartsController.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser(@currentuser",{"_index":1764,"title":{},"body":{"controllers/UsersController.html":{}}}],["currentuser(user",{"_index":1730,"title":{},"body":{"controllers/UsersController.html":{}}}],["currentusermiddleware",{"_index":551,"title":{"injectables/CurrentUserMiddleware.html":{}},"body":{"modules/CartsModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["customer",{"_index":1678,"title":{},"body":{"injectables/StripeService.html":{}}}],["customerid",{"_index":1249,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{}}}],["customtype/google_jwt.type",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["customtypes/all_payments",{"_index":1241,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["customtypes/newreview.type",{"_index":1594,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["customtypes/user.type",{"_index":1790,"title":{},"body":{"injectables/UsersService.html":{}}}],["custontype/cartdb",{"_index":616,"title":{},"body":{"injectables/CartsService.html":{}}}],["cœur",{"_index":1393,"title":{},"body":{"controllers/ProductsController.html":{}}}],["c’est",{"_index":1354,"title":{},"body":{"controllers/ProductsController.html":{}}}],["d",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.setmonth(d.getmonth",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.deliverydata",{"_index":1023,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["data.deliverydata.free_delivery_amount",{"_index":1027,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["database",{"_index":1949,"title":{},"body":{"index.html":{}}}],["datachargedto",{"_index":907,"title":{"classes/DataChargeDto.html":{}},"body":{"classes/DataChargeDto.html":{},"controllers/StripeController.html":{},"coverage.html":{}}}],["datas",{"_index":1181,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["datas.sort",{"_index":1261,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["datas.total",{"_index":1262,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["datatosend",{"_index":961,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["date",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"injectables/CartsService.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"miscellaneous/variables.html":{}}}],["date(delivery_date",{"_index":1042,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["date(deliverydate",{"_index":1465,"title":{},"body":{"injectables/ProductsService.html":{}}}],["date(filters.delivery_date",{"_index":1066,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["date(toupdate.deliverydate",{"_index":1494,"title":{},"body":{"injectables/ProductsService.html":{}}}],["date1",{"_index":711,"title":{},"body":{"injectables/CartsService.html":{}}}],["date1.gettime",{"_index":714,"title":{},"body":{"injectables/CartsService.html":{}}}],["date2",{"_index":712,"title":{},"body":{"injectables/CartsService.html":{}}}],["date2.gettime",{"_index":713,"title":{},"body":{"injectables/CartsService.html":{}}}],["datearray",{"_index":709,"title":{},"body":{"injectables/CartsService.html":{}}}],["datearray.sort(function",{"_index":710,"title":{},"body":{"injectables/CartsService.html":{}}}],["dateinnmonths",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dateinnmonths(3",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":1366,"title":{},"body":{"controllers/ProductsController.html":{}}}],["de5251359fab",{"_index":976,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["decimal",{"_index":421,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["declare",{"_index":891,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"classes/AddToCartDTO.html":{},"controllers/AppController.html":{},"classes/BodyChargeDto.html":{},"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/FindManyIdsDTO.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/userAuthDTO.html":{}}}],["decorators/.../profile",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators/current",{"_index":493,"title":{},"body":{"controllers/CartsController.html":{},"controllers/UsersController.html":{}}}],["decorators/profile",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"controllers/StripeController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["decrement",{"_index":662,"title":{},"body":{"injectables/CartsService.html":{}}}],["default",{"_index":414,"title":{},"body":{"classes/BodyChargeDto.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/DataChargeDto.html":{},"injectables/PaymentsService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/userAuthDTO.html":{}}}],["delete",{"_index":479,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["delete('/:cartid",{"_index":466,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{}}}],["delete('/:id",{"_index":1304,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/:reviewid",{"_index":1535,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["delete()@apibearerauth()@useguards(jwtauthguard",{"_index":1734,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleted",{"_index":533,"title":{},"body":{"controllers/CartsController.html":{}}}],["deletedcart",{"_index":738,"title":{},"body":{"injectables/CartsService.html":{}}}],["deletedelivery",{"_index":917,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["deletedelivery(@param('cartid",{"_index":969,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["deletedelivery(cartid",{"_index":929,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["deletedfromcart",{"_index":541,"title":{},"body":{"controllers/CartsController.html":{}}}],["deletedmessage",{"_index":527,"title":{},"body":{"controllers/CartsController.html":{}}}],["deleteerrormessage",{"_index":563,"title":{},"body":{"injectables/CartsService.html":{}}}],["deleteerrormessage(cartid",{"_index":583,"title":{},"body":{"injectables/CartsService.html":{}}}],["deletefromcart",{"_index":438,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["deletefromcart(productid",{"_index":457,"title":{},"body":{"controllers/CartsController.html":{}}}],["deletefromcart(quantityincartdata",{"_index":585,"title":{},"body":{"injectables/CartsService.html":{}}}],["deletemanydeliveries",{"_index":1006,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deletemanydeliveries(body",{"_index":1014,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deletemanyproducts",{"_index":918,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletemanyproducts(@body",{"_index":983,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["deletemanyproducts(body",{"_index":1301,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletemanyproducts(ids",{"_index":931,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["deletemessage",{"_index":439,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["deletemessage(cartid",{"_index":462,"title":{},"body":{"controllers/CartsController.html":{}}}],["deleteproduct",{"_index":1288,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('id",{"_index":1426,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":1303,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletereview",{"_index":1526,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deletereview(@param('reviewid",{"_index":1570,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["deletereview(id",{"_index":1534,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["deleteuser",{"_index":1727,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@currentuser",{"_index":1769,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(user",{"_index":1733,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletewholecart",{"_index":440,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["deletewholecart(cartid",{"_index":465,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["deliveries",{"_index":1074,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliveriestodelete",{"_index":1076,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["delivery",{"_index":77,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"index.html":{}}}],["delivery.controller",{"_index":1004,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.service",{"_index":947,"title":{},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{}}}],["delivery/delivery.module",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["delivery/delivery.service",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["delivery_date",{"_index":417,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"injectables/CartsService.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["delivery_fees",{"_index":9,"title":{},"body":{"classes/AddToCartDTO.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"injectables/CartsService.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["delivery_type",{"_index":951,"title":{},"body":{"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{}}}],["deliverycontroller",{"_index":913,"title":{"controllers/DeliveryController.html":{}},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"coverage.html":{}}}],["deliverydata",{"_index":925,"title":{"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{}},"body":{"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"coverage.html":{}}}],["deliverydate",{"_index":626,"title":{},"body":{"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["deliverymodule",{"_index":211,"title":{"modules/DeliveryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryModule.html":{},"modules/StripeModule.html":{},"modules.html":{},"overview.html":{}}}],["deliveryservice",{"_index":217,"title":{"injectables/DeliveryService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["deliverytodelete",{"_index":1068,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["deliverytodelete.id",{"_index":1071,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["dentelle",{"_index":1390,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dependencies",{"_index":205,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["des",{"_index":1371,"title":{},"body":{"controllers/ProductsController.html":{}}}],["desc",{"_index":1167,"title":{},"body":{"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{}}}],["desc'})@isenum(sort)@isoptional",{"_index":1916,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["description",{"_index":75,"title":{},"body":{"interfaces/Adress.html":{},"controllers/AppController.html":{},"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{},"controllers/UsersController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"index.html":{},"interfaces/newReview.html":{},"properties.html":{}}}],["development",{"_index":2029,"title":{},"body":{"index.html":{}}}],["difference",{"_index":1515,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["documentation",{"_index":1832,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":1980,"title":{},"body":{"index.html":{}}}],["domaintoascii",{"_index":1122,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["don't",{"_index":1293,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["done",{"_index":1089,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["done(null",{"_index":1113,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["dto",{"_index":755,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["dtos/add_product_data.dto",{"_index":495,"title":{},"body":{"controllers/CartsController.html":{}}}],["dtos/add_to_cart.dto",{"_index":617,"title":{},"body":{"injectables/CartsService.html":{}}}],["dtos/addproduct.dto",{"_index":494,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["dtos/bodycharge.dto",{"_index":1644,"title":{},"body":{"controllers/StripeController.html":{}}}],["dtos/charge_data.dto",{"_index":1645,"title":{},"body":{"controllers/StripeController.html":{}}}],["dtos/create",{"_index":1324,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["dtos/create_cart.dto",{"_index":496,"title":{},"body":{"controllers/CartsController.html":{}}}],["dtos/create_delivery.dto",{"_index":948,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["dtos/create_payment.dto",{"_index":1194,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["dtos/filters.dto",{"_index":1329,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dtos/find",{"_index":1327,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/payment.dto",{"_index":1195,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["dtos/quantity_short.dto",{"_index":618,"title":{},"body":{"injectables/CartsService.html":{}}}],["dtos/token.dto",{"_index":1745,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/total_cart.dto",{"_index":620,"title":{},"body":{"injectables/CartsService.html":{}}}],["dtos/update",{"_index":1550,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["dtos/user",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["dtos/user.dto",{"_index":902,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"controllers/UsersController.html":{}}}],["dtos/usercart.dto",{"_index":497,"title":{},"body":{"controllers/CartsController.html":{}}}],["du",{"_index":1751,"title":{},"body":{"controllers/UsersController.html":{}}}],["e",{"_index":1937,"title":{},"body":{"index.html":{}}}],["ec384093",{"_index":977,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["elementat",{"_index":614,"title":{},"body":{"injectables/CartsService.html":{}}}],["email",{"_index":71,"title":{},"body":{"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/Carts.html":{},"classes/CreateUserDto.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/StripeService.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{},"classes/userAuthDTO.html":{}}}],["emails",{"_index":1109,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["emails[0].value",{"_index":1110,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["empiècement",{"_index":1388,"title":{},"body":{"controllers/ProductsController.html":{}}}],["empty",{"_index":771,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["en",{"_index":1389,"title":{},"body":{"controllers/ProductsController.html":{}}}],["enableshutdownhooks",{"_index":1275,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":1277,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encolure",{"_index":1396,"title":{},"body":{"controllers/ProductsController.html":{}}}],["end",{"_index":1962,"title":{},"body":{"index.html":{}}}],["enough",{"_index":687,"title":{},"body":{"injectables/CartsService.html":{}}}],["enum",{"_index":825,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/PaymentDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["enumerations",{"_index":1907,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1994,"title":{},"body":{"index.html":{}}}],["equals",{"_index":632,"title":{},"body":{"injectables/CartsService.html":{}}}],["err",{"_index":1090,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["error",{"_index":649,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{}}}],["error('product",{"_index":1596,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["error('review",{"_index":1619,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["error('reviews",{"_index":1610,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["error('update",{"_index":650,"title":{},"body":{"injectables/CartsService.html":{}}}],["error(`no",{"_index":700,"title":{},"body":{"injectables/CartsService.html":{}}}],["error(s",{"_index":531,"title":{},"body":{"controllers/CartsController.html":{}}}],["error_message",{"_index":651,"title":{},"body":{"injectables/CartsService.html":{}}}],["error_messages",{"_index":641,"title":{},"body":{"injectables/CartsService.html":{}}}],["et",{"_index":1357,"title":{},"body":{"controllers/ProductsController.html":{}}}],["example",{"_index":1296,"title":{},"body":{"controllers/ProductsController.html":{}}}],["examples",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["except",{"_index":1546,"title":{},"body":{"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["excludeextraneousvalues",{"_index":765,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["executioncontext",{"_index":31,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exp",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["expected",{"_index":1506,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["expires",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["expiresin",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{}}}],["exports",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["expose",{"_index":430,"title":{},"body":{"interfaces/Carts.html":{},"classes/TokenDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{}}}],["expose()@apipropertyoptional()@isoptional",{"_index":1710,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isoptional",{"_index":1721,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":488,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["express.js",{"_index":1969,"title":{},"body":{"index.html":{}}}],["extends",{"_index":1098,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":1137,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1140,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["facebook",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"injectables/FacebookStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["facebook.strategy",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{}}}],["facebookauth",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookauth(@request",{"_index":186,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookauth(req",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookauthredirect",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookauthredirect(@request",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookauthredirect(req",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["facebookstrategy",{"_index":306,"title":{"injectables/FacebookStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/FacebookStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["failed",{"_index":652,"title":{},"body":{"injectables/CartsService.html":{}}}],["false",{"_index":51,"title":{},"body":{"guards/AdminGUard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["false})@post('/allproductsbycategory",{"_index":1312,"title":{},"body":{"controllers/ProductsController.html":{}}}],["fanny",{"_index":1748,"title":{},"body":{"controllers/UsersController.html":{}}}],["favorite",{"_index":2003,"title":{},"body":{"index.html":{}}}],["femme",{"_index":1406,"title":{},"body":{"controllers/ProductsController.html":{}}}],["field",{"_index":1318,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["fields",{"_index":1739,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"index.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{}}}],["filter",{"_index":1924,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["filters",{"_index":967,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["filters.delivery_date",{"_index":1065,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["filters.delivery_fees",{"_index":1060,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["filters.delivery_type",{"_index":1062,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["filters.free_delivery_amount",{"_index":1064,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["filters.popularity",{"_index":1472,"title":{},"body":{"injectables/ProductsService.html":{}}}],["filters.pricesort",{"_index":1471,"title":{},"body":{"injectables/ProductsService.html":{}}}],["filters.skip",{"_index":1476,"title":{},"body":{"injectables/ProductsService.html":{}}}],["filters.sortdate",{"_index":1470,"title":{},"body":{"injectables/ProductsService.html":{}}}],["filters.take",{"_index":1477,"title":{},"body":{"injectables/ProductsService.html":{}}}],["filtersproductsdto",{"_index":1307,"title":{"classes/filtersProductsDTO.html":{}},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"classes/filtersProductsDTO.html":{}}}],["finddeliverybycart",{"_index":919,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["finddeliverybycart(@param('cartid",{"_index":965,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["finddeliverybycart(cartid",{"_index":939,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["findmanyidsdto",{"_index":932,"title":{"classes/FindManyIdsDTO.html":{}},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/FindManyIdsDTO.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["findmanysdeliveries",{"_index":1007,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["findmanysdeliveries(array",{"_index":1016,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["first",{"_index":474,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"index.html":{}}}],["firstname",{"_index":74,"title":{},"body":{"interfaces/Adress.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{}}}],["firstproduct",{"_index":509,"title":{},"body":{"controllers/CartsController.html":{}}}],["fois",{"_index":1375,"title":{},"body":{"controllers/ProductsController.html":{}}}],["following",{"_index":1988,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":446,"title":{},"body":{"controllers/CartsController.html":{}}}],["forbiddenexception",{"_index":1239,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["force",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{}}}],["forget",{"_index":1294,"title":{},"body":{"controllers/ProductsController.html":{},"index.html":{}}}],["forroutes",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["fot",{"_index":2008,"title":{},"body":{"index.html":{}}}],["found",{"_index":535,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["framework",{"_index":1966,"title":{},"body":{"index.html":{}}}],["france",{"_index":1755,"title":{},"body":{"controllers/UsersController.html":{}}}],["free",{"_index":995,"title":{},"body":{"classes/DeliveryData.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["free'})@isoptional",{"_index":992,"title":{},"body":{"classes/DeliveryData.html":{}}}],["free_delivery_amount",{"_index":958,"title":{},"body":{"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{}}}],["front",{"_index":1977,"title":{},"body":{"index.html":{}}}],["function",{"_index":750,"title":{},"body":{"interfaces/ClassConstructor.html":{},"injectables/FacebookStrategy.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["functions",{"_index":1932,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2043,"title":{},"body":{"index.html":{}}}],["féminin",{"_index":1385,"title":{},"body":{"controllers/ProductsController.html":{}}}],["genderpicture",{"_index":835,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{}}}],["generate",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:cartid",{"_index":469,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{}}}],["get('/:id",{"_index":1315,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/:paymentid",{"_index":1183,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/:productid",{"_index":1541,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["get('/amount/:cartid",{"_index":922,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["get('/currentuser",{"_index":1763,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/login/facebook",{"_index":185,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/login/facebook')@useguards(undefined",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/login/google",{"_index":182,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/ratings/:productid",{"_index":1538,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["get('/signout",{"_index":1737,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/user/:email",{"_index":1209,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/user/:email')@useguards(adminguard",{"_index":1187,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/user/:id",{"_index":1213,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('/user/:id')@useguards(adminguard",{"_index":1190,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('auth/facebook/callback",{"_index":193,"title":{},"body":{"controllers/AppController.html":{}}}],["get('auth/facebook/callback')@useguards(undefined",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["get('auth/google/callback",{"_index":187,"title":{},"body":{"controllers/AppController.html":{}}}],["get('auth/google/callback')@useguards(undefined",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["get('profile",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["getallpayments",{"_index":1171,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getallpayments(@query",{"_index":1205,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getallpayments(datas",{"_index":1179,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getallproductsbycategory",{"_index":1289,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getallproductsbycategory(categories",{"_index":1306,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcart",{"_index":441,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["getcart(@param('cartid",{"_index":507,"title":{},"body":{"controllers/CartsController.html":{}}}],["getcart(cartid",{"_index":468,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["gethello",{"_index":295,"title":{},"body":{"injectables/AppService.html":{}}}],["getpaymentbyid",{"_index":1172,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getpaymentbyid(@param('paymentid",{"_index":1207,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getpaymentbyid(paymentid",{"_index":1182,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getpaymentbyuseremail",{"_index":1173,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentbyuseremail(datas",{"_index":1229,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getpaymentbyuseremail(email",{"_index":1186,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getpaymentbyuserid",{"_index":1174,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentbyuserid(datas",{"_index":1231,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getpaymentbyuserid(id",{"_index":1189,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getpayments",{"_index":1221,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getpayments(user",{"_index":1233,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getproductbyid",{"_index":1290,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(@param('id",{"_index":1421,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":1314,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproducts",{"_index":1435,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getproducts(datas",{"_index":1442,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getprofile",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["getratingbyproduct",{"_index":1527,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["getratingbyproduct(@param('productid",{"_index":1572,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["getratingbyproduct(id",{"_index":1537,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["getreviewsbyproduct",{"_index":1528,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["getreviewsbyproduct(@param('productid",{"_index":1565,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["getreviewsbyproduct(id",{"_index":1540,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["getting",{"_index":1935,"title":{"index.html":{}},"body":{}}],["git",{"_index":1997,"title":{},"body":{"index.html":{}}}],["gjy899",{"_index":1377,"title":{},"body":{"controllers/ProductsController.html":{}}}],["global",{"_index":892,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["globally",{"_index":1984,"title":{},"body":{"index.html":{}}}],["gmt+11:00",{"_index":1404,"title":{},"body":{"controllers/ProductsController.html":{}}}],["go",{"_index":2042,"title":{},"body":{"index.html":{}}}],["goneexception",{"_index":1641,"title":{},"body":{"controllers/StripeController.html":{}}}],["google",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["google.strategy",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["googleauth",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["googleauth(@request",{"_index":184,"title":{},"body":{"controllers/AppController.html":{}}}],["googleauth(req",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["googleauthredirect",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["googleauthredirect(@request",{"_index":188,"title":{},"body":{"controllers/AppController.html":{}}}],["googleauthredirect(req",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["googlejwt",{"_index":349,"title":{"interfaces/googleJWT.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"interfaces/googleJWT.html":{}}}],["googlestrategy",{"_index":218,"title":{"injectables/GoogleStrategy.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["googletojwt",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["googletojwt(req",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["guard",{"_index":23,"title":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":25,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["guards/admin.guard",{"_index":1192,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["guards/admin.guard.ts",{"_index":26,"title":{},"body":{"guards/AdminGUard.html":{},"coverage.html":{}}}],["guards/admin.guard.ts:6",{"_index":32,"title":{},"body":{"guards/AdminGUard.html":{}}}],["guards/auth.guard",{"_index":489,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["guards/auth.guard.ts",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guards/auth.guard.ts:5",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/jwt",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["guards/local",{"_index":143,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["h",{"_index":828,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"miscellaneous/enumerations.html":{}}}],["handled",{"_index":761,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["handlelastdeliverydate",{"_index":564,"title":{},"body":{"injectables/CartsService.html":{}}}],["handlelastdeliverydate(cartdelivery",{"_index":589,"title":{},"body":{"injectables/CartsService.html":{}}}],["handlequantityshort",{"_index":565,"title":{},"body":{"injectables/CartsService.html":{}}}],["handlequantityshort(data",{"_index":593,"title":{},"body":{"injectables/CartsService.html":{}}}],["handler",{"_index":757,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["handler.handle().pipe",{"_index":762,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["hasevery",{"_index":1479,"title":{},"body":{"injectables/ProductsService.html":{}}}],["hash",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hash.tostring('hex",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashtocheck",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashtocheck.tostring('hex",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":297,"title":{},"body":{"injectables/AppService.html":{}}}],["http2",{"_index":145,"title":{},"body":{"controllers/AppController.html":{}}}],["http2serverrequest",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["http://localhost:3000/add/product/:productid/:cartid",{"_index":2038,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":2027,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/auth/facebook/callback",{"_index":1106,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["http://localhost:3000/auth/google/callback",{"_index":1127,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["http://localhost:3000/carts/add/cart/:productidstep",{"_index":2037,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/delivery/create/:cartidstep",{"_index":2048,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/login/googlestep",{"_index":2046,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/logingoogle",{"_index":2045,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/payments/createstay",{"_index":2050,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/products/createstep",{"_index":2036,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/remove/product/:productid/:cartid",{"_index":2041,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/users/signupbasic",{"_index":2044,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":2024,"title":{},"body":{"index.html":{}}}],["http://www.passportjs.org/docs/google",{"_index":1124,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["https://console.cloud.google.com/apis",{"_index":2011,"title":{},"body":{"index.html":{}}}],["https://developers.facebook.com/apps",{"_index":2012,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/recipes/documentation",{"_index":2026,"title":{},"body":{"index.html":{}}}],["https://gitlab.com/marine",{"_index":2005,"title":{},"body":{"index.html":{}}}],["https://nodejs.org/en",{"_index":1990,"title":{},"body":{"index.html":{}}}],["https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/apparel",{"_index":1415,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/girl",{"_index":1412,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["https://www.postgresql.org",{"_index":1993,"title":{},"body":{"index.html":{}}}],["id",{"_index":428,"title":{},"body":{"interfaces/Carts.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/JwtStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"interfaces/googleJWT.html":{},"index.html":{}}}],["id'})@patch('/:reviewid",{"_index":1547,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["identifier",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":615,"title":{},"body":{"injectables/CartsService.html":{}}}],["ids",{"_index":938,"title":{},"body":{"controllers/DeliveryController.html":{},"classes/FindManyIdsDTO.html":{},"controllers/ProductsController.html":{}}}],["ignoreexpiration",{"_index":1141,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":27,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PrismaService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/SerializeInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{}}}],["imports",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["include",{"_index":622,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["increment",{"_index":1520,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["increment'})@isnumber",{"_index":1508,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["indépendant",{"_index":1364,"title":{},"body":{"controllers/ProductsController.html":{}}}],["inestapplication",{"_index":1278,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{}}}],["information",{"_index":2010,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":2014,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":292,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/ReviewsService.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":293,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inoffensif",{"_index":1356,"title":{},"body":{"controllers/ProductsController.html":{}}}],["install",{"_index":1952,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1944,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1985,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1945,"title":{},"body":{"index.html":{}}}],["int",{"_index":1697,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["interact",{"_index":1970,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1635,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["intercept(context",{"_index":756,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["interceptors/.../serialize.interceptors.ts",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interceptors/serialize.interceptors",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/UsersController.html":{}}}],["interceptors/serialize.interceptors.ts",{"_index":741,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptors/serialize.interceptors.ts:20",{"_index":1637,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["interceptors/serialize.interceptors.ts:22",{"_index":1638,"title":{},"body":{"classes/SerializeInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"interfaces/ClassConstructor.html":{},"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}},"body":{"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/SerializeInterceptor.html":{},"classes/Sustainable.html":{},"classes/UserCartDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"interfaces/ClassConstructor.html":{},"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"overview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["intermediary",{"_index":636,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{}}}],["international",{"_index":1365,"title":{},"body":{"controllers/ProductsController.html":{}}}],["irritant",{"_index":1359,"title":{},"body":{"controllers/ProductsController.html":{}}}],["isactive",{"_index":817,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["isaffiliateddelivery",{"_index":1243,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["isaffiliateddelivery.affiliateuser.id",{"_index":1256,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isaffiliateddelivery.affiliateuser.stripecustomerid",{"_index":1250,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["isaffiliateddelivery.affiliateuser?.stripecustomerid",{"_index":1245,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["isaffiliateddelivery.id",{"_index":1258,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isaffiliateddelivery.total",{"_index":1248,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["isarray",{"_index":793,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/FindManyIdsDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["isboolean",{"_index":810,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{},"classes/filtersProductsDTO.html":{}}}],["iscart",{"_index":566,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{}}}],["iscart(cartid",{"_index":596,"title":{},"body":{"injectables/CartsService.html":{}}}],["iscart.id",{"_index":1044,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["iscart.products.map(async",{"_index":702,"title":{},"body":{"injectables/CartsService.html":{}}}],["iscart.total",{"_index":1057,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdate",{"_index":811,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["isdatestring",{"_index":812,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["isdecimal",{"_index":813,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["isdelivery",{"_index":1008,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery(cartid",{"_index":1018,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.affiliatecart.total",{"_index":1063,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.delivery_fees",{"_index":1058,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.delivery_type",{"_index":1054,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.free_delivery_amount",{"_index":1053,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.id",{"_index":1056,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isdelivery.total",{"_index":1059,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isemail",{"_index":65,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"classes/userAuthDTO.html":{}}}],["isenum",{"_index":814,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/DeliveryData.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{}}}],["isenum(delivery_type",{"_index":994,"title":{},"body":{"classes/DeliveryData.html":{}}}],["isenum(size",{"_index":1824,"title":{},"body":{"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["isenum(sort",{"_index":1930,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["isglobal",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["ismanyproduct",{"_index":1436,"title":{},"body":{"injectables/ProductsService.html":{}}}],["ismanyproduct(body",{"_index":1444,"title":{},"body":{"injectables/ProductsService.html":{}}}],["isnotempty",{"_index":413,"title":{},"body":{"classes/BodyChargeDto.html":{},"classes/CreateProductDto.html":{},"classes/DataChargeDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/filtersProductsDTO.html":{}}}],["isnumber",{"_index":14,"title":{},"body":{"classes/AddToCartDTO.html":{},"classes/BodyChargeDto.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/PaymentDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{}}}],["isnumber()@isoptional",{"_index":772,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["isnumberstring",{"_index":815,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{}}}],["isoptional",{"_index":66,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/PaymentDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"classes/userAuthDTO.html":{}}}],["ispayment",{"_index":1222,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["ispayment(paymentid",{"_index":1235,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isproduct",{"_index":567,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["isproduct(id",{"_index":1446,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["isproduct(productid",{"_index":598,"title":{},"body":{"injectables/CartsService.html":{}}}],["isproduct.deliverydate",{"_index":674,"title":{},"body":{"injectables/CartsService.html":{}}}],["isproduct.quantity_available[size",{"_index":717,"title":{},"body":{"injectables/CartsService.html":{}}}],["isproductoncart",{"_index":502,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["isproductoncart(quantityincartdata",{"_index":600,"title":{},"body":{"injectables/CartsService.html":{}}}],["isproductoncartid",{"_index":654,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{}}}],["isreview",{"_index":1579,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["isreview(id",{"_index":1588,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["isstring",{"_index":18,"title":{},"body":{"classes/AddToCartDTO.html":{},"interfaces/Adress.html":{},"classes/BodyChargeDto.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/PaymentDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"classes/userAuthDTO.html":{}}}],["isstring()@maxlength(300",{"_index":797,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@maxlength(50",{"_index":808,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isuser",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PaymentsService.html":{}}}],["isuser.admin",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuser.email",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuser.id",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuser.lastname",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuser.password.split",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["isuseradress",{"_index":1028,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isuseradress.adress_delivery",{"_index":1030,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["isuserbyemail",{"_index":1779,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserbyemail(email",{"_index":1785,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserbyid",{"_index":1780,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserbyid(id",{"_index":1787,"title":{},"body":{"injectables/UsersService.html":{}}}],["javascript",{"_index":1981,"title":{},"body":{"index.html":{}}}],["js",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":608,"title":{},"body":{"injectables/CartsService.html":{}}}],["jsonnull",{"_index":643,"title":{},"body":{"injectables/CartsService.html":{}}}],["jsonwebtoken",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":139,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtfromrequest",{"_index":1139,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtprocess",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["jwtservice",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{}}}],["jwtstrategy",{"_index":256,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":2007,"title":{},"body":{"index.html":{}}}],["keys",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["know",{"_index":1511,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["l",{"_index":822,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["la",{"_index":1361,"title":{},"body":{"controllers/ProductsController.html":{}}}],["label",{"_index":1363,"title":{},"body":{"controllers/ProductsController.html":{}}}],["labellis",{"_index":1344,"title":{},"body":{"controllers/ProductsController.html":{}}}],["lastname",{"_index":73,"title":{},"body":{"interfaces/Adress.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/PaymentsService.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{}}}],["le",{"_index":1381,"title":{},"body":{"controllers/ProductsController.html":{}}}],["left",{"_index":670,"title":{},"body":{"injectables/CartsService.html":{}}}],["license",{"_index":1941,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lille",{"_index":1754,"title":{},"body":{"controllers/UsersController.html":{}}}],["line",{"_index":2000,"title":{},"body":{"index.html":{}}}],["link",{"_index":1989,"title":{},"body":{"index.html":{}}}],["local",{"_index":1150,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":142,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["localstrategy",{"_index":258,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":448,"title":{},"body":{"controllers/CartsController.html":{}}}],["logged",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["login",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(req",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["logingoogle",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["logingoogle(req",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":798,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{}}}],["l’accorde",{"_index":1353,"title":{},"body":{"controllers/ProductsController.html":{}}}],["m",{"_index":510,"title":{},"body":{"controllers/CartsController.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["mainly",{"_index":634,"title":{},"body":{"injectables/CartsService.html":{}}}],["manches",{"_index":1339,"title":{},"body":{"controllers/ProductsController.html":{}}}],["many",{"_index":933,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["many.dto",{"_index":946,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["many.dto.ts",{"_index":1114,"title":{},"body":{"classes/FindManyIdsDTO.html":{},"coverage.html":{}}}],["many.dto.ts:7",{"_index":1116,"title":{},"body":{"classes/FindManyIdsDTO.html":{}}}],["map",{"_index":745,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["map((data",{"_index":763,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["marine",{"_index":2052,"title":{},"body":{"index.html":{}}}],["martin",{"_index":1749,"title":{},"body":{"controllers/UsersController.html":{}}}],["matching",{"_index":22,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"index.html":{},"modules.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"overview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"properties.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["math.floor(date.now",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["matière",{"_index":1383,"title":{},"body":{"controllers/ProductsController.html":{}}}],["max",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxage",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["maxlength",{"_index":816,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{}}}],["maxlength(160",{"_index":863,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["maxlength(300",{"_index":818,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{}}}],["maxlength(50",{"_index":819,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{}}}],["merge",{"_index":734,"title":{},"body":{"injectables/CartsService.html":{}}}],["message",{"_index":530,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{}}}],["message(s",{"_index":532,"title":{},"body":{"controllers/CartsController.html":{}}}],["metadata",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":29,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["middlewareconsumer",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["middlewares/current",{"_index":556,"title":{},"body":{"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["miscellaneous",{"_index":1906,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1940,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1860,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{}},"body":{"interfaces/Adress.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"classes/CreateUserDto.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module'})@isoptional()@apipropertyoptional",{"_index":867,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1079,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["morphology",{"_index":63,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["morphopicture",{"_index":834,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{}}}],["myuser",{"_index":1791,"title":{},"body":{"injectables/UsersService.html":{}}}],["n",{"_index":668,"title":{},"body":{"injectables/CartsService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name.familyname",{"_index":1112,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["name.givenname",{"_index":1111,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["namespace",{"_index":893,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["navigate",{"_index":2023,"title":{},"body":{"index.html":{}}}],["need",{"_index":1246,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"index.html":{}}}],["needed",{"_index":1918,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["needed,value",{"_index":1915,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["needed,you",{"_index":1309,"title":{},"body":{"controllers/ProductsController.html":{}}}],["nestinterceptor",{"_index":744,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["nestjs",{"_index":1965,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateProductDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/StripeService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":69,"title":{},"body":{"interfaces/Adress.html":{},"controllers/AppController.html":{},"classes/BodyChargeDto.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"classes/CreateCartDTO.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/FindManyIdsDTO.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"dependencies.html":{},"classes/filtersProductsDTO.html":{},"classes/userAuthDTO.html":{}}}],["nestmiddleware",{"_index":889,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["nestor2@test.fr",{"_index":1765,"title":{},"body":{"controllers/UsersController.html":{}}}],["nestor@test.fr",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["never",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"injectables/DeliveryService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newcart",{"_index":442,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["newcart(createcartdata",{"_index":602,"title":{},"body":{"injectables/CartsService.html":{}}}],["newcart(productid",{"_index":471,"title":{},"body":{"controllers/CartsController.html":{}}}],["newjson",{"_index":644,"title":{},"body":{"injectables/CartsService.html":{}}}],["newpayment",{"_index":1254,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["newpaymentdto",{"_index":1193,"title":{"classes/newPaymentDTO.html":{}},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"classes/newPaymentDTO.html":{}}}],["newproduct",{"_index":1464,"title":{},"body":{"injectables/ProductsService.html":{}}}],["newreview",{"_index":1593,"title":{"interfaces/newReview.html":{}},"body":{"injectables/ReviewsService.html":{},"coverage.html":{},"interfaces/newReview.html":{}}}],["newreview.pictures",{"_index":1606,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["newtotal",{"_index":697,"title":{},"body":{"injectables/CartsService.html":{}}}],["newuser",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.email",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.id",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":886,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["nextfunction",{"_index":887,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["node.js",{"_index":1947,"title":{},"body":{"index.html":{}}}],["nodemon",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1358,"title":{},"body":{"controllers/ProductsController.html":{}}}],["nos",{"_index":1394,"title":{},"body":{"controllers/ProductsController.html":{}}}],["notfounderror",{"_index":1240,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["notfoundexception",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["notfoundexception('incorrect",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception('no",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{}}}],["notfoundexception('one",{"_index":1078,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('product",{"_index":1608,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["notfoundexception('reviews",{"_index":1611,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["notfoundexception(`delivery",{"_index":1069,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["notfoundexception(`no",{"_index":1266,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["notfoundexception(`product",{"_index":1486,"title":{},"body":{"injectables/ProductsService.html":{}}}],["now",{"_index":1319,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["npm",{"_index":1885,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["npx",{"_index":2017,"title":{},"body":{"index.html":{}}}],["null",{"_index":683,"title":{},"body":{"injectables/CartsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":12,"title":{},"body":{"classes/AddToCartDTO.html":{},"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/DeliveryService.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"classes/filtersProductsDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["number(body.quantity",{"_index":515,"title":{},"body":{"controllers/CartsController.html":{}}}],["number(body.quantitywanted",{"_index":521,"title":{},"body":{"controllers/CartsController.html":{}}}],["number(delivery_fees",{"_index":1041,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["number(filters.delivery_fees",{"_index":1061,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["number(free_delivery_amount",{"_index":1039,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["number(iscart.total",{"_index":1038,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["number(products.product.price",{"_index":695,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(products.quantityincart",{"_index":696,"title":{},"body":{"injectables/CartsService.html":{}}}],["number(rating.rating_avg",{"_index":1615,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["number(rating_quality",{"_index":1602,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["number(rating_size",{"_index":1604,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["number(rating_style",{"_index":1603,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["number(total",{"_index":1046,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["number(toupdate.adress_bill.number",{"_index":1810,"title":{},"body":{"injectables/UsersService.html":{}}}],["number(toupdate.adress_bill.postcode",{"_index":1812,"title":{},"body":{"injectables/UsersService.html":{}}}],["numbers",{"_index":851,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["o",{"_index":830,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"miscellaneous/enumerations.html":{}}}],["oauth2",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["oauth20",{"_index":1121,"title":{},"body":{"injectables/GoogleStrategy.html":{},"dependencies.html":{}}}],["object",{"_index":84,"title":{},"body":{"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"classes/CreateUserDto.html":{},"classes/PaymentDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":40,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["oeko",{"_index":1347,"title":{},"body":{"controllers/ProductsController.html":{}}}],["offline",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{}}}],["older",{"_index":724,"title":{},"body":{"injectables/CartsService.html":{}}}],["oldusercart.carts[0",{"_index":737,"title":{},"body":{"injectables/CartsService.html":{}}}],["oldusercart.carts[0].id",{"_index":719,"title":{},"body":{"injectables/CartsService.html":{}}}],["once",{"_index":934,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["one",{"_index":1052,"title":{},"body":{"injectables/DeliveryService.html":{},"index.html":{}}}],["onmoduleinit",{"_index":1276,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1996,"title":{},"body":{"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CartDbData.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/createUser.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"classes/userAuthDTO.html":{}}}],["orderby",{"_index":1153,"title":{"interfaces/OrderBy.html":{}},"body":{"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["out",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":2058,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":728,"title":{},"body":{"injectables/CartsService.html":{},"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{},"injectables/ReviewsService.html":{},"interfaces/newReview.html":{}}}],["ownercart",{"_index":423,"title":{"interfaces/ownerCart.html":{}},"body":{"interfaces/CartDbData.html":{},"coverage.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["ownerid",{"_index":1268,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["p",{"_index":2019,"title":{},"body":{"index.html":{}}}],["package",{"_index":1862,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginate:number",{"_index":1921,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["paid",{"_index":1260,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["paiement",{"_index":2049,"title":{},"body":{"index.html":{}}}],["param",{"_index":480,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{}}}],["param('cartid",{"_index":504,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{}}}],["param('email",{"_index":1211,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["param('id",{"_index":1214,"title":{},"body":{"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{}}}],["param('productid",{"_index":503,"title":{},"body":{"controllers/CartsController.html":{},"controllers/ReviewsController.html":{}}}],["param('reviewid",{"_index":1568,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["parsefloat(price",{"_index":1466,"title":{},"body":{"injectables/ProductsService.html":{}}}],["parsefloat(rating_avg.tofixed(2",{"_index":1601,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["parsefloat(toupdate.description",{"_index":1492,"title":{},"body":{"injectables/ProductsService.html":{}}}],["partial",{"_index":538,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["passport",{"_index":1097,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1095,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1099,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":72,"title":{},"body":{"interfaces/Adress.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/userAuthDTO.html":{}}}],["patch",{"_index":481,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:cartid",{"_index":943,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["patch('/:id",{"_index":1424,"title":{},"body":{"controllers/ProductsController.html":{}}}],["patch('/:reviewid",{"_index":1567,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["patch('/add/owner",{"_index":525,"title":{},"body":{"controllers/CartsController.html":{}}}],["patch('/add/product/:productid/:cartid",{"_index":520,"title":{},"body":{"controllers/CartsController.html":{}}}],["patch('/error_message/delete/:cartid",{"_index":463,"title":{},"body":{"controllers/CartsController.html":{}}}],["patch('remove/product/:productid/:cartid",{"_index":536,"title":{},"body":{"controllers/CartsController.html":{}}}],["path",{"_index":613,"title":{},"body":{"injectables/CartsService.html":{},"controllers/ProductsController.html":{}}}],["patte",{"_index":1398,"title":{},"body":{"controllers/ProductsController.html":{}}}],["payload",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.data",{"_index":1142,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.iat",{"_index":1143,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":1178,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"index.html":{}}}],["payment.paymentmethodid",{"_index":1203,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payment_method",{"_index":1679,"title":{},"body":{"injectables/StripeService.html":{}}}],["paymentdto",{"_index":1157,"title":{"classes/PaymentDTO.html":{}},"body":{"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"coverage.html":{}}}],["paymentid",{"_index":1185,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["paymentmethod",{"_index":909,"title":{},"body":{"classes/DataChargeDto.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{}}}],["paymentmethodid",{"_index":410,"title":{},"body":{"classes/BodyChargeDto.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/StripeService.html":{}}}],["payments",{"_index":1169,"title":{},"body":{"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["payments.controller",{"_index":1219,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["payments.service",{"_index":1196,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["payments/payments.controller",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["payments/payments.module",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["payments/payments.service",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentscontroller",{"_index":228,"title":{"controllers/PaymentsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"coverage.html":{}}}],["paymentservice",{"_index":1201,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["paymentsfilters",{"_index":1155,"title":{"interfaces/PaymentsFilters.html":{}},"body":{"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"coverage.html":{}}}],["paymentsmodule",{"_index":212,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsservice",{"_index":219,"title":{"injectables/PaymentsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"coverage.html":{},"overview.html":{}}}],["peau",{"_index":1362,"title":{},"body":{"controllers/ProductsController.html":{}}}],["pending",{"_index":675,"title":{},"body":{"injectables/CartsService.html":{}}}],["peu",{"_index":1558,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["photos",{"_index":1128,"title":{},"body":{"injectables/GoogleStrategy.html":{},"controllers/ReviewsController.html":{}}}],["photos[0].value",{"_index":1130,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["picture",{"_index":1129,"title":{},"body":{"injectables/GoogleStrategy.html":{},"interfaces/googleJWT.html":{}}}],["pictures",{"_index":786,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{},"controllers/UsersController.html":{},"interfaces/newReview.html":{}}}],["picturestags",{"_index":831,"title":{"interfaces/PicturesTags.html":{}},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"coverage.html":{}}}],["places",{"_index":2004,"title":{},"body":{"index.html":{}}}],["plaintoclass",{"_index":747,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plaintoinstance",{"_index":748,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["plaintoinstance(this.dto",{"_index":764,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["please",{"_index":447,"title":{},"body":{"controllers/CartsController.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"index.html":{}}}],["plutôt",{"_index":1561,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["popularity",{"_index":1911,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["port",{"_index":1752,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":1297,"title":{},"body":{"controllers/ProductsController.html":{}}}],["possibler",{"_index":2015,"title":{},"body":{"index.html":{}}}],["possibles",{"_index":852,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["post",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["post('/:productid/:cartid",{"_index":501,"title":{},"body":{"controllers/CartsController.html":{}}}],["post('/allproductsbycategory",{"_index":1419,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('/create",{"_index":1202,"title":{},"body":{"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{}}}],["post('/create/:cartid",{"_index":960,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["post('/create/:productid",{"_index":1563,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["post('/signup",{"_index":1758,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('add/cart/:productid",{"_index":513,"title":{},"body":{"controllers/CartsController.html":{}}}],["post('deletemany",{"_index":982,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["post('login",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["postcode",{"_index":60,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["postgresql",{"_index":1971,"title":{},"body":{"index.html":{}}}],["postico",{"_index":1983,"title":{},"body":{"index.html":{}}}],["postman",{"_index":1979,"title":{},"body":{"index.html":{}}}],["pour",{"_index":1360,"title":{},"body":{"controllers/ProductsController.html":{}}}],["prefix",{"_index":435,"title":{},"body":{"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":625,"title":{},"body":{"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["pricesort",{"_index":1912,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["prisma",{"_index":574,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["prisma.jsonarray",{"_index":645,"title":{},"body":{"injectables/CartsService.html":{}}}],["prisma.jsonnull",{"_index":682,"title":{},"body":{"injectables/CartsService.html":{}}}],["prisma/client",{"_index":64,"title":{},"body":{"interfaces/Adress.html":{},"interfaces/CartDbData.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateUserDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"controllers/PaymentsController.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"dependencies.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["prisma/client/runtime",{"_index":422,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["prisma/prisma.service",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":1274,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":220,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":163,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{}}}],["process.env.facebook_app_id",{"_index":1102,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["process.env.facebook_secret",{"_index":1104,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["process.env.google_auth_client_id",{"_index":1125,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.google_auth_client_secret",{"_index":1126,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.jwtsecretkey",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["process.env.stripe_currency",{"_index":1681,"title":{},"body":{"injectables/StripeService.html":{}}}],["product",{"_index":475,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"index.html":{}}}],["product'})@isstring",{"_index":778,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["product(s",{"_index":1080,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["product.dto",{"_index":1325,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product.dto.ts",{"_index":782,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["product.dto.ts:18",{"_index":1684,"title":{},"body":{"classes/Sustainable.html":{}}}],["product.dto.ts:22",{"_index":1683,"title":{},"body":{"classes/Sustainable.html":{}}}],["product.dto.ts:26",{"_index":794,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:29",{"_index":804,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:35",{"_index":809,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:41",{"_index":799,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:44",{"_index":791,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:47",{"_index":795,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:50",{"_index":806,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:53",{"_index":807,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:56",{"_index":796,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:59",{"_index":801,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:62",{"_index":805,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:65",{"_index":803,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:68",{"_index":800,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.id",{"_index":1599,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["productdelivery",{"_index":590,"title":{},"body":{"injectables/CartsService.html":{}}}],["productid",{"_index":456,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/addProductDTO.html":{}}}],["productids",{"_index":935,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["productidsarray",{"_index":1428,"title":{},"body":{"controllers/ProductsController.html":{}}}],["production",{"_index":2032,"title":{},"body":{"index.html":{}}}],["productmorphology",{"_index":826,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"miscellaneous/enumerations.html":{}}}],["productoncartid",{"_index":627,"title":{},"body":{"injectables/CartsService.html":{}}}],["productoncartid.id",{"_index":631,"title":{},"body":{"injectables/CartsService.html":{}}}],["products",{"_index":518,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"injectables/ReviewsService.html":{},"interfaces/newReview.html":{}}}],["products.controller",{"_index":1433,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.product.quantity_available[products.size",{"_index":706,"title":{},"body":{"injectables/CartsService.html":{}}}],["products.productid",{"_index":718,"title":{},"body":{"injectables/CartsService.html":{}}}],["products.quantityincart",{"_index":694,"title":{},"body":{"injectables/CartsService.html":{}}}],["products.service",{"_index":1326,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products.size",{"_index":720,"title":{},"body":{"injectables/CartsService.html":{}}}],["products/products.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["products/products.service",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["productscart",{"_index":425,"title":{"interfaces/productsCart.html":{}},"body":{"interfaces/CartDbData.html":{},"coverage.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["productscontroller",{"_index":1285,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productservice",{"_index":572,"title":{},"body":{"injectables/CartsService.html":{},"controllers/ProductsController.html":{}}}],["productsizes",{"_index":802,"title":{"interfaces/ProductSizes.html":{}},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"coverage.html":{}}}],["productsmodule",{"_index":213,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsoncart",{"_index":638,"title":{},"body":{"injectables/CartsService.html":{}}}],["productsservice",{"_index":221,"title":{"injectables/ProductsService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["productstodelete",{"_index":1500,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsustainable",{"_index":1462,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsustainable.id",{"_index":1468,"title":{},"body":{"injectables/ProductsService.html":{}}}],["producttodelete",{"_index":1499,"title":{},"body":{"injectables/ProductsService.html":{}}}],["producttoupdate",{"_index":1484,"title":{},"body":{"injectables/ProductsService.html":{}}}],["produit",{"_index":1343,"title":{},"body":{"controllers/ProductsController.html":{}}}],["profile",{"_index":1088,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["profilefields",{"_index":1108,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["project",{"_index":1960,"title":{},"body":{"index.html":{}}}],["promise",{"_index":39,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["promise(async",{"_index":704,"title":{},"body":{"injectables/CartsService.html":{}}}],["promise.all(ps).then((values",{"_index":725,"title":{},"body":{"injectables/CartsService.html":{}}}],["promisify",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["promisify(_scrypt",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddToCartDTO.html":{},"interfaces/Adress.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/FindManyIdsDTO.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"interfaces/PaymentsFilters.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"properties.html":{},"classes/userAuthDTO.html":{}}}],["protège",{"_index":1369,"title":{},"body":{"controllers/ProductsController.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{}}}],["ps",{"_index":701,"title":{},"body":{"injectables/CartsService.html":{}}}],["ps.push",{"_index":703,"title":{},"body":{"injectables/CartsService.html":{}}}],["public",{"_index":1660,"title":{},"body":{"injectables/StripeService.html":{}}}],["put",{"_index":768,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/addProductDTO.html":{}}}],["quantities",{"_index":690,"title":{},"body":{"injectables/CartsService.html":{}}}],["quantity",{"_index":511,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"controllers/StripeController.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["quantity_available",{"_index":624,"title":{},"body":{"injectables/CartsService.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["quantity_available.l",{"_index":1454,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.m",{"_index":1453,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.s",{"_index":1452,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.xl",{"_index":1455,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.xs",{"_index":1451,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.xxl",{"_index":1456,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantity_available.xxs",{"_index":1450,"title":{},"body":{"injectables/ProductsService.html":{}}}],["quantityavailable",{"_index":1423,"title":{},"body":{"controllers/ProductsController.html":{}}}],["quantityincart",{"_index":630,"title":{},"body":{"injectables/CartsService.html":{}}}],["quantityincartbyproduct",{"_index":568,"title":{},"body":{"injectables/CartsService.html":{}}}],["quantityincartbyproduct(quantityincartdata",{"_index":604,"title":{},"body":{"injectables/CartsService.html":{}}}],["quantityincartdata",{"_index":537,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["quantityincartproduct",{"_index":707,"title":{},"body":{"injectables/CartsService.html":{}}}],["quantityshort",{"_index":655,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{}}}],["quantityshortdto",{"_index":594,"title":{"classes/QuantityShortDTO.html":{}},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{},"coverage.html":{}}}],["quantitywanted",{"_index":523,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["query",{"_index":482,"title":{},"body":{"controllers/CartsController.html":{},"controllers/PaymentsController.html":{},"controllers/ProductsController.html":{}}}],["queryfilter",{"_index":1223,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["queryfilter(datas",{"_index":1237,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["qui",{"_index":1368,"title":{},"body":{"controllers/ProductsController.html":{}}}],["randombytes",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["randombytes(8).tostring('hex",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["rating",{"_index":1597,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["rating_avg",{"_index":1473,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"interfaces/newReview.html":{}}}],["rating_quality",{"_index":842,"title":{},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"interfaces/newReview.html":{}}}],["rating_size",{"_index":843,"title":{},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"interfaces/newReview.html":{}}}],["rating_style",{"_index":844,"title":{},"body":{"classes/CreateReviewDto.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"interfaces/newReview.html":{}}}],["readonly",{"_index":164,"title":{},"body":{"controllers/AppController.html":{},"controllers/StripeController.html":{}}}],["recalculate",{"_index":664,"title":{},"body":{"injectables/CartsService.html":{}}}],["red",{"_index":1380,"title":{},"body":{"controllers/ProductsController.html":{}}}],["redoute",{"_index":1400,"title":{},"body":{"controllers/ProductsController.html":{}}}],["ref",{"_index":787,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["reflect",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":1087,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["registered",{"_index":2047,"title":{},"body":{"index.html":{}}}],["reinstalling",{"_index":1987,"title":{},"body":{"index.html":{}}}],["reject",{"_index":705,"title":{},"body":{"injectables/CartsService.html":{}}}],["related",{"_index":689,"title":{},"body":{"injectables/CartsService.html":{}}}],["remove",{"_index":2040,"title":{},"body":{"index.html":{}}}],["req",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/StripeController.html":{}}}],["req.currentcart",{"_index":896,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{}}}],["req.currentuser",{"_index":906,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{}}}],["req.email",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.firstname",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.lastname",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.session",{"_index":894,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["req.session.cartid",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{}}}],["req.token",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.user",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["request",{"_index":47,"title":{"interfaces/Request.html":{},"interfaces/Request-1.html":{}},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"guards/AuthGuard.html":{},"controllers/CartsController.html":{},"interfaces/ClassConstructor.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.currentcart",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.profile",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.session.userid",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.user",{"_index":49,"title":{},"body":{"guards/AdminGUard.html":{},"miscellaneous/variables.html":{}}}],["request.user.admin",{"_index":52,"title":{},"body":{"guards/AdminGUard.html":{}}}],["require",{"_index":1991,"title":{},"body":{"index.html":{}}}],["require('cookie",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":1311,"title":{},"body":{"controllers/ProductsController.html":{}}}],["requirement",{"_index":1946,"title":{},"body":{"index.html":{}}}],["res",{"_index":483,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["reset",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve",{"_index":612,"title":{},"body":{"injectables/CartsService.html":{}}}],["resolve('product",{"_index":722,"title":{},"body":{"injectables/CartsService.html":{}}}],["responsable",{"_index":1374,"title":{},"body":{"controllers/ProductsController.html":{}}}],["response",{"_index":459,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/ProductsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["response.status(200).send",{"_index":529,"title":{},"body":{"controllers/CartsController.html":{}}}],["response.status(404).send",{"_index":534,"title":{},"body":{"controllers/CartsController.html":{}}}],["restful",{"_index":1975,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":658,"title":{},"body":{"injectables/CartsService.html":{}}}],["result",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":21,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"index.html":{},"modules.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"overview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"properties.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":170,"title":{},"body":{"controllers/AppController.html":{}}}],["returned'})@post('login",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["returns",{"_index":37,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":1556,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto",{"_index":1549,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["review.dto.ts",{"_index":841,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:10",{"_index":860,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:17",{"_index":847,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:21",{"_index":855,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:25",{"_index":1695,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:26",{"_index":858,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:30",{"_index":1699,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:31",{"_index":857,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:35",{"_index":850,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:40",{"_index":1700,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:45",{"_index":1703,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["review.dto.ts:49",{"_index":1696,"title":{},"body":{"classes/UpdateReviewDto.html":{}}}],["reviews",{"_index":1524,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["reviews.controller",{"_index":1577,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["reviews.length",{"_index":1613,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews.map((rating",{"_index":1614,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviews.service",{"_index":1552,"title":{},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{}}}],["reviews/reviews.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["reviewscontroller",{"_index":1522,"title":{"controllers/ReviewsController.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"coverage.html":{}}}],["reviewservice",{"_index":1555,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["reviewsmodule",{"_index":214,"title":{"modules/ReviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewsservice",{"_index":1551,"title":{"injectables/ReviewsService.html":{}},"body":{"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["reviewtodelete",{"_index":1633,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewtoupdate",{"_index":1617,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewtoupdate.productid",{"_index":1632,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewtoupdate.rating_quality",{"_index":1628,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewtoupdate.rating_size",{"_index":1630,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["reviewtoupdate.rating_style",{"_index":1629,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["rimraf",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["route",{"_index":1269,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["routes",{"_index":1972,"title":{},"body":{"index.html":{}}}],["rue",{"_index":1750,"title":{},"body":{"controllers/UsersController.html":{}}}],["run",{"_index":758,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"index.html":{}}}],["runinthiscontext",{"_index":490,"title":{},"body":{"controllers/CartsController.html":{}}}],["running",{"_index":2028,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":42,"title":{},"body":{"guards/AdminGUard.html":{},"guards/AuthGuard.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"injectables/PaymentsService.html":{},"classes/SerializeInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":746,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["référence",{"_index":1367,"title":{},"body":{"controllers/ProductsController.html":{}}}],["s",{"_index":821,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["sain",{"_index":1373,"title":{},"body":{"controllers/ProductsController.html":{}}}],["salt",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["sant",{"_index":1370,"title":{},"body":{"controllers/ProductsController.html":{}}}],["saturday",{"_index":954,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["scope",{"_index":1107,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["scrypt",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrypt(password",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["scrypt(toupdate.password",{"_index":1806,"title":{},"body":{"injectables/UsersService.html":{}}}],["search",{"_index":1478,"title":{},"body":{"injectables/ProductsService.html":{}}}],["secret",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1138,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":623,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"injectables/ReviewsService.html":{}}}],["send",{"_index":666,"title":{},"body":{"injectables/CartsService.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{}}}],["senderrormessageoncart",{"_index":569,"title":{},"body":{"injectables/CartsService.html":{}}}],["senderrormessageoncart(json",{"_index":606,"title":{},"body":{"injectables/CartsService.html":{}}}],["september",{"_index":955,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["serialize",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["serialize(dto",{"_index":751,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"miscellaneous/functions.html":{}}}],["serialize(userdto",{"_index":160,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["serializeinterceptor",{"_index":754,"title":{"classes/SerializeInterceptor.html":{}},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"coverage.html":{}}}],["serializeinterceptor(dto",{"_index":753,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["session",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CartsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.cartid",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{}}}],["session.userid",{"_index":1762,"title":{},"body":{"controllers/UsersController.html":{}}}],["shirt",{"_index":1336,"title":{},"body":{"controllers/ProductsController.html":{}}}],["signoptions",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["signout",{"_index":1728,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(@session",{"_index":1761,"title":{},"body":{"controllers/UsersController.html":{}}}],["signout(session",{"_index":1736,"title":{},"body":{"controllers/UsersController.html":{}}}],["signup",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["signup(@body",{"_index":1759,"title":{},"body":{"controllers/UsersController.html":{}}}],["signup(createuserdata",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["simply",{"_index":2001,"title":{},"body":{"index.html":{}}}],["site",{"_index":1963,"title":{},"body":{"index.html":{}}}],["size",{"_index":81,"title":{},"body":{"interfaces/Adress.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/userAuthDTO.html":{}}}],["size'})@isnumber",{"_index":1503,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["sizepicture",{"_index":838,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{}}}],["skip",{"_index":1475,"title":{},"body":{"injectables/ProductsService.html":{},"classes/filtersProductsDTO.html":{}}}],["something",{"_index":759,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["son",{"_index":1387,"title":{},"body":{"controllers/ProductsController.html":{}}}],["sopen",{"_index":2021,"title":{},"body":{"index.html":{}}}],["sort",{"_index":1156,"title":{},"body":{"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{}}}],["sortdate",{"_index":1913,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"classes/newPaymentDTO.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{}}}],["sql",{"_index":1948,"title":{},"body":{"index.html":{}}}],["src",{"_index":832,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Sustainable.html":{}}}],["src/.../app.module.ts",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../current",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filters.dto.ts",{"_index":1909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../payment.dto.ts",{"_index":1910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.service.ts",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:103",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:118",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:61",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:85",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:89",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:93",{"_index":113,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:76",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":294,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":296,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts:115",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:66",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:74",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/customtype/google_jwt.type.ts",{"_index":1842,"title":{},"body":{"coverage.html":{},"interfaces/googleJWT.html":{}}}],["src/auth/dtos/user",{"_index":1844,"title":{},"body":{"coverage.html":{},"classes/userAuthDTO.html":{}}}],["src/auth/facebook.strategy.ts",{"_index":1083,"title":{},"body":{"injectables/FacebookStrategy.html":{},"coverage.html":{}}}],["src/auth/facebook.strategy.ts:17",{"_index":1093,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["src/auth/facebook.strategy.ts:6",{"_index":1085,"title":{},"body":{"injectables/FacebookStrategy.html":{}}}],["src/auth/google.strategy.ts",{"_index":1117,"title":{},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["src/auth/google.strategy.ts:10",{"_index":1118,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/auth/google.strategy.ts:24",{"_index":1120,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1133,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":1136,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":1134,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1145,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:16",{"_index":1149,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:8",{"_index":1147,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/carts/carts.controller.ts",{"_index":434,"title":{},"body":{"controllers/CartsController.html":{},"coverage.html":{}}}],["src/carts/carts.controller.ts:106",{"_index":455,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:127",{"_index":450,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:141",{"_index":464,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:159",{"_index":461,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:185",{"_index":467,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:55",{"_index":470,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.controller.ts:72",{"_index":478,"title":{},"body":{"controllers/CartsController.html":{}}}],["src/carts/carts.module.ts",{"_index":549,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.module.ts:14",{"_index":550,"title":{},"body":{"modules/CartsModule.html":{}}}],["src/carts/carts.service",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CurrentCartMiddleware.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["src/carts/carts.service.ts",{"_index":558,"title":{},"body":{"injectables/CartsService.html":{},"coverage.html":{}}}],["src/carts/carts.service.ts:121",{"_index":595,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:164",{"_index":603,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:196",{"_index":584,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:20",{"_index":573,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:209",{"_index":588,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:243",{"_index":580,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:255",{"_index":610,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:26",{"_index":597,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:274",{"_index":582,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:357",{"_index":591,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:364",{"_index":578,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:45",{"_index":605,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:515",{"_index":586,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:582",{"_index":576,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:67",{"_index":599,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:697",{"_index":587,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:71",{"_index":601,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/carts.service.ts:85",{"_index":607,"title":{},"body":{"injectables/CartsService.html":{}}}],["src/carts/custontype/cartdb.ts",{"_index":416,"title":{},"body":{"interfaces/CartDbData.html":{},"coverage.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["src/carts/decorators/current",{"_index":1198,"title":{},"body":{"controllers/PaymentsController.html":{},"controllers/StripeController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/carts/dtos/add_product_data.dto.ts",{"_index":1825,"title":{},"body":{"classes/addProductDataDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/add_product_data.dto.ts:14",{"_index":1826,"title":{},"body":{"classes/addProductDataDTO.html":{}}}],["src/carts/dtos/add_product_data.dto.ts:7",{"_index":1827,"title":{},"body":{"classes/addProductDataDTO.html":{}}}],["src/carts/dtos/add_to_cart.dto.ts",{"_index":6,"title":{},"body":{"classes/AddToCartDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/add_to_cart.dto.ts:5",{"_index":16,"title":{},"body":{"classes/AddToCartDTO.html":{}}}],["src/carts/dtos/addproduct.dto.ts",{"_index":1817,"title":{},"body":{"classes/addProductDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/addproduct.dto.ts:14",{"_index":1821,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/carts/dtos/addproduct.dto.ts:18",{"_index":1820,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/carts/dtos/addproduct.dto.ts:22",{"_index":1818,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/carts/dtos/addproduct.dto.ts:7",{"_index":1823,"title":{},"body":{"classes/addProductDTO.html":{}}}],["src/carts/dtos/create_cart.dto",{"_index":1642,"title":{},"body":{"controllers/StripeController.html":{}}}],["src/carts/dtos/create_cart.dto.ts",{"_index":766,"title":{},"body":{"classes/CreateCartDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/create_cart.dto.ts:10",{"_index":779,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["src/carts/dtos/create_cart.dto.ts:17",{"_index":773,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["src/carts/dtos/create_cart.dto.ts:22",{"_index":770,"title":{},"body":{"classes/CreateCartDTO.html":{}}}],["src/carts/dtos/quantity_short.dto.ts",{"_index":1502,"title":{},"body":{"classes/QuantityShortDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/quantity_short.dto.ts:12",{"_index":1509,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["src/carts/dtos/quantity_short.dto.ts:19",{"_index":1514,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["src/carts/dtos/quantity_short.dto.ts:23",{"_index":1504,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["src/carts/dtos/quantity_short.dto.ts:29",{"_index":1519,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["src/carts/dtos/quantity_short.dto.ts:5",{"_index":1505,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["src/carts/dtos/total_cart.dto.ts",{"_index":1689,"title":{},"body":{"classes/Total_cartDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/total_cart.dto.ts:11",{"_index":1690,"title":{},"body":{"classes/Total_cartDTO.html":{}}}],["src/carts/dtos/total_cart.dto.ts:7",{"_index":1691,"title":{},"body":{"classes/Total_cartDTO.html":{}}}],["src/carts/dtos/usercart.dto",{"_index":890,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"controllers/StripeController.html":{}}}],["src/carts/dtos/usercart.dto.ts",{"_index":426,"title":{},"body":{"interfaces/Carts.html":{},"classes/UserCartDTO.html":{},"coverage.html":{}}}],["src/carts/dtos/usercart.dto.ts:12",{"_index":1707,"title":{},"body":{"classes/UserCartDTO.html":{}}}],["src/carts/dtos/usercart.dto.ts:16",{"_index":1706,"title":{},"body":{"classes/UserCartDTO.html":{}}}],["src/carts/dtos/usercart.dto.ts:8",{"_index":1708,"title":{},"body":{"classes/UserCartDTO.html":{}}}],["src/carts/middlewares/current",{"_index":880,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/delivery/delivery.controller.ts",{"_index":914,"title":{},"body":{"controllers/DeliveryController.html":{},"coverage.html":{}}}],["src/delivery/delivery.controller.ts:43",{"_index":928,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:57",{"_index":923,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:61",{"_index":940,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:65",{"_index":944,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:73",{"_index":930,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:92",{"_index":937,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.module",{"_index":1657,"title":{},"body":{"modules/StripeModule.html":{}}}],["src/delivery/delivery.module.ts",{"_index":1003,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["src/delivery/delivery.service",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/UsersModule.html":{}}}],["src/delivery/delivery.service.ts",{"_index":1005,"title":{},"body":{"injectables/DeliveryService.html":{},"coverage.html":{}}}],["src/delivery/delivery.service.ts:104",{"_index":1010,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:14",{"_index":1009,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:140",{"_index":1021,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:194",{"_index":1013,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:202",{"_index":1017,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:21",{"_index":1012,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:213",{"_index":1015,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:89",{"_index":1019,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/dtos/create_delivery.dto.ts",{"_index":985,"title":{},"body":{"classes/DeliveryData.html":{},"coverage.html":{}}}],["src/delivery/dtos/create_delivery.dto.ts:13",{"_index":986,"title":{},"body":{"classes/DeliveryData.html":{}}}],["src/delivery/dtos/create_delivery.dto.ts:17",{"_index":988,"title":{},"body":{"classes/DeliveryData.html":{}}}],["src/delivery/dtos/create_delivery.dto.ts:23",{"_index":993,"title":{},"body":{"classes/DeliveryData.html":{}}}],["src/delivery/dtos/create_delivery.dto.ts:9",{"_index":990,"title":{},"body":{"classes/DeliveryData.html":{}}}],["src/delivery/dtos/delivery.dto.ts",{"_index":996,"title":{},"body":{"classes/DeliveryData-1.html":{},"coverage.html":{}}}],["src/delivery/dtos/delivery.dto.ts:6",{"_index":999,"title":{},"body":{"classes/DeliveryData-1.html":{}}}],["src/delivery/dtos/delivery.dto.ts:7",{"_index":997,"title":{},"body":{"classes/DeliveryData-1.html":{}}}],["src/delivery/dtos/delivery.dto.ts:8",{"_index":998,"title":{},"body":{"classes/DeliveryData-1.html":{}}}],["src/delivery/dtos/delivery.dto.ts:9",{"_index":1000,"title":{},"body":{"classes/DeliveryData-1.html":{}}}],["src/main.ts",{"_index":1851,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/payments/customtypes/all_payments.ts",{"_index":1154,"title":{},"body":{"interfaces/OrderBy.html":{},"interfaces/PaymentsFilters.html":{},"coverage.html":{}}}],["src/payments/dtos/create_payment.dto.ts",{"_index":1853,"title":{},"body":{"coverage.html":{},"classes/newPaymentDTO.html":{}}}],["src/payments/dtos/payment.dto",{"_index":1330,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/payments/dtos/payment.dto.ts",{"_index":1158,"title":{},"body":{"classes/PaymentDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/payments/dtos/payment.dto.ts:11",{"_index":1162,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["src/payments/dtos/payment.dto.ts:15",{"_index":1160,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["src/payments/dtos/payment.dto.ts:19",{"_index":1164,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["src/payments/dtos/payment.dto.ts:21",{"_index":1165,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["src/payments/dtos/payment.dto.ts:7",{"_index":1161,"title":{},"body":{"classes/PaymentDTO.html":{}}}],["src/payments/payments.controller.ts",{"_index":1168,"title":{},"body":{"controllers/PaymentsController.html":{},"coverage.html":{}}}],["src/payments/payments.controller.ts:33",{"_index":1177,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:43",{"_index":1180,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:48",{"_index":1184,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:54",{"_index":1188,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.controller.ts:64",{"_index":1191,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/payments/payments.module.ts",{"_index":1218,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["src/payments/payments.service.ts",{"_index":1220,"title":{},"body":{"injectables/PaymentsService.html":{},"coverage.html":{}}}],["src/payments/payments.service.ts:113",{"_index":1236,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:128",{"_index":1234,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:152",{"_index":1230,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:164",{"_index":1232,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:20",{"_index":1225,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:29",{"_index":1227,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:70",{"_index":1238,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/payments/payments.service.ts:90",{"_index":1228,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["src/prisma/prisma.service",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/ReviewsModule.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1273,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":1279,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":1281,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/products/dtos/create",{"_index":781,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/products/dtos/filters.dto.ts",{"_index":1855,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/filters.dto.ts:25",{"_index":1926,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/filters.dto.ts:32",{"_index":1920,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/filters.dto.ts:39",{"_index":1917,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/filters.dto.ts:46",{"_index":1923,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/filters.dto.ts:54",{"_index":1929,"title":{},"body":{"classes/filtersProductsDTO.html":{}}}],["src/products/dtos/find",{"_index":945,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/FindManyIdsDTO.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":1286,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:105",{"_index":1316,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:129",{"_index":1323,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:137",{"_index":1305,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:156",{"_index":1302,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:78",{"_index":1299,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:95",{"_index":1313,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":1432,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{}}}],["src/products/products.service.ts",{"_index":1434,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:108",{"_index":1443,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:11",{"_index":1439,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:160",{"_index":1447,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:165",{"_index":1445,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:176",{"_index":1449,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:248",{"_index":1441,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:256",{"_index":1440,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:8",{"_index":1438,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/reviews/customtypes/newreview.type.ts",{"_index":1856,"title":{},"body":{"coverage.html":{},"interfaces/newReview.html":{}}}],["src/reviews/dtos/create",{"_index":840,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/dtos/update",{"_index":1692,"title":{},"body":{"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts",{"_index":1523,"title":{},"body":{"controllers/ReviewsController.html":{},"coverage.html":{}}}],["src/reviews/reviews.controller.ts:51",{"_index":1532,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:62",{"_index":1542,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:71",{"_index":1548,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:79",{"_index":1536,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.controller.ts:83",{"_index":1539,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["src/reviews/reviews.module.ts",{"_index":1576,"title":{},"body":{"modules/ReviewsModule.html":{}}}],["src/reviews/reviews.service.ts",{"_index":1578,"title":{},"body":{"injectables/ReviewsService.html":{},"coverage.html":{}}}],["src/reviews/reviews.service.ts:111",{"_index":1592,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:12",{"_index":1587,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:16",{"_index":1589,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:180",{"_index":1584,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:190",{"_index":1591,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:22",{"_index":1583,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:65",{"_index":1586,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:82",{"_index":1585,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/reviews/reviews.service.ts:9",{"_index":1581,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["src/stripe/dtos/bodycharge.dto",{"_index":1197,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["src/stripe/dtos/bodycharge.dto.ts",{"_index":409,"title":{},"body":{"classes/BodyChargeDto.html":{},"coverage.html":{}}}],["src/stripe/dtos/bodycharge.dto.ts:8",{"_index":412,"title":{},"body":{"classes/BodyChargeDto.html":{}}}],["src/stripe/dtos/charge_data.dto.ts",{"_index":908,"title":{},"body":{"classes/DataChargeDto.html":{},"coverage.html":{}}}],["src/stripe/dtos/charge_data.dto.ts:10",{"_index":911,"title":{},"body":{"classes/DataChargeDto.html":{}}}],["src/stripe/dtos/charge_data.dto.ts:12",{"_index":912,"title":{},"body":{"classes/DataChargeDto.html":{}}}],["src/stripe/dtos/charge_data.dto.ts:14",{"_index":910,"title":{},"body":{"classes/DataChargeDto.html":{}}}],["src/stripe/stripe.controller.ts",{"_index":1640,"title":{},"body":{"controllers/StripeController.html":{},"coverage.html":{}}}],["src/stripe/stripe.module.ts",{"_index":1656,"title":{},"body":{"modules/StripeModule.html":{}}}],["src/stripe/stripe.service",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"modules/UsersModule.html":{}}}],["src/stripe/stripe.service.ts",{"_index":1659,"title":{},"body":{"injectables/StripeService.html":{},"coverage.html":{}}}],["src/stripe/stripe.service.ts:10",{"_index":1664,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/stripe/stripe.service.ts:17",{"_index":1668,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/stripe/stripe.service.ts:24",{"_index":1666,"title":{},"body":{"injectables/StripeService.html":{}}}],["src/users/customtypes/user.type.ts",{"_index":1829,"title":{},"body":{"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{}}}],["src/users/decorators/current",{"_index":44,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dtos/create",{"_index":56,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/token.dto.ts",{"_index":1686,"title":{},"body":{"classes/TokenDto.html":{},"coverage.html":{}}}],["src/users/dtos/token.dto.ts:10",{"_index":1688,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/users/dtos/user.dto",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CartsController.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/StripeController.html":{}}}],["src/users/dtos/user.dto.ts",{"_index":1709,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dtos/user.dto.ts:10",{"_index":1716,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:14",{"_index":1717,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:18",{"_index":1715,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:23",{"_index":1719,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:28",{"_index":1720,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:33",{"_index":1723,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:38",{"_index":1711,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:43",{"_index":1714,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:47",{"_index":1722,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dtos/user.dto.ts:51",{"_index":1713,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/middlewares/current",{"_index":552,"title":{},"body":{"modules/CartsModule.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":1725,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:106",{"_index":1735,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:66",{"_index":1741,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:71",{"_index":1738,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:78",{"_index":1732,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:99",{"_index":1744,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1773,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.module.ts:30",{"_index":1774,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{}}}],["src/users/users.service.ts",{"_index":1777,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:10",{"_index":1781,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:129",{"_index":1784,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":1788,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1786,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1783,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:82",{"_index":1789,"title":{},"body":{"injectables/UsersService.html":{}}}],["standard",{"_index":1345,"title":{},"body":{"controllers/ProductsController.html":{}}}],["start",{"_index":2030,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2031,"title":{},"body":{"index.html":{}}}],["start:prodhow",{"_index":2033,"title":{},"body":{"index.html":{}}}],["started",{"_index":1936,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1954,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":418,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"injectables/CartsService.html":{},"injectables/PaymentsService.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["statuscart",{"_index":420,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["stay",{"_index":1958,"title":{},"body":{"index.html":{}}}],["step",{"_index":2035,"title":{},"body":{"index.html":{}}}],["still",{"_index":730,"title":{},"body":{"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{}}}],["storedhash",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":1096,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["street",{"_index":61,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["string",{"_index":62,"title":{},"body":{"interfaces/Adress.html":{},"injectables/AppService.html":{},"classes/BodyChargeDto.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"interfaces/googleJWT.html":{},"index.html":{},"interfaces/newReview.html":{},"classes/userAuthDTO.html":{}}}],["stripe",{"_index":1224,"title":{},"body":{"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"injectables/StripeService.html":{},"dependencies.html":{}}}],["stripe(process.env.stripe_secret_key",{"_index":1670,"title":{},"body":{"injectables/StripeService.html":{}}}],["stripe.controller",{"_index":1658,"title":{},"body":{"modules/StripeModule.html":{}}}],["stripe.service",{"_index":1646,"title":{},"body":{"controllers/StripeController.html":{},"modules/StripeModule.html":{}}}],["stripe/stripe.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["stripe/stripe.service",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["stripecontroller",{"_index":1639,"title":{"controllers/StripeController.html":{}},"body":{"controllers/StripeController.html":{},"modules/StripeModule.html":{},"coverage.html":{}}}],["stripecustomer",{"_index":1032,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["stripecustomer.id",{"_index":1037,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["stripecustomerid",{"_index":1036,"title":{},"body":{"injectables/DeliveryService.html":{},"classes/UserDto.html":{}}}],["stripemodule",{"_index":215,"title":{"modules/StripeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StripeModule.html":{},"modules.html":{},"overview.html":{}}}],["stripeservice",{"_index":222,"title":{"injectables/StripeService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["structure",{"_index":2054,"title":{},"body":{"index.html":{}}}],["style",{"_index":788,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["stylepicture",{"_index":833,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{}}}],["sub",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/userAuthDTO.html":{}}}],["succefully",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["succesfully",{"_index":543,"title":{},"body":{"controllers/CartsController.html":{}}}],["summary",{"_index":1333,"title":{},"body":{"controllers/ProductsController.html":{}}}],["super",{"_index":1100,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["supply",{"_index":1512,"title":{},"body":{"classes/QuantityShortDTO.html":{}}}],["support",{"_index":2055,"title":{},"body":{"modules.html":{}}}],["suppress",{"_index":544,"title":{},"body":{"controllers/CartsController.html":{},"injectables/CartsService.html":{}}}],["sure",{"_index":686,"title":{},"body":{"injectables/CartsService.html":{}}}],["sustainable",{"_index":789,"title":{"classes/Sustainable.html":{}},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{},"coverage.html":{}}}],["sustainabledescr",{"_index":1457,"title":{},"body":{"injectables/ProductsService.html":{}}}],["svg",{"_index":2056,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1901,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["t",{"_index":1335,"title":{},"body":{"controllers/ProductsController.html":{}}}],["table",{"_index":637,"title":{},"body":{"injectables/CartsService.html":{},"classes/QuantityShortDTO.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1474,"title":{},"body":{"injectables/ProductsService.html":{},"classes/filtersProductsDTO.html":{}}}],["taken",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["technique",{"_index":1351,"title":{},"body":{"controllers/ProductsController.html":{}}}],["tee",{"_index":1407,"title":{},"body":{"controllers/ProductsController.html":{}}}],["terne",{"_index":1562,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["tested",{"_index":1978,"title":{},"body":{"index.html":{}}}],["tex",{"_index":1348,"title":{},"body":{"controllers/ProductsController.html":{}}}],["textile",{"_index":1355,"title":{},"body":{"controllers/ProductsController.html":{}}}],["thing",{"_index":1995,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":1282,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":1283,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.addproducttocart(addproductdata",{"_index":679,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.authservice.googletojwt(facebook",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.googletojwt(google",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.logingoogle(req",{"_index":190,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signup(createuserdata",{"_index":1760,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.validateuser(email",{"_index":1152,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calculatetotalcart",{"_index":726,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.calculatetotalcart(cartid",{"_index":698,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.cartservice.addownercart(req",{"_index":198,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cartservice.addownercart(req.user",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cartservice.addownercart(user",{"_index":526,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.addproducttocart(addproductdata",{"_index":524,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.checkquantityincart(cart.id",{"_index":1242,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.cartservice.checkquantityincart(currentcart.id",{"_index":1650,"title":{},"body":{"controllers/StripeController.html":{}}}],["this.cartservice.checkquantityincart(data.cartid",{"_index":1026,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.cartservice.deleteerrormessage(cartid",{"_index":528,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.deletefromcart",{"_index":542,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.deletewholecart(cartid",{"_index":546,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.getcart(cartid",{"_index":508,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.iscart(cartid",{"_index":895,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/DeliveryService.html":{},"interfaces/Request.html":{}}}],["this.cartservice.iscart(data.cartid",{"_index":1024,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.cartservice.isproductoncart(productid",{"_index":505,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.cartservice.newcart(createcartdata",{"_index":517,"title":{},"body":{"controllers/CartsController.html":{}}}],["this.checkquantityincart(cartid",{"_index":688,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.checkquantityincart(oldusercart.carts[0].id",{"_index":731,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.deletewholecart(cartid",{"_index":729,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.deliveryservice.checkdeliveryamount(cartid",{"_index":964,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.createdelivery(datatosend",{"_index":962,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.deletedelivery(cartid",{"_index":970,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.deletemanydeliveries(ids",{"_index":984,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.isdelivery",{"_index":1651,"title":{},"body":{"controllers/StripeController.html":{}}}],["this.deliveryservice.isdelivery(cart.id",{"_index":1244,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.deliveryservice.isdelivery(cartid",{"_index":966,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.updatedelivery(data",{"_index":968,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.findmanysdeliveries(body",{"_index":1077,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.getpayments(isuser",{"_index":1271,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.getratingbyproduct(product.id",{"_index":1598,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.getratingbyproduct(reviewtoupdate.productid",{"_index":1631,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.iscart(addproduct.id",{"_index":680,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.iscart(cartid",{"_index":681,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.iscart(oldusercart.carts[0].id",{"_index":732,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.isdelivery(cartid",{"_index":1050,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.ismanyproduct(body",{"_index":1501,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.isproduct(id",{"_index":1485,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["this.isproduct(productid",{"_index":672,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{}}}],["this.isproductoncart(quantityincartdata",{"_index":628,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.isreview(id",{"_index":1618,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.isuserbyemail(email",{"_index":1792,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.paymentservice.createpayment(datas",{"_index":1204,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentservice.getallpayments(datas",{"_index":1206,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentservice.getpaymentbyuseremail(datas",{"_index":1212,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentservice.getpaymentbyuserid(datas",{"_index":1215,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentservice.ispayment(paymentid",{"_index":1208,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.prisma.cart.create",{"_index":676,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.delete",{"_index":739,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.findfirst",{"_index":629,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.findunique",{"_index":621,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.cart.update",{"_index":647,"title":{},"body":{"injectables/CartsService.html":{},"injectables/PaymentsService.html":{}}}],["this.prisma.delivery.create",{"_index":1040,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.prisma.delivery.findfirst",{"_index":1048,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.prisma.delivery.update",{"_index":1055,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.prisma.payment.create",{"_index":1255,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.prisma.payment.findmany",{"_index":1264,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.prisma.payment.findunique",{"_index":1265,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.prisma.product.aggregate",{"_index":1482,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.create",{"_index":1469,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.delete",{"_index":1070,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["this.prisma.product.deletemany",{"_index":1081,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["this.prisma.product.findmany",{"_index":1075,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{}}}],["this.prisma.product.findunique",{"_index":716,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["this.prisma.product.update",{"_index":1067,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{}}}],["this.prisma.productsoncart.findfirst",{"_index":639,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.prisma.review.create",{"_index":1607,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.prisma.review.delete",{"_index":1634,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.prisma.review.findmany",{"_index":1609,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.prisma.review.findunique",{"_index":1595,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.prisma.review.update",{"_index":1627,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.prisma.sustainable.create",{"_index":1463,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.user.create",{"_index":1802,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":1816,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":1029,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":1035,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/UsersService.html":{}}}],["this.prismaservice.user.create",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.productservice.createproduct(createproductdata",{"_index":1418,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.deletemanyproducts(body",{"_index":1429,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.deleteproduct(id",{"_index":1427,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.getproducts(datas",{"_index":1420,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.isproduct(id",{"_index":1422,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productservice.isproduct(productid",{"_index":633,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.productservice.updateproducts(id",{"_index":1425,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.queryfilter(datas",{"_index":1263,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.queryfilter(filters",{"_index":1267,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.reviewservice.createreview(data",{"_index":1564,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.deletereview(id",{"_index":1571,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.getratingbyproduct(id",{"_index":1573,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.getreviewsbyproduct(id",{"_index":1566,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.reviewservice.updatereview(id",{"_index":1569,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["this.senderrormessageoncart(json",{"_index":671,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.stripe",{"_index":1669,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.stripe.charge(data",{"_index":1251,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.stripe.customers.create",{"_index":1675,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.stripe.paymentintents.create",{"_index":1677,"title":{},"body":{"injectables/StripeService.html":{}}}],["this.stripeservice.charge(data",{"_index":1653,"title":{},"body":{"controllers/StripeController.html":{}}}],["this.stripeservice.createstripecustomer",{"_index":1033,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["this.updateratingonproduct(data",{"_index":1600,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["this.updatetotalcart(cartid",{"_index":691,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.updatetotalcart(newcart.id",{"_index":665,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.updatetotalcart(oldusercart.carts[0].id",{"_index":727,"title":{},"body":{"injectables/CartsService.html":{}}}],["this.userservice.deleteuser(user",{"_index":1770,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.isuserbyemail(email",{"_index":1270,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.userservice.isuserbyid(id",{"_index":1272,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.userservice.isuserbyid(userid",{"_index":905,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{}}}],["this.userservice.updateuser(user",{"_index":1768,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createuser(createuserdata",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isuserbyemail(email",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isuserbyemail(req.email",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"controllers/StripeController.html":{}}}],["title",{"_index":790,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/Sustainable.html":{},"classes/UpdateReviewDto.html":{},"interfaces/newReview.html":{}}}],["token",{"_index":83,"title":{},"body":{"interfaces/Adress.html":{},"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{},"interfaces/googleJWT.html":{},"classes/userAuthDTO.html":{}}}],["tokendto",{"_index":1685,"title":{"classes/TokenDto.html":{}},"body":{"classes/TokenDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["total",{"_index":419,"title":{},"body":{"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"classes/PaymentDTO.html":{},"injectables/PaymentsService.html":{},"injectables/ReviewsService.html":{},"classes/Total_cartDTO.html":{},"classes/UserCartDTO.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{}}}],["total_cartdto",{"_index":619,"title":{"classes/Total_cartDTO.html":{}},"body":{"injectables/CartsService.html":{},"classes/Total_cartDTO.html":{},"coverage.html":{}}}],["touch",{"_index":1959,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":942,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["toupdate.adress_bill",{"_index":1808,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.adress_bill.number",{"_index":1809,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.adress_bill.postcode",{"_index":1811,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.adress_delivery",{"_index":1813,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.brand",{"_index":1489,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.deliverydate",{"_index":1493,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.description",{"_index":1490,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.email",{"_index":1803,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.morphology",{"_index":1804,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.password",{"_index":1805,"title":{},"body":{"injectables/UsersService.html":{}}}],["toupdate.price",{"_index":1491,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.quantity_available",{"_index":1498,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.ref",{"_index":1488,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.size",{"_index":1495,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["toupdate.sustainable",{"_index":1496,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.title",{"_index":1487,"title":{},"body":{"injectables/ProductsService.html":{}}}],["toupdate.weight",{"_index":1807,"title":{},"body":{"injectables/UsersService.html":{}}}],["transformer",{"_index":431,"title":{},"body":{"interfaces/Carts.html":{},"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{},"classes/TokenDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["trouble",{"_index":2025,"title":{},"body":{"index.html":{}}}],["true",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartsService.html":{},"interfaces/ClassConstructor.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{}}}],["try",{"_index":646,"title":{},"body":{"injectables/CartsService.html":{},"injectables/ReviewsService.html":{},"index.html":{}}}],["très",{"_index":1384,"title":{},"body":{"controllers/ProductsController.html":{}}}],["tsconfig.json",{"_index":2020,"title":{},"body":{"index.html":{}}}],["tunisien",{"_index":1338,"title":{},"body":{"controllers/ProductsController.html":{}}}],["tunisienne",{"_index":1397,"title":{},"body":{"controllers/ProductsController.html":{}}}],["two",{"_index":735,"title":{},"body":{"injectables/CartsService.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AddToCartDTO.html":{},"guards/AdminGUard.html":{},"interfaces/Adress.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/BodyChargeDto.html":{},"interfaces/CartDbData.html":{},"interfaces/Carts.html":{},"controllers/CartsController.html":{},"modules/CartsModule.html":{},"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"classes/FindManyIdsDTO.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/OrderBy.html":{},"classes/PaymentDTO.html":{},"controllers/PaymentsController.html":{},"interfaces/PaymentsFilters.html":{},"injectables/PaymentsService.html":{},"interfaces/PicturesTags.html":{},"injectables/PrismaService.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/QuantityShortDTO.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/SerializeInterceptor.html":{},"injectables/StripeService.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserCartDTO.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"coverage.html":{},"interfaces/createUser.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/functions.html":{},"interfaces/googleJWT.html":{},"interfaces/newReview.html":{},"interfaces/ownerCart.html":{},"interfaces/productsCart.html":{},"classes/userAuthDTO.html":{},"miscellaneous/variables.html":{}}}],["types/cookie",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1982,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":1342,"title":{},"body":{"controllers/ProductsController.html":{}}}],["unauthorizedexception",{"_index":1022,"title":{},"body":{"injectables/DeliveryService.html":{},"injectables/LocalStrategy.html":{},"injectables/PaymentsService.html":{}}}],["unauthorizedexception('delivery",{"_index":1031,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["undefined",{"_index":1308,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@apibearerauth()@useguards(jwtauthguard)@post('/create/:cartid",{"_index":927,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["undefined})@apiquery({name",{"_index":1310,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@expose",{"_index":1705,"title":{},"body":{"classes/UserCartDTO.html":{}}}],["undefined})@isoptional",{"_index":849,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/UpdateReviewDto.html":{}}}],["undefined})@patch('/:id",{"_index":1322,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@patch('/add/product/:productid/:cartid",{"_index":454,"title":{},"body":{"controllers/CartsController.html":{}}}],["undefined})@patch()@useguards(jwtauthguard",{"_index":1743,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@post('/create",{"_index":1298,"title":{},"body":{"controllers/ProductsController.html":{}}}],["undefined})@post('/signup",{"_index":1740,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@post('add/cart/:productid",{"_index":477,"title":{},"body":{"controllers/CartsController.html":{}}}],["undefined})@post('deletemany",{"_index":936,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{}}}],["undefined})@useguards(jwtauthguard)@post('/create/:productid",{"_index":1531,"title":{},"body":{"controllers/ReviewsController.html":{}}}],["undefined})@useguards(localauthguard)@apiokresponse({description",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["under",{"_index":2002,"title":{},"body":{"index.html":{}}}],["understand",{"_index":2013,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PaymentsService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"injectables/StripeService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":2064,"title":{},"body":{"properties.html":{}}}],["until",{"_index":76,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{}}}],["update",{"_index":661,"title":{},"body":{"injectables/CartsService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update_at",{"_index":429,"title":{},"body":{"interfaces/Carts.html":{},"injectables/CartsService.html":{},"injectables/DeliveryService.html":{},"injectables/ProductsService.html":{},"injectables/ReviewsService.html":{},"classes/UserCartDTO.html":{}}}],["updated",{"_index":1321,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["updatedata",{"_index":1544,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["updatedata.description",{"_index":1621,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedata.rating_quality",{"_index":1624,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedata.rating_size",{"_index":1626,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedata.rating_style",{"_index":1625,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedata.title",{"_index":1620,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedata.useful",{"_index":1622,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatedelivery",{"_index":920,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["updatedelivery(cartid",{"_index":941,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["updatedelivery(toupdate",{"_index":1020,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["updateproduct",{"_index":1291,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproduct(id",{"_index":1317,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproducts",{"_index":1437,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproducts(id",{"_index":1448,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateratingonproduct",{"_index":1580,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updateratingonproduct(data",{"_index":1590,"title":{},"body":{"injectables/ReviewsService.html":{}}}],["updatereview",{"_index":1529,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["updatereview(id",{"_index":1543,"title":{},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["updatereviewdto",{"_index":1545,"title":{"classes/UpdateReviewDto.html":{}},"body":{"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{},"coverage.html":{}}}],["updates",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["updatetotalcart",{"_index":570,"title":{},"body":{"injectables/CartsService.html":{}}}],["updatetotalcart(cartid",{"_index":609,"title":{},"body":{"injectables/CartsService.html":{}}}],["updateuser",{"_index":1729,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(@currentuser",{"_index":1767,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(user",{"_index":1742,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["url",{"_index":1123,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["use",{"_index":882,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"injectables/PaymentsService.html":{},"index.html":{}}}],["use(req",{"_index":885,"title":{},"body":{"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{}}}],["useful",{"_index":1623,"title":{},"body":{"injectables/ReviewsService.html":{},"classes/UpdateReviewDto.html":{}}}],["useguards",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["useguards(adminguard",{"_index":1210,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["useguards(authguard('facebook",{"_index":194,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard('google",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@patch('/add/owner",{"_index":449,"title":{},"body":{"controllers/CartsController.html":{}}}],["useguards(localauthguard",{"_index":169,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":743,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["useinterceptors(new",{"_index":752,"title":{},"body":{"interfaces/ClassConstructor.html":{},"classes/SerializeInterceptor.html":{}}}],["user",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CartsService.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["user.admin",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.decorator",{"_index":45,"title":{},"body":{"guards/AdminGUard.html":{},"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"controllers/ReviewsController.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["user.decorator.ts",{"_index":1835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["user.dto.ts",{"_index":57,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":875,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":873,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":872,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":868,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":866,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":874,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":877,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":879,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:47",{"_index":878,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":870,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeliveryService.html":{}}}],["user.id",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeliveryService.html":{},"injectables/PaymentsService.html":{},"controllers/ReviewsController.html":{},"injectables/UsersService.html":{}}}],["user.lastname",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeliveryService.html":{}}}],["user.middleware",{"_index":553,"title":{},"body":{"modules/CartsModule.html":{},"modules/UsersModule.html":{}}}],["user.middleware.ts",{"_index":897,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"coverage.html":{}}}],["user.middleware.ts:15",{"_index":899,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.middleware.ts:18",{"_index":901,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{}}}],["user.size",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.token",{"_index":175,"title":{},"body":{"controllers/AppController.html":{}}}],["userauthdto",{"_index":352,"title":{"classes/userAuthDTO.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"classes/userAuthDTO.html":{}}}],["usercartdto",{"_index":432,"title":{"classes/UserCartDTO.html":{}},"body":{"interfaces/Carts.html":{},"controllers/CartsController.html":{},"classes/UserCartDTO.html":{},"coverage.html":{}}}],["userdata",{"_index":1793,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto",{"_index":118,"title":{"classes/UserDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CartsController.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"classes/DataChargeDto.html":{},"controllers/DeliveryController.html":{},"controllers/PaymentsController.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/StripeController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":904,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"controllers/ReviewsController.html":{},"injectables/ReviewsService.html":{}}}],["usernamefield",{"_index":1151,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":1726,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1775,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":903,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"interfaces/Request-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dtos/create",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/dtos/user.dto",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{}}}],["users/users.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":159,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CurrentCartMiddleware.html":{},"interfaces/Request.html":{}}}],["userscontroller",{"_index":1724,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":900,"title":{},"body":{"injectables/CurrentUserMiddleware.html":{},"injectables/PaymentsService.html":{},"interfaces/Request-1.html":{},"controllers/StripeController.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":216,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":158,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CurrentCartMiddleware.html":{},"injectables/CurrentUserMiddleware.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/Request.html":{},"interfaces/Request-1.html":{},"controllers/StripeController.html":{},"modules/StripeModule.html":{},"injectables/StripeService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertodelete",{"_index":1815,"title":{},"body":{"injectables/UsersService.html":{}}}],["userupdated",{"_index":1814,"title":{},"body":{"injectables/UsersService.html":{}}}],["uses",{"_index":1968,"title":{},"body":{"index.html":{}}}],["using",{"_index":1974,"title":{},"body":{"index.html":{}}}],["util",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["utils/.../utils.ts",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/utils",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/utils.ts",{"_index":1859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":827,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"classes/Sustainable.html":{},"miscellaneous/enumerations.html":{}}}],["validate",{"_index":1084,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(accesstoken",{"_index":1086,"title":{},"body":{"injectables/FacebookStrategy.html":{},"injectables/GoogleStrategy.html":{}}}],["validate(email",{"_index":1148,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1135,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":19,"title":{},"body":{"classes/AddToCartDTO.html":{},"interfaces/Adress.html":{},"classes/BodyChargeDto.html":{},"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUserDto.html":{},"classes/DataChargeDto.html":{},"classes/DeliveryData.html":{},"classes/DeliveryData-1.html":{},"classes/FindManyIdsDTO.html":{},"classes/PaymentDTO.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/QuantityShortDTO.html":{},"classes/Sustainable.html":{},"classes/TokenDto.html":{},"classes/Total_cartDTO.html":{},"classes/UpdateReviewDto.html":{},"classes/UserDto.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{},"dependencies.html":{},"classes/filtersProductsDTO.html":{},"classes/newPaymentDTO.html":{},"classes/userAuthDTO.html":{}}}],["value",{"_index":166,"title":{},"body":{"controllers/AppController.html":{},"controllers/CartsController.html":{},"controllers/DeliveryController.html":{},"controllers/ProductsController.html":{},"controllers/ReviewsController.html":{},"controllers/UsersController.html":{},"classes/filtersProductsDTO.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":669,"title":{},"body":{"injectables/CartsService.html":{}}}],["variable",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2071,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifycallback",{"_index":1119,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["version",{"_index":2062,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1964,"title":{},"body":{"index.html":{}}}],["vm",{"_index":491,"title":{},"body":{"controllers/CartsController.html":{}}}],["void",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/CartsModule.html":{},"injectables/FacebookStrategy.html":{},"modules/UsersModule.html":{}}}],["vous",{"_index":1352,"title":{},"body":{"controllers/ProductsController.html":{}}}],["vêtement,femmes,teeshirt",{"_index":1334,"title":{},"body":{"controllers/ProductsController.html":{}}}],["vêtements",{"_index":1405,"title":{},"body":{"controllers/ProductsController.html":{}}}],["want",{"_index":1510,"title":{},"body":{"classes/QuantityShortDTO.html":{},"index.html":{}}}],["wanted",{"_index":659,"title":{},"body":{"injectables/CartsService.html":{},"classes/CreateCartDTO.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["warn",{"_index":667,"title":{},"body":{"injectables/CartsService.html":{}}}],["watch",{"_index":2016,"title":{},"body":{"index.html":{}}}],["website",{"_index":1992,"title":{},"body":{"index.html":{}}}],["weight",{"_index":82,"title":{},"body":{"interfaces/Adress.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/adressBillCreate.html":{},"interfaces/adressDeliveryCreate.html":{},"interfaces/createUser.html":{}}}],["white",{"_index":1378,"title":{},"body":{"controllers/ProductsController.html":{}}}],["work",{"_index":1957,"title":{},"body":{"index.html":{}}}],["world",{"_index":298,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":829,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"classes/Sustainable.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["xl",{"_index":823,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["xs",{"_index":775,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["xxl",{"_index":776,"title":{},"body":{"classes/CreateCartDTO.html":{},"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{},"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["xxl'})@isenum(size",{"_index":1822,"title":{},"body":{"classes/addProductDTO.html":{},"classes/addProductDataDTO.html":{}}}],["xxs",{"_index":820,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["xxxl",{"_index":824,"title":{},"body":{"classes/CreateProductDto.html":{},"interfaces/PicturesTags.html":{},"interfaces/ProductSizes.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Sustainable.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartsModule.html":{},"modules/DeliveryModule.html":{},"modules/PaymentsModule.html":{},"modules/ProductsModule.html":{},"modules/ReviewsModule.html":{},"modules/StripeModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddToCartDTO.html":{"url":"classes/AddToCartDTO.html","title":"class - AddToCartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddToCartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/add_to_cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delivery_fees\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_fees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/add_to_cart.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from 'class-validator';\n\nexport class AddToCartDTO {\n  @IsNumber()\n  delivery_fees: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGUard.html":{"url":"guards/AdminGUard.html","title":"guard - AdminGUard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGUard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                guards/admin.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in guards/admin.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { CurrentUser } from 'src/users/decorators/current-user.decorator';\n\nexport class AdminGUard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    if (request.user) {\n      return false;\n    } else return request.user.admin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Adress.html":{"url":"interfaces/Adress.html","title":"interface - Adress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Adress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            postcode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            street\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postcode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Morphology } from '@prisma/client'\nimport { IsEmail, IsOptional, IsString } from 'class-validator'\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string\n\n  @ApiProperty()\n  @IsString()\n  password: string\n\n  @ApiProperty()\n  @IsString()\n  lastname: string\n\n  @ApiProperty()\n  @IsString()\n  firstname: string\n\n  @ApiPropertyOptional({ description: 'optional until delivery module' })\n  @IsOptional()\n  @ApiPropertyOptional()\n  adress_Delivery: Adress\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill: Adress\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  morphology: Morphology\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  size: string\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  weight: string\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  token: object\n}\n\nexport interface Adress {\n  number?: number\n  street?: string\n  postcode: number\n  city: string\n  country: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                facebookAuth\n                            \n                            \n                                    Async\n                                FacebookAuthRedirect\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                googleAuth\n                            \n                            \n                                    Async\n                                googleAuthRedirect\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        facebookAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    facebookAuth(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/login/facebook')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        FacebookAuthRedirect\n                        \n                    \n                \n            \n            \n                \n                    \n                    FacebookAuthRedirect(req, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('auth/facebook/callback')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        googleAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    googleAuth(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOAuth2(['GoogleStrategy'])@Get('/login/google')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        googleAuthRedirect\n                        \n                    \n                \n            \n            \n                \n                    \n                    googleAuthRedirect(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('auth/google/callback')@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, session: any, currentcart: Carts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UserDto, description: 'classic auth with password +email', examples: undefined})@UseGuards(LocalAuthGuard)@ApiOkResponse({description: 'classic login: user logged succefully returned'})@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentcart\n                                    \n                                                Carts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Session,\n  UseGuards,\n} from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\nimport {\n  ApiBasicAuth,\n  ApiBearerAuth,\n  ApiBody,\n  ApiOAuth2,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger'\nimport { CurrentUser } from 'decorators/profile-user.decorator'\n\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\nimport { LocalAuthGuard } from 'guards/local-auth.guard'\nimport { Http2ServerRequest } from 'http2'\nimport { Serialize } from 'interceptors/serialize.interceptors'\n\nimport { AppService } from './app.service'\nimport { AuthService } from './auth/auth.service'\nimport { CartsService } from './carts/carts.service'\nimport { CurrentCart } from './carts/decorators/current-cart'\nimport { Carts } from './carts/dtos/UserCart.dto'\nimport { UserDto } from './users/dtos/user.dto'\nimport { UsersService } from './users/users.service'\n\n@Serialize(UserDto)\n@ApiTags('App')\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthService,\n\n    private cartService: CartsService\n  ) {}\n\n  @ApiBody({\n    type: UserDto,\n    description: 'classic auth with password +email',\n    examples: {\n      login: {\n        value: {\n          email: 'nestor@test.fr',\n          password: 'azerty64',\n        },\n      },\n    },\n  })\n  @UseGuards(LocalAuthGuard)\n  @ApiOkResponse({\n    description: 'classic login: user logged succefully returned',\n  })\n  @Post('login')\n  async login(\n    @Request() req,\n    @Session() session: any,\n    @CurrentCart() currentcart: Carts\n  ): Promise {\n    let token = await this.authService.login(req.user)\n\n    let user = req.user\n\n    user.token = token\n\n    if (currentcart) {\n      console.log('hey', currentcart)\n\n      let cart = await this.cartService.addOwnerCart(req.user, currentcart.id)\n      session.cartId = cart.id\n    }\n\n    return req.user\n  }\n\n  @ApiOAuth2(['GoogleStrategy'])\n  @Get('/login/google')\n  @UseGuards(AuthGuard('google'))\n  async googleAuth(@Request() req) {}\n\n  @Get('/login/facebook')\n  @UseGuards(AuthGuard('google'))\n  async facebookAuth(@Request() req) {}\n\n  @Get('auth/google/callback')\n  @UseGuards(AuthGuard('google'))\n  async googleAuthRedirect(@Request() req) {\n    let google = await this.authService.loginGoogle(req)\n\n    let jwtProcess = await this.authService.GoogleToJWT(google)\n\n    return jwtProcess\n  }\n\n  @Get('auth/facebook/callback')\n  @UseGuards(AuthGuard('facebook'))\n  async FacebookAuthRedirect(@Request() req, @Session() session: any) {\n    let facebook = await this.authService.loginGoogle(req)\n\n    let jwtProcess = await this.authService.GoogleToJWT(facebook)\n    if (session.cartId) {\n      let cart = await this.cartService.addOwnerCart(req, session.cartId)\n\n      req.session.cartId = cart.id\n    }\n    return jwtProcess\n  }\n\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return req.user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCartsModule\n\nCartsModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAppModule -->\n\nStripeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nAppModule -->\n\nCartsService->AppModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nAppModule -->\n\nDeliveryService->AppModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAppModule -->\n\nGoogleStrategy->AppModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nAppModule -->\n\nPaymentsService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nAppModule -->\n\nProductsService->AppModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nAppModule -->\n\nStripeService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            AuthService\n                        \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            PaymentsService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            PaymentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CartsModule\n                        \n                        \n                            DeliveryModule\n                        \n                        \n                            PaymentsModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            StripeModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common'\nimport { AppController } from './app.controller'\nimport { AppService } from './app.service'\nimport { PrismaService } from './prisma/prisma.service'\nimport { UsersModule } from './users/users.module'\nimport { ProductsModule } from './products/products.module'\nimport { ReviewsModule } from './reviews/reviews.module'\nimport { CartsModule } from './carts/carts.module'\n\nimport { PaymentsController } from './payments/payments.controller'\nimport { PaymentsModule } from './payments/payments.module'\nimport { PaymentsService } from './payments/payments.service'\nimport { CartsService } from './carts/carts.service'\nimport { ProductsService } from './products/products.service'\nimport { UsersService } from './users/users.service'\nimport { dateInNmonths } from 'utils/utils'\nimport { AuthModule } from './auth/auth.module'\n\nimport { ConfigModule } from '@nestjs/config'\nimport { AuthService } from './auth/auth.service'\nimport { JwtModule, JwtService } from '@nestjs/jwt'\nimport { jwtConstants } from './auth/constants'\nimport { JwtStrategy } from './auth/jwt.strategy'\nimport { LocalStrategy } from './auth/local.strategy'\nimport { DeliveryModule } from './delivery/delivery.module'\nimport { GoogleStrategy } from './auth/google.strategy'\nimport { PassportModule } from '@nestjs/passport'\nimport { DeliveryService } from './delivery/delivery.service'\nimport { StripeService } from './stripe/stripe.service'\nimport { StripeModule } from './stripe/stripe.module'\n\nconst cookieSession = require('cookie-session')\n\n@Module({\n  imports: [\n    UsersModule,\n    ProductsModule,\n    ReviewsModule,\n    CartsModule,\n\n    PaymentsModule,\n\n    AuthModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PassportModule.register({\n      approval_prompt: 'force',\n      access_type: 'offline',\n    }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n\n    DeliveryModule,\n\n    StripeModule,\n  ],\n  controllers: [AppController, PaymentsController],\n  providers: [\n    AppService,\n    PrismaService,\n    PaymentsService,\n    CartsService,\n    ProductsService,\n    UsersService,\n    AuthService,\n    JwtService,\n    GoogleStrategy,\n    DeliveryService,\n    StripeService,\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    // let date = dateInNmonths(3)\n    consumer\n      .apply(\n        cookieSession({\n          name: 'session',\n          keys: ['azerty64'],\n          // expires: date,\n          maxAge: 24 * 60 * 60 * 1000,\n        })\n      )\n      .forRoutes('*')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                guards/auth.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                                CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in guards/auth.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    return request.session.userId;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFacebookStrategy \n\nFacebookStrategy \n\nFacebookStrategy  -->\n\nAuthModule->FacebookStrategy \n\n\n\n\n\nGoogleStrategy \n\nGoogleStrategy \n\nGoogleStrategy  -->\n\nAuthModule->GoogleStrategy \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\nLocalStrategy  -->\n\nAuthModule->LocalStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nAuthModule -->\n\nCartsService->AuthModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nAuthModule -->\n\nDeliveryService->AuthModule\n\n\n\n\n\nFacebookStrategy\n\nFacebookStrategy\n\nAuthModule -->\n\nFacebookStrategy->AuthModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nAuthModule -->\n\nProductsService->AuthModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nAuthModule -->\n\nStripeService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            FacebookStrategy\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            FacebookStrategy\n                        \n                        \n                            GoogleStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AuthService } from './auth.service'\n\nimport { UsersModule } from '../users/users.module'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtModule } from '@nestjs/jwt'\nimport { jwtConstants } from './constants'\nimport { UsersService } from 'src/users/users.service'\nimport { CartsService } from 'src/carts/carts.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { LocalStrategy } from './local.strategy'\nimport { JwtStrategy } from './jwt.strategy'\nimport { GoogleStrategy } from './google.strategy'\nimport { FacebookStrategy } from './facebook.strategy'\nimport { StripeService } from 'src/stripe/stripe.service'\nimport { DeliveryService } from 'src/delivery/delivery.service'\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    PassportModule.register({\n      approval_prompt: 'force',\n      access_type: 'offline',\n    }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    GoogleStrategy,\n    JwtStrategy,\n    UsersService,\n    CartsService,\n    ProductsService,\n    PrismaService,\n    FacebookStrategy,\n    StripeService,\n    DeliveryService,\n  ],\n  exports: [\n    AuthService,\n    JwtStrategy,\n    FacebookStrategy,\n    LocalStrategy,\n    GoogleStrategy,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                GoogleToJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginGoogle\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, cartService: CartsService, jwtService: JwtService, prismaService: PrismaService, stripeService: StripeService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripeService\n                                                  \n                                                        \n                                                                        StripeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GoogleToJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    GoogleToJWT(req)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginGoogle\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginGoogle(req)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(createUserData: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email, password)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common'\nimport { UsersService } from '../users/users.service'\nimport { randomBytes, scrypt as _scrypt } from 'crypto'\nimport { promisify } from 'util'\nimport { CreateUserDto } from '../users/dtos/create-user.dto'\nimport { CartsService } from 'src/carts/carts.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { jwtConstants } from './constants'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { googleJWT } from './customType/google_JWT.type'\nimport { UserDto } from 'src/users/dtos/user.dto'\nimport { userAuthDTO } from './dtos/user-auth.dto'\nimport { StripeService } from 'src/stripe/stripe.service'\n\nconst scrypt = promisify(_scrypt)\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private cartService: CartsService,\n    private jwtService: JwtService,\n    private prismaService: PrismaService,\n    private stripeService: StripeService,\n  ) {}\n\n  async signUp(createUserData: CreateUserDto) {\n    const { email, firstname, lastname } = createUserData\n    let { password } = createUserData\n    const isUser = await this.usersService.isUserByEmail(email)\n    if (isUser) {\n      throw new BadRequestException('email already taken')\n    } else {\n      const salt = randomBytes(8).toString('hex')\n      const hash = (await scrypt(password, salt, 32)) as Buffer\n      const result = salt + '.' + hash.toString('hex')\n\n      createUserData.password = result\n\n      const user = await this.usersService.createUser(createUserData)\n\n      return user\n    }\n  }\n\n  async validateUser(email, password) {\n    const isUser = await this.usersService.isUserByEmail(email)\n    if (!isUser) {\n      throw new NotFoundException('incorrect email or password ')\n    } else {\n      let [salt, storedHash] = isUser.password.split('.')\n      const hashToCheck = (await scrypt(password, salt, 32)) as Buffer\n\n      if (storedHash === hashToCheck.toString('hex')) {\n        return isUser\n      } else {\n        throw new NotFoundException('incorrect email or password')\n      }\n    }\n  }\n\n  async loginGoogle(req) {\n    if (!req.user) {\n      throw new NotFoundException('No user from google')\n    } else {\n      return req.user\n    }\n  }\n\n  async GoogleToJWT(req) {\n    let user = {\n      email: req.email,\n      firstname: req.firstName,\n      lastname: req.lastName,\n    }\n    let newUser: googleJWT\n    const isUser = await this.usersService.isUserByEmail(req.email)\n\n    let payload: any = {}\n    if (!isUser) {\n      newUser = await this.prismaService.user.create({ data: user })\n\n      payload = {\n        email: newUser.email,\n        sub: newUser.id,\n        lastname: req.lastName,\n      }\n    }\n    if (isUser) {\n      payload = {\n        email: isUser.email,\n        sub: isUser.id,\n        admin: isUser.admin,\n        lastname: isUser.lastname,\n      }\n    }\n    // else generate JWT for new User\n\n    const jwt = await this.jwtService.sign(\n      {\n        exp: Math.floor(Date.now() / 1000) + 10000 * 60,\n        data: payload,\n      },\n      { secret: jwtConstants.secret },\n    )\n\n    req.token = jwt\n    return req\n  }\n\n  async login(user): Promise {\n    const payload = {\n      email: user.email,\n      sub: user.id,\n      size: user.size,\n      admin: user.admin,\n      lastname: user.lastname,\n    }\n\n    return await this.jwtService.sign(\n      {\n        exp: Math.floor(Date.now() / 1000) + 10000 * 60,\n        data: payload,\n      },\n      { secret: process.env.JWTSecretKey },\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BodyChargeDto.html":{"url":"classes/BodyChargeDto.html","title":"class - BodyChargeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyChargeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe/dtos/BodyCharge.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paymentMethodId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        paymentMethodId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stripe/dtos/BodyCharge.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsString, IsNotEmpty, IsNumber } from 'class-validator'\n\nexport class BodyChargeDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  paymentMethodId: string\n}\n\nexport default BodyChargeDto\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartDbData.html":{"url":"interfaces/CartDbData.html","title":"interface - CartDbData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartDbData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/custonType/CartDB.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            delivery_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            delivery_fees\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_fees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_fees:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     StatusCart\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StatusCart\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StatusCart } from '@prisma/client';\nimport { Decimal } from '@prisma/client/runtime';\n\nexport interface CartDbData {\n  delivery_fees?: number;\n  delivery_date: Date;\n  total: number;\n  status: StatusCart;\n}\n\nexport interface ownerCart {\n  connect: object;\n}\n\nexport interface productsCart {\n  connect: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Carts.html":{"url":"interfaces/Carts.html","title":"interface - Carts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Carts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/UserCart.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            delivery_date\n                                        \n                                \n                                \n                                        \n                                            delivery_fees\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                                \n                                        \n                                            update_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_fees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_fees:     Decimal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Decimal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:     Decimal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Decimal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        update_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Decimal } from '@prisma/client/runtime';\nimport { Expose } from 'class-transformer';\n\nexport class UserCartDTO {\n  @ApiProperty()\n  @Expose()\n  id: string;\n\n  @ApiProperty()\n  @Expose()\n  email: string;\n\n  @ApiProperty({ type: [String] })\n  @Expose()\n  carts: Carts[];\n}\n\nexport interface Carts {\n  id: string;\n  created_at: Date;\n  update_at: Date;\n  status: string;\n  delivery_fees: Decimal;\n  total: Decimal;\n  delivery_date: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartsController.html":{"url":"controllers/CartsController.html","title":"controller - CartsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                carts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOwner\n                            \n                            \n                                addToCart\n                            \n                            \n                                    Async\n                                deleteFromCart\n                            \n                            \n                                    Async\n                                deleteMessage\n                            \n                            \n                                    Async\n                                deleteWholeCart\n                            \n                            \n                                getCart\n                            \n                            \n                                    Async\n                                newCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addOwner\n                        \n                    \n                \n            \n            \n                \n                    \n                    addOwner(user: UserDto, cartId: string, req, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiForbiddenResponse({description: 'Forbidden, please log in '})@UseGuards(JwtAuthGuard)@Patch('/add/owner')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(productId: string, cartId: string, body: addProductDataDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: addProductDataDTO, examples: undefined})@Patch('/add/product/:productId/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                addProductDataDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFromCart(productId: string, cartId: string, body: addProductDTO, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: addProductDTO})@Patch('remove/product/:productId/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                addProductDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMessage(cartId: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/error_message/delete/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWholeCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWholeCart(cartId: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart(cartId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    newCart(productId: string, body: CreateCartDTO, session: any, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateCartDTO, description: 'add first product on cart, creating the cart', examples: undefined})@Post('add/cart/:productId')\n                \n            \n\n            \n                \n                    Defined in src/carts/carts.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateCartDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Req,\n  Res,\n  Session,\n  UseGuards,\n} from '@nestjs/common'\nimport {\n  ApiBadRequestResponse,\n  ApiBasicAuth,\n  ApiBearerAuth,\n  ApiBody,\n  ApiForbiddenResponse,\n  ApiParam,\n  ApiTags,\n} from '@nestjs/swagger'\nimport { Product } from '@prisma/client'\nimport cookieSession from 'cookie-session'\nimport { query, Request, Response } from 'express'\nimport { AuthGuard } from 'guards/auth.guard'\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\nimport { Serialize } from 'interceptors/serialize.interceptors'\nimport { CurrentUser } from 'src/users/decorators/current-user.decorator'\nimport { UserDto } from 'src/users/dtos/user.dto'\nimport { runInThisContext } from 'vm'\nimport { CartsService } from './carts.service'\nimport { CurrentCart } from './decorators/current-cart'\nimport { addProductDTO } from './dtos/addProduct.dto'\nimport { addProductDataDTO } from './dtos/add_Product_Data.dto'\nimport { CreateCartDTO } from './dtos/create_cart.dto'\n\nimport { Carts, UserCartDTO } from './dtos/UserCart.dto'\n\n@ApiTags('carts')\n@Controller('carts')\nexport class CartsController {\n  constructor(private cartService: CartsService) {}\n\n  // @Post('/:productId/:cartId')\n  // async isProductOnCart(\n  //   @Param('productId') productId: string,\n  //   @Param('cartId') cartId: string,\n  // ) {\n  //   return await this.cartService.isProductOnCart(productId, cartId,size);\n  // }\n\n  @Get('/:cartId')\n  getCart(@Param('cartId') cartId: string) {\n    return this.cartService.getCart(cartId)\n  }\n\n  @ApiBody({\n    type: CreateCartDTO,\n    description: 'add first product on cart, creating the cart',\n    examples: {\n      firstproduct: {\n        value: {\n          size: 'M',\n          quantity: 3,\n        },\n      },\n    },\n  })\n  @Post('add/cart/:productId')\n  async newCart(\n    @Param('productId') productId: string,\n    @Body() body: CreateCartDTO,\n    @Session() session: any,\n    @Req() req\n  ) {\n    let size = body.size\n    let quantity = Number(body.quantity)\n\n    let createCartData: CreateCartDTO = {\n      productId: productId,\n      size: size,\n      quantity: quantity,\n    }\n    let cart = await this.cartService.newCart(createCartData)\n\n    req.session.cartId = cart.id\n    session.cartId = cart.id\n\n    return cart\n  }\n\n  @ApiBody({\n    type: addProductDataDTO,\n    examples: {\n      products: {\n        value: {\n          size: 'M',\n          quantity: 20,\n        },\n      },\n    },\n  })\n  @Patch('/add/product/:productId/:cartId')\n  addToCart(\n    @Param('productId') productId: string,\n    @Param('cartId') cartId: string,\n    @Body() body: addProductDataDTO\n  ) {\n    let size = body.size\n    let quantity = Number(body.quantityWanted)\n    let addProductData: addProductDTO = {\n      productId: productId,\n      cartId: cartId,\n      size: size,\n      quantityWanted: quantity,\n    }\n\n    return this.cartService.addProductToCart(addProductData)\n  }\n\n  @ApiBearerAuth()\n  @ApiForbiddenResponse({ description: 'Forbidden, please log in ' })\n  @UseGuards(JwtAuthGuard)\n  @Patch('/add/owner')\n  async addOwner(\n    @CurrentUser() user: UserDto,\n    @Param('cartId') cartId: string,\n    @Req() req,\n\n    @Session()\n    session: any\n  ) {\n    const cart = await this.cartService.addOwnerCart(user, cartId)\n    req.session.cartId = cart.id\n    return cart\n  }\n\n  @Patch('/error_message/delete/:cartId')\n  async deleteMessage(\n    @Param('cartId') cartId: string,\n    @Res() response: Response\n  ): Promise {\n    const deletedMessage = await this.cartService.deleteErrorMessage(cartId)\n    if (deletedMessage) {\n      response.status(200).send({\n        message: ` error(s) message(s) deleted`,\n      })\n    } else {\n      response.status(404).send({\n        message: `Cart ${cartId} not found`,\n      })\n    }\n  }\n\n  @ApiBody({ type: addProductDTO })\n  @Patch('remove/product/:productId/:cartId')\n  async deleteFromCart(\n    @Param('productId') productId: string,\n    @Param('cartId') cartId: string,\n    @Body() body: addProductDTO,\n    @Res() response: Response\n  ): Promise {\n    let quantityIncartDATA: Partial = {\n      productId: body.productId,\n      cartId: body.cartId,\n      size: body.size,\n    }\n    let deletedFromCart = await this.cartService.deleteFromCart(\n      quantityIncartDATA\n    )\n    if (deletedFromCart) {\n      response.status(200).send({\n        message: `Your product ${productId} has been succesfully suppress from cart ${cartId} `,\n      })\n    } else {\n      response.status(404).send({\n        message: `product ${productId} not found on the cart ${cartId} `,\n      })\n    }\n  }\n\n  @Delete('/:cartId')\n  async deleteWholeCart(\n    @Param('cartId') cartId: string,\n    @Res() response: Response\n  ): Promise {\n    const cartDeleted = await this.cartService.deleteWholeCart(cartId)\n    if (cartDeleted) {\n      response.status(200).send({\n        message: `Your cart ${cartId} been succesfully suppress`,\n      })\n    } else {\n      response.status(404).send({\n        message: `Cart ${cartId} not found`,\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartsModule.html":{"url":"modules/CartsModule.html","title":"module - CartsModule","body":"\n                   \n\n\n\n\n    Modules\n    CartsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CartsModule\n\n\n\ncluster_CartsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nCartsModule\n\nCartsModule\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nCartsModule -->\n\nProductsService->CartsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/carts/carts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { CurrentUserMiddleware } from 'src/users/middlewares/current-user.middleware'\nimport { CartsController } from './carts.controller'\nimport { CartsService } from './carts.service'\nimport { CurrentCartMiddleware } from './middlewares/current-cart'\n\n@Module({\n  controllers: [CartsController],\n  providers: [CartsService, PrismaService, ProductsService],\n})\nexport class CartsModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CurrentCartMiddleware).forRoutes('*')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartsService.html":{"url":"injectables/CartsService.html","title":"injectable - CartsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/carts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addOwnerCart\n                            \n                            \n                                    Async\n                                addProductToCart\n                            \n                            \n                                    Async\n                                calculateTotalCart\n                            \n                            \n                                    Async\n                                checkQuantityInCart\n                            \n                            \n                                    Async\n                                deleteErrorMessage\n                            \n                            \n                                    Async\n                                deleteFromCart\n                            \n                            \n                                    Async\n                                deleteWholeCart\n                            \n                            \n                                    Async\n                                getCart\n                            \n                            \n                                    Async\n                                HandleLastDeliveryDate\n                            \n                            \n                                    Async\n                                HandleQuantityShort\n                            \n                            \n                                    Async\n                                isCart\n                            \n                            \n                                    Async\n                                isProduct\n                            \n                            \n                                    Async\n                                isProductOnCart\n                            \n                            \n                                    Async\n                                newCart\n                            \n                            \n                                    Async\n                                QuantityInCartByProduct\n                            \n                            \n                                    Async\n                                sendErrorMessageOnCart\n                            \n                            \n                                    Async\n                                updateTotalCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, productService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/carts.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addOwnerCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addOwnerCart(user, cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:582\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductToCart(addProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        calculateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTotalCart(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkQuantityInCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkQuantityInCart(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteErrorMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteErrorMessage(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFromCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFromCart(quantityIncartDATA)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:515\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityIncartDATA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteWholeCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteWholeCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:697\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCart(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        HandleLastDeliveryDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    HandleLastDeliveryDate(CartDelivery, productDelivery)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    CartDelivery\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productDelivery\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        HandleQuantityShort\n                        \n                    \n                \n            \n            \n                \n                    \n                    HandleQuantityShort(data: QuantityShortDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                QuantityShortDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduct(productId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProductOnCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProductOnCart(quantityIncartDATA: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityIncartDATA\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        newCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    newCart(createCartData)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCartData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        QuantityInCartByProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    QuantityInCartByProduct(quantityIncartDATA)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityIncartDATA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendErrorMessageOnCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendErrorMessageOnCart(json, cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTotalCart\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTotalCart(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/carts.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConsoleLogger,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common'\nimport { Prisma, Size } from '@prisma/client'\nimport { resolve } from 'path'\nimport { elementAt, identity } from 'rxjs'\n\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\n\nimport { CartDbData } from './custonType/CartDB'\nimport { addProductDTO } from './dtos/addProduct.dto'\nimport { AddToCartDTO } from './dtos/add_to_cart.dto'\nimport { QuantityShortDTO } from './dtos/quantity_short.dto'\nimport { Total_cartDTO } from './dtos/total_cart.dto'\n@Injectable()\nexport class CartsService {\n  constructor(\n    private prisma: PrismaService,\n    private productService: ProductsService\n  ) {}\n\n  async isCart(cartId: string) {\n    return await this.prisma.cart.findUnique({\n      where: { id: cartId },\n      include: {\n        products: {\n          include: {\n            product: {\n              select: {\n                quantity_available: true,\n                price: true,\n                DeliveryDate: true,\n              },\n            },\n          },\n        },\n      },\n    })\n  }\n\n  async QuantityInCartByProduct(quantityIncartDATA) {\n    let { productId, cartId, size } = quantityIncartDATA\n\n    let ProductOnCartID = await this.isProductOnCart(quantityIncartDATA)\n\n    return await this.prisma.cart.findFirst({\n      select: { products: { select: { quantityInCart: true } } },\n      where: {\n        AND: [\n          { id: cartId },\n          {\n            products: {\n              some: {\n                AND: [{ id: ProductOnCartID.id }, { size: { equals: size } }],\n              },\n            },\n          },\n        ],\n      },\n    })\n  }\n\n  async isProduct(productId) {\n    return await this.productService.isProduct(productId)\n  }\n\n  async isProductOnCart(quantityIncartDATA: Partial) {\n    let { productId, cartId, size } = quantityIncartDATA\n\n    // Mainly to get back size and id from the intermediary Prisma table (ProductsOnCart)\n    const isProduct = await this.prisma.productsOnCart.findFirst({\n      select: { id: true, size: true, quantityInCart: true },\n      where: {\n        AND: [{ cartId: cartId }, { productId: productId }, { size: size }],\n      },\n    })\n\n    return isProduct\n  }\n\n  async sendErrorMessageOnCart(json, cartId) {\n    const currentError = await this.prisma.cart.findUnique({\n      select: { error_Messages: true },\n      where: { id: cartId },\n    })\n\n    if (currentError.error_Messages[0] === 'JsonNull') {\n      let newJson = json as Prisma.JsonArray\n      try {\n        await this.prisma.cart.update({\n          where: { id: cartId },\n          data: {\n            error_Messages: newJson,\n          },\n        })\n      } catch (error) {\n        return new Error('Update error_Message failed')\n      }\n    } else {\n      let newJson = [\n        ...currentError.error_Messages,\n        ...json,\n      ] as Prisma.JsonArray\n      try {\n        await this.prisma.cart.update({\n          where: { id: cartId },\n          data: {\n            error_Messages: newJson,\n          },\n        })\n      } catch (error) {\n        return new Error('Update error_Message failed')\n      }\n    }\n  }\n\n  async HandleQuantityShort(data: QuantityShortDTO) {\n    let {\n      cartId,\n      isProductOnCartID,\n      quantityShort,\n      availableQuantity,\n      productId,\n    } = data\n\n    // 1) Restrict quantity wanted only to quantity available\n\n    try {\n      let newCart = await this.prisma.cart.update({\n        include: { products: true },\n        data: {\n          update_at: new Date(),\n          products: {\n            update: {\n              where: { id: isProductOnCartID },\n              data: { quantityInCart: { decrement: quantityShort } },\n            },\n          },\n        },\n        where: { id: cartId },\n      })\n\n      // 2) Recalculate the new price and update it\n\n      await this.updateTotalCart(newCart.id)\n    } catch (error) {\n      return new Error('Update quantity on cart failed')\n    }\n\n    // send error message to warn there is only n quantity available\n    var json = [\n      {\n        error: `only ${availableQuantity} (left) for product ${productId}`,\n      },\n    ]\n\n    this.sendErrorMessageOnCart(json, cartId)\n  }\n\n  async newCart(createCartData) {\n    let { productId, size, quantity } = createCartData\n\n    const isProduct = await this.isProduct(productId)\n\n    if (!isProduct) {\n      throw new NotFoundException('No product found')\n    } else {\n      let newCart: CartDbData = {\n        delivery_fees: 0,\n        delivery_date: isProduct.DeliveryDate,\n        total: 0,\n        status: 'PENDING',\n      }\n\n      let cartId = await this.prisma.cart.create({\n        select: { id: true },\n        data: newCart,\n      })\n      let addproductData: addProductDTO = {\n        productId: productId,\n        size: size,\n        quantityWanted: quantity,\n        cartId: cartId.id,\n      }\n\n      let addProduct = await this.addProductToCart(addproductData)\n\n      return await this.isCart(addProduct.id)\n    }\n  }\n\n  async deleteErrorMessage(cartId) {\n    const isCart = await this.isCart(cartId)\n    if (isCart) {\n      let deleteMessage = await this.prisma.cart.update({\n        where: { id: cartId },\n        data: { error_Messages: Prisma.JsonNull },\n      })\n      return deleteMessage\n    } else {\n      return null\n    }\n  }\n\n  async getCart(cartId) {\n    let isCart = await this.isCart(cartId)\n\n    if (!isCart) {\n      throw new BadRequestException('No cart Found')\n    } else {\n      // check quantity in cart to be sure there is enough available\n      await this.checkQuantityInCart(cartId)\n\n      // update price related to the new quantities :\n\n      await this.updateTotalCart(cartId)\n\n      const newCart = await this.prisma.cart.findUnique({\n        where: { id: cartId },\n        include: {\n          products: {\n            include: {\n              product: {\n                select: {\n                  quantity_available: true,\n                  price: true,\n                  DeliveryDate: true,\n                },\n              },\n            },\n          },\n        },\n      })\n\n      return newCart\n    }\n  }\n\n  async calculateTotalCart(cartId) {\n    const cart = await this.isCart(cartId)\n    let total = 0\n    cart.products.map((products) => {\n      console.log('quantityinCart', products.quantityInCart)\n      total =\n        total + Number(products.product.price) * Number(products.quantityInCart)\n    })\n\n    return total\n  }\n\n  async updateTotalCart(cartId: string) {\n    // 2) Recalculate the new price and update it\n    let newTotal = await this.calculateTotalCart(cartId)\n\n    try {\n      await this.prisma.cart.update({\n        include: { products: true },\n        data: {\n          update_at: new Date(),\n\n          total: newTotal,\n        },\n        where: { id: cartId },\n      })\n    } catch (error) {\n      console.log('error update Total cart ', error)\n    }\n  }\n\n  async checkQuantityInCart(cartId) {\n    const isCart = await this.isCart(cartId)\n\n    if (!isCart) {\n      throw new Error(`No Cart found for this Id: ${cartId}`)\n    } else {\n      let ps = []\n\n      isCart.products.map(async (products) => {\n        ps.push(\n          new Promise(async (resolve, reject) => {\n            const availableQuantity =\n              products.product.quantity_available[products.size]\n\n            const quantityInCartProduct = products.quantityInCart\n\n            if (availableQuantity  {\n        console.log(values)\n      })\n    }\n  }\n  async HandleLastDeliveryDate(CartDelivery, productDelivery) {\n    let dateArray = [CartDelivery, productDelivery]\n    return dateArray.sort(function (date1, date2) {\n      return date2.getTime() - date1.getTime()\n    })[0]\n  }\n\n  async addProductToCart(addProductData) {\n    const { size, cartId, productId } = addProductData\n    const isCart = await this.isCart(cartId)\n\n    // quantityWanted is optional, by default =1\n    let quantityWanted = 1\n\n    if (addProductData.quantityWanted) {\n      quantityWanted = addProductData.quantityWanted\n    }\n\n    if (!isCart) {\n      throw new NotFoundException('No cart Found')\n    } else {\n      const isProduct = await this.prisma.product.findUnique({\n        where: { id: productId },\n        include: { quantity_available: true },\n      })\n\n      if (!isProduct) {\n        throw new NotFoundException('No product found')\n      } else {\n        let quantity = isProduct.quantity_available[size]\n\n        if (quantity  {\n            ps.push(\n              new Promise(async (resolve, reject) => {\n                let addProductData = {\n                  productId: products.productId,\n                  cartId: oldUserCart.carts[0].id,\n                  size: products.size,\n                  quantityWanted: products.quantityInCart,\n                }\n                try {\n                  await this.addProductToCart(addProductData)\n                } catch (error) {\n                  console.log('addToCart error', error)\n                }\n\n                resolve('product added to older Cart')\n              })\n            )\n          })\n          await Promise.all(ps).then((values) => {\n            console.log(values)\n          })\n        }\n        // total recalculate\n        try {\n          // const newTotal = await this.calculateTotalCart(\n          //   oldUserCart.carts[0].id\n          // )\n\n          await this.updateTotalCart(oldUserCart.carts[0].id)\n        } catch (error) {\n          console.log('error Cart OWNER recalculate price', error)\n        }\n\n        // Suppress the other cart\n        await this.deleteWholeCart(cartId)\n        //check if quantities are still available\n\n        try {\n          await this.checkQuantityInCart(oldUserCart.carts[0].id)\n          return await this.isCart(oldUserCart.carts[0].id)\n        } catch (error) {\n          console.log(\n            'error from add Owner, merge two carts, check quantity or calculate price',\n            error\n          )\n        }\n\n        //  oldUserCart.carts[0];\n        return isCart\n      }\n    }\n  }\n\n  async deleteWholeCart(cartId: string) {\n    const isCart = this.isCart(cartId)\n    if (!isCart) {\n      return null\n    } else {\n      let deletedCart = await this.prisma.cart.delete({\n        where: { id: cartId },\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClassConstructor.html":{"url":"interfaces/ClassConstructor.html","title":"interface - ClassConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClassConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            interceptors/serialize.interceptors.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\nimport { plainToInstance } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: any) {}\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    // run something before a request is handled\n\n    return handler.handle().pipe(\n      map((data: any) => {\n        return plainToInstance(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n    // run after request handler }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartDTO.html":{"url":"classes/CreateCartDTO.html","title":"class - CreateCartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/create_cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'productID to put in cart'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/create_cart.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/create_cart.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'product size wanted (XS to XXL), you are creating new cart, by adding the first product'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/create_cart.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class CreateCartDTO {\n  @ApiProperty({\n    description:\n      'product size wanted (XS to XXL), you are creating new cart, by adding the first product',\n  })\n  @IsString()\n  size: string;\n\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  @IsNumber()\n  @IsOptional()\n  quantity: number;\n\n  @ApiPropertyOptional({ description: 'productID to put in cart' })\n  @IsString()\n  @IsOptional()\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brand\n                            \n                            \n                                categories\n                            \n                            \n                                color\n                            \n                            \n                                DeliveryDate\n                            \n                            \n                                description\n                            \n                            \n                                pictures\n                            \n                            \n                                price\n                            \n                            \n                                quantity_available\n                            \n                            \n                                ref\n                            \n                            \n                                size\n                            \n                            \n                                style\n                            \n                            \n                                sustainable\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brand\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DeliveryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(300, {message: 'Description is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity_available\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSizes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sustainable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sustainable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(50, {message: 'Title is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsDecimal,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { Optional } from '@nestjs/common';\n\nexport class Sustainable {\n  isActive: boolean;\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n}\nexport class CreateProductDto {\n  @IsArray()\n  categories: Array;\n\n  @IsString()\n  ref: string;\n\n  @IsString()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @IsString()\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @IsString()\n  brand: string;\n\n  @IsArray()\n  color: Array;\n\n  @Optional()\n  style: string;\n\n  @IsNotEmpty()\n  sustainable: Sustainable;\n\n  @IsString()\n  DeliveryDate: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsArray()\n  size: Array;\n\n  @IsNotEmpty()\n  quantity_available: ProductSizes;\n\n  @IsArray()\n  pictures: Array;\n}\n\nexport interface ProductSizes {\n  XXS: number;\n  XS: number;\n  S: number;\n  M: number;\n  L: number;\n  XL: number;\n  XXL: number;\n  XXXL: number;\n}\n\nexport enum ProductMorphology {\n  A,\n  V,\n  H,\n  X,\n  O,\n}\n\nexport interface PicturesTags {\n  src: string;\n  stylePicture?: string;\n  morphoPicture?: ProductMorphology;\n  genderPicture?: string;\n  categoriesPicture?: string;\n  colorPicture?: string;\n  sizePicture?: ProductSizes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                pictures\n                            \n                            \n                                rating_quality\n                            \n                            \n                                rating_size\n                            \n                            \n                                rating_style\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({maxLength: 160})@IsString()@MaxLength(160, {message: 'Description is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Numbers possibles: 0,1,2,3,4 and 5'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Numbers possibles: 0,1,2,3,4 and 5'})@ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Numbers possibles: 0,1,2,3,4 and 5'})@ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({maxLength: 50})@IsString()@MaxLength(50, {message: 'Title is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/create-review.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString, MaxLength } from 'class-validator';\n\nexport class CreateReviewDto {\n  @ApiProperty({ maxLength: 50 })\n  @IsString()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @ApiProperty({ maxLength: 160 })\n  @IsString()\n  @MaxLength(160, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @ApiProperty({ description: 'Numbers possibles: 0,1,2,3,4 and 5' })\n  @IsNumber()\n  rating_quality: number;\n\n  @ApiProperty({ description: 'Numbers possibles: 0,1,2,3,4 and 5' })\n  @ApiProperty()\n  @IsNumber()\n  rating_style: number;\n\n  @ApiProperty({ description: 'Numbers possibles: 0,1,2,3,4 and 5' })\n  @ApiProperty()\n  @IsNumber()\n  rating_size: number;\n\n  @ApiPropertyOptional({ type: [String] })\n  @IsOptional()\n  pictures?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adress_Bill\n                            \n                            \n                                adress_Delivery\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                morphology\n                            \n                            \n                                password\n                            \n                            \n                                size\n                            \n                            \n                                token\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adress_Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        adress_Delivery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Adress\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'optional until delivery module'})@IsOptional()@ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        morphology\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Morphology\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Morphology } from '@prisma/client'\nimport { IsEmail, IsOptional, IsString } from 'class-validator'\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string\n\n  @ApiProperty()\n  @IsString()\n  password: string\n\n  @ApiProperty()\n  @IsString()\n  lastname: string\n\n  @ApiProperty()\n  @IsString()\n  firstname: string\n\n  @ApiPropertyOptional({ description: 'optional until delivery module' })\n  @IsOptional()\n  @ApiPropertyOptional()\n  adress_Delivery: Adress\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill: Adress\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  morphology: Morphology\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  size: string\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  weight: string\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  token: object\n}\n\nexport interface Adress {\n  number?: number\n  street?: string\n  postcode: number\n  city: string\n  country: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentCartMiddleware.html":{"url":"injectables/CurrentCartMiddleware.html","title":"injectable - CurrentCartMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentCartMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middlewares/current-cart.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartsService)\n                    \n                \n                        \n                            \n                                Defined in src/carts/middlewares/current-cart.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/carts/middlewares/current-cart.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common'\nimport { NextFunction, Request, Response } from 'express'\nimport { UsersService } from '../../users/users.service'\n\nimport { UserDto } from '../../users/dtos/user.dto'\nimport { Carts } from 'src/carts/dtos/UserCart.dto'\nimport { CartsService } from 'src/carts/carts.service'\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentCart?: Carts\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentCartMiddleware implements NestMiddleware {\n  constructor(private cartService: CartsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { cartId } = req.session || {}\n\n    if (cartId) {\n      const cart = await this.cartService.isCart(cartId)\n      req.currentCart = cart\n    }\n    next()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserMiddleware.html":{"url":"injectables/CurrentUserMiddleware.html","title":"injectable - CurrentUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/middlewares/current-user.middleware.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/users/middlewares/current-user.middleware.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common'\nimport { NextFunction, Request, Response } from 'express'\nimport { UserDto } from '../dtos/user.dto'\nimport { UsersService } from '../users.service'\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: UserDto\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private userService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {}\n\n    if (userId) {\n      const user = await this.userService.isUserById(userId)\n      req.currentUser = user\n    }\n    next()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataChargeDto.html":{"url":"classes/DataChargeDto.html","title":"class - DataChargeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataChargeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe/dtos/charge_data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCart\n                            \n                            \n                                paymentMethod\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Carts\n\n                    \n                \n                    \n                        \n                                Defined in src/stripe/dtos/charge_data.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentMethod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stripe/dtos/charge_data.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/stripe/dtos/charge_data.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\nimport { IsString, IsNotEmpty, IsNumber } from 'class-validator'\nimport { Carts } from 'src/carts/dtos/UserCart.dto'\nimport { UserDto } from 'src/users/dtos/user.dto'\n\nexport class DataChargeDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  paymentMethod: string\n\n  user: UserDto\n\n  currentCart: Carts\n}\n\nexport default DataChargeDto\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryController.html":{"url":"controllers/DeliveryController.html","title":"controller - DeliveryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkDeliveryAmount\n                            \n                            \n                                    Async\n                                createDelivery\n                            \n                            \n                                deleteDelivery\n                            \n                            \n                                deleteManyProducts\n                            \n                            \n                                findDeliveryByCart\n                            \n                            \n                                updateDelivery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkDeliveryAmount\n                        \n                    \n                \n            \n            \n                \ncheckDeliveryAmount(cartId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/amount/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDelivery(deliveryData: DeliveryData, cartId: string, user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: DeliveryData, examples: undefined})@ApiBearerAuth()@UseGuards(JwtAuthGuard)@Post('/create/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deliveryData\n                                    \n                                                DeliveryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDelivery\n                        \n                    \n                \n            \n            \n                \ndeleteDelivery(cartId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteManyProducts\n                        \n                    \n                \n            \n            \n                \ndeleteManyProducts(ids: FindManyIdsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: FindManyIdsDTO, description: 'Delete many product by once, with array of productIDs', examples: undefined})@Post('deletemany')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                FindManyIdsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findDeliveryByCart\n                        \n                    \n                \n            \n            \n                \nfindDeliveryByCart(cartId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDelivery\n                        \n                    \n                \n            \n            \n                \nupdateDelivery(cartId: string, toUpdate: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:cartId')\n                \n            \n\n            \n                \n                    Defined in src/delivery/delivery.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toUpdate\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger'\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\nimport { User } from '@prisma/client'\n\nimport { FindManyIdsDTO } from 'src/products/dtos/find-many.dto'\nimport { UserDto } from 'src/users/dtos/user.dto'\nimport { DeliveryService } from './delivery.service'\nimport { DeliveryData } from './dtos/create_delivery.dto'\nimport { CurrentUser } from 'src/users/decorators/current-user.decorator'\n\n@ApiTags('delivery')\n@Controller('delivery')\nexport class DeliveryController {\n  constructor(private deliveryService: DeliveryService) {}\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: DeliveryData,\n    examples: {\n      CreateDelivery: {\n        value: {\n          delivery_type: 'CollectInStore',\n          delivery_fees: 3.99,\n          delivery_date: 'Saturday, September 17, 2016',\n          free_delivery_amount: 30,\n        },\n      },\n    },\n  })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Post('/create/:cartId')\n  async createDelivery(\n    @Body() deliveryData: DeliveryData,\n    @Param('cartId') cartId: string,\n    @CurrentUser() user: UserDto,\n  ) {\n    const dataToSend = {\n      deliveryData: deliveryData,\n      cartId: cartId,\n      user: user,\n    }\n\n    return this.deliveryService.createDelivery(dataToSend)\n  }\n\n  @Get('/amount/:cartId') checkDeliveryAmount(@Param('cartId') cartId: string) {\n    return this.deliveryService.checkDeliveryAmount(cartId)\n  }\n\n  @Get('/:cartId') findDeliveryByCart(@Param('cartId') cartId: string) {\n    return this.deliveryService.isDelivery(cartId)\n  }\n\n  @Patch('/:cartId') updateDelivery(\n    @Param('cartId') cartId: string,\n    @Body() toUpdate: Partial,\n  ) {\n    let data = { filters: toUpdate, cartId: cartId }\n    return this.deliveryService.updateDelivery(data)\n  }\n\n  @Delete('/:cartId') deleteDelivery(@Param('cartId') cartId: string) {\n    return this.deliveryService.deleteDelivery(cartId)\n  }\n\n  @ApiBody({\n    type: FindManyIdsDTO,\n    description: 'Delete many product by once, with array of productIDs',\n    examples: {\n      CartIdsArray: {\n        value: {\n          ids: [\n            '31c9ed5e-4849-4370-9843-de5251359fab',\n            'ec384093-68b6-4bf9-87b4-09976fc1d5e4',\n          ],\n        },\n      },\n    },\n  })\n  @Post('deletemany')\n  deleteManyProducts(@Body() ids: FindManyIdsDTO) {\n    return this.deliveryService.deleteManyDeliveries(ids)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeliveryData.html":{"url":"classes/DeliveryData.html","title":"class - DeliveryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeliveryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/dtos/create_delivery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delivery_date\n                            \n                            \n                                delivery_fees\n                            \n                            \n                                delivery_type\n                            \n                            \n                                    Optional\n                                free_delivery_amount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/create_delivery.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_fees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/create_delivery.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Delivery_type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEnum(Delivery_type)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/create_delivery.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        free_delivery_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'If there is an amount from which delivery is free'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/create_delivery.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Delivery_type } from '@prisma/client';\nimport { Decimal } from '@prisma/client/runtime';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class DeliveryData {\n  @ApiProperty()\n  @IsEnum(Delivery_type)\n  delivery_type: Delivery_type;\n\n  @ApiProperty()\n  @IsString()\n  delivery_date: string;\n\n  @ApiProperty()\n  @IsNumber()\n  delivery_fees: Decimal;\n\n  @ApiPropertyOptional({\n    description: 'If there is an amount from which delivery is free',\n  })\n  @IsOptional()\n  free_delivery_amount?: Decimal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeliveryData-1.html":{"url":"classes/DeliveryData-1.html","title":"class - DeliveryData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeliveryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/dtos/delivery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delivery_Date\n                            \n                            \n                                delivery_fees\n                            \n                            \n                                delivery_type\n                            \n                            \n                                    Optional\n                                free_delivery_amount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_Date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/delivery.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_fees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/delivery.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delivery_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Delivery_type\n\n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/delivery.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        free_delivery_amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                    \n                        \n                                Defined in src/delivery/dtos/delivery.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Delivery_type } from '@prisma/client';\nimport { Decimal } from '@prisma/client/runtime';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class DeliveryData {\n  delivery_type: Delivery_type;\n  delivery_Date: Date;\n  delivery_fees: Decimal;\n  free_delivery_amount?: Decimal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryModule.html":{"url":"modules/DeliveryModule.html","title":"module - DeliveryModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nDeliveryModule -->\n\nCartsService->DeliveryModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nDeliveryModule -->\n\nPrismaService->DeliveryModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nDeliveryModule -->\n\nProductsService->DeliveryModule\n\n\n\nDeliveryModule -->\n\nProductsService->DeliveryModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nDeliveryModule -->\n\nStripeService->DeliveryModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDeliveryModule -->\n\nUsersService->DeliveryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery/delivery.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CartsService } from 'src/carts/carts.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { StripeService } from 'src/stripe/stripe.service'\nimport { UsersService } from 'src/users/users.service'\nimport { DeliveryController } from './delivery.controller'\nimport { DeliveryService } from './delivery.service'\n\n@Module({\n  controllers: [DeliveryController],\n  providers: [\n    DeliveryService,\n    PrismaService,\n    StripeService,\n    CartsService,\n    ProductsService,\n    UsersService,\n    ProductsService,\n  ],\n})\nexport class DeliveryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService.html":{"url":"injectables/DeliveryService.html","title":"injectable - DeliveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDeliveryAmount\n                            \n                            \n                                    Async\n                                createDelivery\n                            \n                            \n                                    Async\n                                deleteDelivery\n                            \n                            \n                                    Async\n                                deleteManyDeliveries\n                            \n                            \n                                    Async\n                                findManysDeliveries\n                            \n                            \n                                    Async\n                                isDelivery\n                            \n                            \n                                    Async\n                                updateDelivery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, cartService: CartsService, stripeService: StripeService)\n                    \n                \n                        \n                            \n                                Defined in src/delivery/delivery.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripeService\n                                                  \n                                                        \n                                                                        StripeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkDeliveryAmount\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDeliveryAmount(cartId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDelivery(data)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteDelivery(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteManyDeliveries\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteManyDeliveries(body)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findManysDeliveries\n                        \n                    \n                \n            \n            \n                \n                    \n                    findManysDeliveries(array: FindManyIdsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                                FindManyIdsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDelivery(cartId)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateDelivery\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDelivery(toUpdate)\n                \n            \n\n\n            \n                \n                    Defined in src/delivery/delivery.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toUpdate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common'\nimport { Delivery_type } from '@prisma/client'\nimport { CartsService } from 'src/carts/carts.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { FindManyIdsDTO } from 'src/products/dtos/find-many.dto'\nimport { StripeService } from 'src/stripe/stripe.service'\nimport { UsersService } from 'src/users/users.service'\n\n@Injectable()\nexport class DeliveryService {\n  constructor(\n    private prisma: PrismaService,\n    private cartService: CartsService,\n    private stripeService: StripeService\n  ) {}\n\n  async createDelivery(data) {\n    const { delivery_type, delivery_date } = data.deliveryData\n    let { delivery_fees } = data.deliveryData\n\n    const { user } = data\n    //check if there is a free delivery\n\n    const isCart = await this.cartService.isCart(data.cartId)\n\n    // check if, quantity in cart are still availables\n    await this.cartService.checkQuantityInCart(data.cartId)\n\n    const { free_delivery_amount } = data.deliveryData.free_delivery_amount\n    if (!isCart) {\n      throw new NotFoundException('No cart found')\n    } else {\n      //check if user include delivery adress\n      const isUserAdress = await this.prisma.user.findUnique({\n        where: { id: user.id },\n        select: { adress_Delivery: { include: { User: true } } },\n      })\n\n      if (!isUserAdress.adress_Delivery) {\n        throw new UnauthorizedException('delivery adress not found')\n      } else {\n        const stripeCustomer = await this.stripeService.createStripeCustomer(\n          user.lastname,\n          user.email\n        )\n        console.log('stripe', stripeCustomer)\n\n        await this.prisma.user.update({\n          where: { id: user.id },\n          data: { stripeCustomerID: stripeCustomer.id },\n        })\n\n        if (\n          Number(isCart.total) >=\n          Number(free_delivery_amount && delivery_type == 'CollectInStore')\n        ) {\n          delivery_fees = 0\n          return await this.prisma.delivery.create({\n            data: {\n              delivery_type: delivery_type,\n              delivery_fees: Number(delivery_fees),\n              delivery_date: new Date(delivery_date),\n              free_delivery_amount: Number(free_delivery_amount),\n              affiliateCart: { connect: { id: isCart.id } },\n              affiliateUser: { connect: { id: user.id } },\n              total: Number(isCart.total),\n            },\n          })\n        }\n        let total = Number(isCart.total) + Number(delivery_fees)\n        return await this.prisma.delivery.create({\n          data: {\n            delivery_type: delivery_type,\n            delivery_fees: Number(delivery_fees),\n            delivery_date: new Date(delivery_date),\n            affiliateCart: { connect: { id: isCart.id } },\n            total: Number(total),\n            affiliateUser: { connect: { id: user.id } },\n          },\n        })\n      }\n    }\n  }\n\n  async isDelivery(cartId) {\n    console.log('cart delivery', cartId)\n    const delivery = await this.prisma.delivery.findFirst({\n      where: { cartId: cartId },\n      include: {\n        affiliateCart: { select: { id: true, total: true } },\n        affiliateUser: {\n          include: { adress_Delivery: true, adress_Bill: true },\n        },\n      },\n    })\n    console.log('delivery', delivery)\n    return delivery\n  }\n\n  async checkDeliveryAmount(cartId: string) {\n    const isCart = await this.cartService.isCart(cartId)\n\n    if (!isCart) {\n      throw new NotFoundException('No cart found')\n    } else {\n      const isDelivery = await this.isDelivery(cartId)\n\n      if (!isCart) {\n        throw new NotFoundException(\n          'No delivery found for this cart, create one first'\n        )\n      } else {\n        if (\n          Number(isCart.total) >=\n          Number(\n            isDelivery.free_delivery_amount &&\n              isDelivery.delivery_type === 'CollectInStore'\n          )\n        ) {\n          let delivery_fees = 0\n          return await this.prisma.delivery.update({\n            select: { delivery_fees: true, total: true },\n            where: { id: isDelivery.id },\n            data: { delivery_fees: 0, total: isCart.total },\n          })\n        } else {\n          return {\n            delivery_fees: isDelivery.delivery_fees,\n            total: isDelivery.total,\n          }\n        }\n      }\n    }\n  }\n\n  async updateDelivery(toUpdate) {\n    const { filters, cartId } = toUpdate\n\n    const isDelivery = await this.isDelivery(cartId)\n    if (!isDelivery) {\n      throw new NotFoundException('No delivery Found')\n    } else {\n      let data = {}\n      data = { ...data, update_at: new Date() }\n\n      if (filters.delivery_fees) {\n        data = { ...data, delivery_fees: Number(filters.delivery_fees) }\n      }\n\n      if (filters.delivery_type) {\n        data = { ...data, delivery_type: filters.delivery_type }\n        if (\n          filters.delivery_type === 'CollectInStore' &&\n          isDelivery.affiliateCart.total >= isDelivery.free_delivery_amount\n        ) {\n          data = { ...data, delivery_date: 0 }\n        }\n      }\n\n      if (filters.free_delivery_amount) {\n        data = {\n          ...data,\n          free_delivery_amount: filters.free_delivery_amount,\n        }\n        if (\n          (filters.delivery_type === 'CollectInStore' &&\n            isDelivery.affiliateCart.total >=\n              isDelivery.free_delivery_amount) ||\n          (isDelivery.affiliateCart.total >= isDelivery.free_delivery_amount &&\n            isDelivery.delivery_type === 'CollectInStore' &&\n            !filters.delivery_type)\n        ) {\n          data = { ...data, delivery_date: 0 }\n        }\n      }\n\n      if (filters.delivery_date) {\n        data = { ...data, delivery_date: new Date(filters.delivery_date) }\n      }\n\n      return await this.prisma.product.update({\n        where: {\n          id: isDelivery.id,\n        },\n        data: data,\n      })\n    }\n  }\n\n  async deleteDelivery(cartId) {\n    const deliveryToDelete = await this.isDelivery(cartId)\n    if (!deliveryToDelete) {\n      throw new NotFoundException(`delivery not found`)\n    }\n    return this.prisma.product.delete({ where: { id: deliveryToDelete.id } })\n  }\n\n  async findManysDeliveries(array: FindManyIdsDTO) {\n    let arr = array.ids\n    const deliveries = await this.prisma.product.findMany({\n      where: {\n        id: { in: arr },\n      },\n    })\n\n    return deliveries\n  }\n\n  async deleteManyDeliveries(body) {\n    const deliveriesToDelete = this.findManysDeliveries(body)\n    if (!deliveriesToDelete) {\n      throw new NotFoundException('One or more  product(s) not found')\n    } else\n      return this.prisma.product.deleteMany({\n        where: { id: { in: body.ids } },\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FacebookStrategy.html":{"url":"injectables/FacebookStrategy.html","title":"injectable - FacebookStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FacebookStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/facebook.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/facebook.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: Profile, done: (err: any,user: any,info: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/facebook.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                            Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Profile, Strategy } from 'passport-facebook';\n\n@Injectable()\nexport class FacebookStrategy extends PassportStrategy(Strategy, 'facebook') {\n  constructor() {\n    super({\n      clientID: process.env.FACEBOOK_APP_ID,\n      clientSecret: process.env.FACEBOOK_SECRET,\n      callbackURL: 'http://localhost:3000/auth/facebook/callback',\n      scope: 'email',\n      profileFields: ['emails', 'name'],\n    });\n  }\n\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: Profile,\n    done: (err: any, user: any, info?: any) => void,\n  ): Promise {\n    const { name, emails } = profile;\n    const user = {\n      email: emails[0].value,\n      firstName: name.givenName,\n      lastName: name.familyName,\n      accessToken,\n    };\n\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindManyIdsDTO.html":{"url":"classes/FindManyIdsDTO.html","title":"class - FindManyIdsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindManyIdsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/find-many.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/find-many.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class FindManyIdsDTO {\n  @ApiProperty()\n  @IsArray()\n  ids: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleStrategy.html":{"url":"injectables/GoogleStrategy.html","title":"injectable - GoogleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/google.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/google.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: any, done: VerifyCallback)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/google.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                            VerifyCallback\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Strategy, VerifyCallback } from 'passport-google-oauth20'\n\nimport * as passport from 'passport'\n\nimport { PassportStrategy } from '@nestjs/passport'\nimport { domainToASCII } from 'url'\n\n@Injectable()\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\n  constructor() {\n    // http://www.passportjs.org/docs/google/\n    super({\n      approval_prompt: 'force',\n      access_type: 'offline',\n      clientID: process.env.GOOGLE_AUTH_client_ID,\n      clientSecret: process.env.GOOGLE_AUTH_client_secret,\n      callbackURL: 'http://localhost:3000/auth/google/callback',\n\n      scope: ['email', 'profile'],\n    })\n  }\n\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: any,\n    done: VerifyCallback\n  ): Promise {\n    const { name, emails, photos } = profile\n\n    const user = {\n      email: emails[0].value,\n      firstName: name.givenName,\n      lastName: name.familyName,\n      picture: photos[0].value,\n      accessToken,\n    }\n\n    done(null, user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\nimport { jwtConstants } from './constants'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      secretOrKey: process.env.JWTSecretKey,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n    })\n  }\n\n  async validate(payload: any) {\n    let { email, sub, size, admin, lastname } = payload.data\n    return {\n      sub: payload.iat,\n      email: email,\n      id: sub,\n      size: size,\n      admin: admin,\n      lastname: lastname,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      secret: process.env.JWTSecretKey,\n    });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderBy.html":{"url":"interfaces/OrderBy.html","title":"interface - OrderBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/customTypes/all_payments.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaymentsFilters {\n  orderBy: OrderBy;\n  sort: string;\n}\n\nexport interface OrderBy {\n  created_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentDTO.html":{"url":"classes/PaymentDTO.html","title":"class - PaymentDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dtos/payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                affiliateCart\n                            \n                            \n                                    Optional\n                                create_at\n                            \n                            \n                                    Optional\n                                owner\n                            \n                            \n                                    Optional\n                                sort\n                            \n                            \n                                    Optional\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        affiliateCart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/payment.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        create_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/payment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/payment.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/payment.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payments/dtos/payment.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class PaymentDTO {\n  @ApiPropertyOptional()\n  @IsOptional()\n  create_at?: Date;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  owner?: object;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  affiliateCart?: object;\n\n  @ApiPropertyOptional()\n  @IsString()\n  sort?: string;\n\n  total?: string;\n}\n\nexport enum Sort {\n  'asc',\n  'desc',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPayment\n                            \n                            \n                                getAllPayments\n                            \n                            \n                                getPaymentById\n                            \n                            \n                                getPaymentByUserEmail\n                            \n                            \n                                getPaymentByUserID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPayment\n                        \n                    \n                \n            \n            \n                \ncreatePayment(payment: BodyChargeDto, currentCart: Carts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@UseGuards(JwtAuthGuard)@Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payment\n                                    \n                                                BodyChargeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentCart\n                                    \n                                                Carts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPayments\n                        \n                    \n                \n            \n            \n                \ngetAllPayments(datas: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentById\n                        \n                    \n                \n            \n            \n                \ngetPaymentById(paymentId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:paymentId')\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paymentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentByUserEmail\n                        \n                    \n                \n            \n            \n                \ngetPaymentByUserEmail(email: string, filters: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:email')@UseGuards(AdminGUard)\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentByUserID\n                        \n                    \n                \n            \n            \n                \ngetPaymentByUserID(id: string, filters: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:id')@UseGuards(AdminGUard)\n                \n            \n\n            \n                \n                    Defined in src/payments/payments.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Query,\n  Request,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiTags, ApiBearerAuth, ApiBody } from '@nestjs/swagger'\nimport { User } from '@prisma/client'\nimport { AdminGUard } from 'guards/admin.guard'\nimport { CurrentUser } from 'src/users/decorators/current-user.decorator'\nimport { newPaymentDTO } from './dtos/create_payment.dto'\nimport { PaymentDTO } from './dtos/payment.dto'\nimport { PaymentsService } from './payments.service'\n\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\nimport { UserDto } from 'src/users/dtos/user.dto'\nimport BodyChargeDto from 'src/stripe/dtos/BodyCharge.dto'\nimport { CurrentCart } from 'src/carts/decorators/current-cart'\nimport { Carts } from 'src/carts/dtos/UserCart.dto'\n\n@ApiTags('payments')\n@Controller('payments')\nexport class PaymentsController {\n  constructor(private paymentService: PaymentsService) {}\n\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Post('/create')\n  createPayment(\n    @Body() payment: BodyChargeDto,\n\n    @CurrentCart() currentCart: Carts\n  ) {\n    let datas = { paymentMethodId: payment.paymentMethodId, cart: currentCart }\n    return this.paymentService.createPayment(datas)\n  }\n\n  @Get()\n  getAllPayments(@Query() datas: Partial) {\n    return this.paymentService.getAllPayments(datas)\n  }\n\n  @Get('/:paymentId')\n  getPaymentById(@Param('paymentId') paymentId: string) {\n    return this.paymentService.isPayment(paymentId)\n  }\n\n  @Get('/user/:email')\n  @UseGuards(AdminGUard)\n  getPaymentByUserEmail(\n    @Param('email') email: string,\n    @Query() filters: Partial\n  ) {\n    let datas = { email, filters }\n    return this.paymentService.getPaymentByUserEmail(datas)\n  }\n\n  @Get('/user/:id')\n  @UseGuards(AdminGUard)\n  getPaymentByUserID(\n    @Param('id') id: string,\n    @Query() filters: Partial\n  ) {\n    let datas = { id, filters }\n    return this.paymentService.getPaymentByUserID(datas)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentsFilters.html":{"url":"interfaces/PaymentsFilters.html","title":"interface - PaymentsFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentsFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/customTypes/all_payments.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            orderBy\n                                        \n                                \n                                \n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orderBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderBy:         OrderBy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderBy\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaymentsFilters {\n  orderBy: OrderBy;\n  sort: string;\n}\n\nexport interface OrderBy {\n  created_at: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nCartsService->PaymentsModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nPaymentsModule -->\n\nDeliveryService->PaymentsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPaymentsModule -->\n\nPrismaService->PaymentsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nPaymentsModule -->\n\nProductsService->PaymentsModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nPaymentsModule -->\n\nStripeService->PaymentsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nPaymentsModule -->\n\nUsersService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payments/payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            PaymentsService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CartsService } from 'src/carts/carts.service'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { StripeService } from 'src/stripe/stripe.service'\nimport { UsersService } from 'src/users/users.service'\nimport { PaymentsController } from './payments.controller'\nimport { PaymentsService } from './payments.service'\n\n@Module({\n  controllers: [PaymentsController],\n  providers: [\n    PaymentsService,\n    PrismaService,\n    CartsService,\n    ProductsService,\n    UsersService,\n    DeliveryService,\n    StripeService,\n  ],\n})\nexport class PaymentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/payments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPayment\n                            \n                            \n                                    Async\n                                getAllPayments\n                            \n                            \n                                    Async\n                                getPaymentByUserEmail\n                            \n                            \n                                    Async\n                                getPaymentByUserID\n                            \n                            \n                                    Async\n                                getPayments\n                            \n                            \n                                    Async\n                                isPayment\n                            \n                            \n                                queryFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, cartService: CartsService, deliveryService: DeliveryService, userService: UsersService, stripe: StripeService)\n                    \n                \n                        \n                            \n                                Defined in src/payments/payments.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deliveryService\n                                                  \n                                                        \n                                                                        DeliveryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripe\n                                                  \n                                                        \n                                                                        StripeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPayment(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllPayments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPayments(datas: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPaymentByUserEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPaymentByUserEmail(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPaymentByUserID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPaymentByUserID(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPayments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPayments(user, filters)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isPayment\n                        \n                    \n                \n            \n            \n                \n                    \n                    isPayment(paymentId)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paymentId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryFilter\n                        \n                    \n                \n            \n            \n                \nqueryFilter(datas: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/payments/payments.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Body,\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common'\nimport { NotFoundError } from 'rxjs'\nimport { CartsService } from 'src/carts/carts.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { UsersService } from 'src/users/users.service'\nimport { newPaymentDTO } from './dtos/create_payment.dto'\nimport { PaymentsFilters } from './customTypes/all_payments'\nimport { PaymentDTO } from './dtos/payment.dto'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { StripeService } from 'src/stripe/stripe.service'\n\n@Injectable()\nexport class PaymentsService {\n  constructor(\n    private prisma: PrismaService,\n    private cartService: CartsService,\n    private deliveryService: DeliveryService,\n    private userService: UsersService,\n    private stripe: StripeService\n  ) {}\n\n  async createPayment(datas) {\n    let { paymentMethodId, cart } = datas\n    // check if, quantity in cart are still availables\n    await this.cartService.checkQuantityInCart(cart.id)\n\n    //check if there is a free delivery\n    const isAffiliatedDelivery = await this.deliveryService.isDelivery(cart.id)\n    if (\n      !isAffiliatedDelivery ||\n      !isAffiliatedDelivery.affiliateUser?.stripeCustomerID\n    ) {\n      throw new ForbiddenException(\n        'Need affiliated delivery, please create delivery First '\n      )\n    } else {\n      // send payment to stripe\n      let data = {\n        paymentMethod: paymentMethodId,\n        amount: isAffiliatedDelivery.total,\n        customerId: isAffiliatedDelivery.affiliateUser.stripeCustomerID,\n      }\n\n      let stripe = await this.stripe.charge(data)\n      // create payment in Bdd\n      // if there is no bill adress, by default use delivery adress\n\n      const newPayment = await this.prisma.payment.create({\n        data: {\n          owner: { connect: { id: isAffiliatedDelivery.affiliateUser.id } },\n          affiliateCart: { connect: { id: cart.id } },\n          affiliateDelivery: { connect: { id: isAffiliatedDelivery.id } },\n        },\n      })\n\n      let cartStatus = await this.prisma.cart.update({\n        where: { id: cart.id },\n        data: { status: 'PAID' },\n      })\n    }\n  }\n\n  queryFilter(datas: Partial) {\n    let orderBy = {}\n    orderBy = { created_at: `asc` }\n    if (datas.sort) {\n      if (datas.sort === 'desc') {\n        orderBy = { created_at: `desc` }\n      }\n    }\n\n    if (datas.total) {\n      if (datas.sort === 'desc') {\n        orderBy = { AffiliateCart: { total: 'desc' } }\n      } else {\n        orderBy = { AffiliateCart: { total: 'asc' } }\n      }\n    }\n\n    return orderBy\n  }\n\n  async getAllPayments(datas: Partial) {\n    let filters = {}\n\n    // sort by date or by total\n    let orderBy = await this.queryFilter(datas)\n\n    let payments = await this.prisma.payment.findMany({\n      include: {\n        owner: {\n          select: {\n            id: true,\n            email: true,\n            lastname: true,\n            adress_Bill: true,\n            adress_Delivery: true,\n          },\n        },\n        affiliateCart: { include: { products: true } },\n      },\n      orderBy: orderBy,\n    })\n    return payments\n  }\n  async isPayment(paymentId) {\n    let payment = await this.prisma.payment.findUnique({\n      where: { id: paymentId },\n      include: {\n        owner: { select: { id: true, email: true } },\n        affiliateCart: { include: { products: true } },\n      },\n    })\n    if (payment) {\n      return payment\n    } else {\n      throw new NotFoundException(`No payment found for ${paymentId}`)\n    }\n  }\n\n  async getPayments(user, filters) {\n    let orderBy = await this.queryFilter(filters)\n\n    let payment = await this.prisma.payment.findMany({\n      where: { ownerId: user.id },\n      include: {\n        owner: {\n          select: {\n            id: true,\n            email: true,\n            lastname: true,\n            adress_Bill: true,\n            adress_Delivery: true,\n          },\n        },\n        affiliateCart: { include: { products: true } },\n      },\n      orderBy: orderBy,\n    })\n    return payment\n  }\n\n  // Route for admin only\n\n  async getPaymentByUserEmail(datas) {\n    let { email, filters } = datas\n\n    let isUser = await this.userService.isUserByEmail(email)\n\n    if (!isUser) {\n      throw new NotFoundException(`No user found for ${email}`)\n    } else {\n      return await this.getPayments(isUser, filters)\n    }\n  }\n\n  async getPaymentByUserID(datas) {\n    let { id, filters } = datas\n\n    let isUser = await this.userService.isUserById(id)\n\n    if (!isUser) {\n      throw new NotFoundException(`No user found for ${id}`)\n    } else {\n      return await this.getPayments(isUser, filters)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PicturesTags.html":{"url":"interfaces/PicturesTags.html","title":"interface - PicturesTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PicturesTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categoriesPicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            colorPicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            genderPicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            morphoPicture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizePicture\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stylePicture\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoriesPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoriesPicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorPicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genderPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genderPicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        morphoPicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        morphoPicture:         ProductMorphology\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductMorphology\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizePicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizePicture:         ProductSizes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductSizes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stylePicture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stylePicture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsDecimal,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { Optional } from '@nestjs/common';\n\nexport class Sustainable {\n  isActive: boolean;\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n}\nexport class CreateProductDto {\n  @IsArray()\n  categories: Array;\n\n  @IsString()\n  ref: string;\n\n  @IsString()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @IsString()\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @IsString()\n  brand: string;\n\n  @IsArray()\n  color: Array;\n\n  @Optional()\n  style: string;\n\n  @IsNotEmpty()\n  sustainable: Sustainable;\n\n  @IsString()\n  DeliveryDate: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsArray()\n  size: Array;\n\n  @IsNotEmpty()\n  quantity_available: ProductSizes;\n\n  @IsArray()\n  pictures: Array;\n}\n\nexport interface ProductSizes {\n  XXS: number;\n  XS: number;\n  S: number;\n  M: number;\n  L: number;\n  XL: number;\n  XXL: number;\n  XXXL: number;\n}\n\nexport enum ProductMorphology {\n  A,\n  V,\n  H,\n  X,\n  O,\n}\n\nexport interface PicturesTags {\n  src: string;\n  stylePicture?: string;\n  morphoPicture?: ProductMorphology;\n  genderPicture?: string;\n  categoriesPicture?: string;\n  colorPicture?: string;\n  sizePicture?: ProductSizes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductSizes.html":{"url":"interfaces/ProductSizes.html","title":"interface - ProductSizes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductSizes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            L\n                                        \n                                \n                                \n                                        \n                                            M\n                                        \n                                \n                                \n                                        \n                                            S\n                                        \n                                \n                                \n                                        \n                                            XL\n                                        \n                                \n                                \n                                        \n                                            XS\n                                        \n                                \n                                \n                                        \n                                            XXL\n                                        \n                                \n                                \n                                        \n                                            XXS\n                                        \n                                \n                                \n                                        \n                                            XXXL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        L\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        L:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        M\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        M:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        S\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        S:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XXL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XXL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XXS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XXS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        XXXL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        XXXL:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsDecimal,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { Optional } from '@nestjs/common';\n\nexport class Sustainable {\n  isActive: boolean;\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n}\nexport class CreateProductDto {\n  @IsArray()\n  categories: Array;\n\n  @IsString()\n  ref: string;\n\n  @IsString()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @IsString()\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @IsString()\n  brand: string;\n\n  @IsArray()\n  color: Array;\n\n  @Optional()\n  style: string;\n\n  @IsNotEmpty()\n  sustainable: Sustainable;\n\n  @IsString()\n  DeliveryDate: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsArray()\n  size: Array;\n\n  @IsNotEmpty()\n  quantity_available: ProductSizes;\n\n  @IsArray()\n  pictures: Array;\n}\n\nexport interface ProductSizes {\n  XXS: number;\n  XS: number;\n  S: number;\n  M: number;\n  L: number;\n  XL: number;\n  XXL: number;\n  XXXL: number;\n}\n\nexport enum ProductMorphology {\n  A,\n  V,\n  H,\n  X,\n  O,\n}\n\nexport interface PicturesTags {\n  src: string;\n  stylePicture?: string;\n  morphoPicture?: ProductMorphology;\n  genderPicture?: string;\n  categoriesPicture?: string;\n  colorPicture?: string;\n  sizePicture?: ProductSizes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProduct\n                            \n                            \n                                deleteManyProducts\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getAllProductsByCategory\n                            \n                            \n                                getProductById\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(createProductData: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateProductDto, description: 'don't forget to add categories, according your path, example possible :', examples: undefined})@Post('/create')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductData\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteManyProducts\n                        \n                    \n                \n            \n            \n                \ndeleteManyProducts(body: FindManyIdsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: FindManyIdsDTO, description: 'Delete many product by once, with array of productIDs', examples: undefined})@Post('deletemany')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                FindManyIdsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProductsByCategory\n                        \n                    \n                \n            \n            \n                \ngetAllProductsByCategory(categories: string[], filters: filtersProductsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: undefined, description: 'Categories of product needed,you can add your path', examples: undefined})@ApiQuery({name: 'Date', type: 'string', enum: Sort, required: false})@Post('/allProductsByCategory')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                filtersProductsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: string, toUpdate: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateProductDto, description: 'send only field to update, for now pictures, color and categories can't be updated', examples: undefined})@Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toUpdate\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Post,\n  Get,\n  Query,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { ProductsService } from './products.service';\nimport { Response } from 'express';\nimport { Product } from '@prisma/client';\nimport { FindManyIdsDTO } from './dtos/find-many.dto';\nimport { ApiBody, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { filtersProductsDTO } from './dtos/filters.dto';\nimport { Sort } from 'src/payments/dtos/payment.dto';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(private productService: ProductsService) {}\n\n  @ApiBody({\n    type: CreateProductDto,\n    description:\n      \"don't forget to add categories, according your path, example possible :\",\n    examples: {\n      categories: {\n        summary: '[vêtement,femmes,teeshirt]',\n        value: {\n          title: 'T-shirt col tunisien manches courtes ',\n          sustainable: {\n            isActive: true,\n            description:\n              'Choisir un produit labellisé « STANDARD 100 by OEKO-TEX®» (appellation assez technique, on vous l’accorde), c’est choisir un textile inoffensif et non irritant pour la peau. Un label indépendant et international de référence qui protège la santé des consommateurs. Sain et responsable à la fois.',\n          },\n          ref: '3743981 / GJY899',\n          color: ['white', 'black', 'red'],\n          description:\n            \"Le T-shirt bi-matière, très féminin avec son empiècement en dentelle. C'est un COUP DE CŒUR de nos clientes. Encolure tunisienne avec patte de boutonnage. \",\n          brand: 'La redoute',\n          DeliveryDate: 'August 1, 2022 23:15:30 GMT+11:00',\n          categories: ['vêtements', 'femme', 'tee-shirt'],\n          price: 12,\n          size: ['S', 'M', 'L'],\n          quantity_available: {\n            XXS: 1,\n            XS: 3,\n            S: 2,\n            M: 4,\n            L: 5,\n            XL: 1,\n            XXL: 6,\n            XXXL: 7,\n          },\n          pictures: [\n            {\n              src: 'https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/girl-926199_1920_aeityg.jpg',\n              stylePicture: 'chill',\n              morphoPicture: 'A',\n              sizePicture: 'S',\n            },\n            {\n              src: 'https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/apparel-162192_1280_k0nq7t.png',\n              stylePicture: 'chill',\n              morphoPicture: 'V',\n              categoriesPicture: 'vêtements',\n              sizePicture: 'M',\n            },\n          ],\n        },\n      },\n    },\n  })\n  @Post('/create')\n  createProduct(@Body() createProductData: CreateProductDto) {\n    return this.productService.createProduct(createProductData);\n  }\n\n  @ApiBody({\n    type: [String],\n    description: 'Categories of product needed,you can add your path',\n    examples: {\n      categories: {\n        value: {\n          categories: ['vêtements', 'femme', 'tee-shirt'],\n        },\n      },\n    },\n  })\n  @ApiQuery({ name: 'Date', type: 'string', enum: Sort, required: false })\n  @Post('/allProductsByCategory')\n  getAllProductsByCategory(\n    @Body() categories: string[],\n    @Query() filters: filtersProductsDTO,\n  ) {\n    let datas = { categories, filters };\n\n    return this.productService.getproducts(datas);\n  }\n\n  @Get('/:id')\n  getProductById(@Param('id') id: string) {\n    return this.productService.isProduct(id);\n  }\n\n  @ApiBody({\n    type: CreateProductDto,\n    description:\n      \"send only field to update, for now pictures, color and categories can't be updated\",\n    examples: {\n      quantityavailable: {\n        value: {\n          quantity_available: {\n            XXS: 20,\n          },\n        },\n      },\n      sustainable: {\n        value: {\n          sustainable: true,\n        },\n      },\n    },\n  })\n  @Patch('/:id')\n  updateProduct(\n    @Param('id') id: string,\n    @Body() toUpdate: Partial,\n  ) {\n    return this.productService.updateProducts(id, toUpdate);\n  }\n\n  @Delete('/:id')\n  deleteProduct(@Param('id') id: string) {\n    return this.productService.deleteProduct(id);\n  }\n\n  @ApiBody({\n    type: FindManyIdsDTO,\n    description: 'Delete many product by once, with array of productIDs',\n    examples: {\n      ProductIdsArray: {\n        value: {\n          ids: [\n            '31c9ed5e-4849-4370-9843-de5251359fab',\n            'ec384093-68b6-4bf9-87b4-09976fc1d5e4',\n          ],\n        },\n      },\n    },\n  })\n  @Post('deletemany')\n  deleteManyProducts(@Body() body: FindManyIdsDTO) {\n    return this.productService.deleteManyProducts(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\n\n@Module({\n  controllers: [ProductsController],\n  providers: [ProductsService, PrismaService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                deleteManyProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getproducts\n                            \n                            \n                                    Async\n                                isManyProduct\n                            \n                            \n                                    Async\n                                isProduct\n                            \n                            \n                                    Async\n                                updateProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(createProductData)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteManyProducts\n                        \n                    \n                \n            \n            \n                \ndeleteManyProducts(body: FindManyIdsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                FindManyIdsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getproducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getproducts(datas)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isManyProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isManyProduct(body: FindManyIdsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                FindManyIdsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProducts(id: string, toUpdate: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toUpdate\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { Product, Size } from '@prisma/client'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { CreateProductDto } from './dtos/create-product.dto'\nimport { FindManyIdsDTO } from './dtos/find-many.dto'\n\n@Injectable()\nexport class ProductsService {\n  constructor(private prisma: PrismaService) {}\n\n  async createProduct(createProductData) {\n    let {\n      categories,\n      ref,\n      title,\n      description,\n      brand,\n      DeliveryDate,\n      price,\n      color,\n      size,\n      quantity_available,\n      pictures,\n    } = createProductData\n    // let { XXS, XS, S, M, L, XL, XXL } = quantity_available;\n    let XXS = 0\n    let XS = 0\n    let S = 0\n    let M = 0\n    let L = 0\n    let XL = 0\n    let XXL = 0\n\n    if (quantity_available.XXS) {\n      XXS = quantity_available.XXS\n    }\n    if (quantity_available.XS) {\n      XS = quantity_available.XS\n    }\n    if (quantity_available.S) {\n      S = quantity_available.S\n    }\n    if (quantity_available.M) {\n      M = quantity_available.M\n    }\n    if (quantity_available.L) {\n      L = quantity_available.L\n    }\n    if (quantity_available.XL) {\n      XL = quantity_available.XL\n    }\n    if (quantity_available.XXL) {\n      XXS = quantity_available.XXL\n    }\n\n    let sustainable = false\n    let sustainableDescr = ''\n    let style = ''\n\n    if (createProductData.sustainable?.isActive) {\n      sustainable = Boolean(createProductData.sustainable.isActive)\n      sustainableDescr = createProductData.sustainable.description\n    }\n\n    if (createProductData.style) {\n      style = createProductData.style\n    }\n\n    const ProductSustainable = await this.prisma.sustainable.create({\n      data: { isActive: sustainable, description: sustainableDescr },\n    })\n\n    const newProduct = {\n      title: title,\n      ref: ref,\n      color: color,\n      description: description,\n      brand: brand,\n      DeliveryDate: new Date(DeliveryDate),\n      categories: categories,\n      price: parseFloat(price),\n      size: size,\n      quantity_available: {\n        create: {\n          XXS: XXS,\n          XS: XS,\n          S: S,\n          M: M,\n          L: L,\n          XL: XL,\n          XXL: XXL,\n        },\n      },\n      pictures: { createMany: { data: pictures } },\n\n      sustainable: { connect: { id: ProductSustainable.id } },\n      style: '',\n    }\n\n    const product = await this.prisma.product.create({\n      include: { sustainable: true },\n      data: newProduct,\n    })\n\n    return product\n  }\n\n  async getproducts(datas) {\n    let { categories, filters } = datas\n    let orderBy = {}\n\n    orderBy = { created_at: `desc` }\n    if (filters.sortDate) {\n      if (filters.sortDate === 'asc') {\n        orderBy = { created_at: `asc` }\n      }\n    }\n\n    if (filters.priceSort) {\n      if (filters.priceSort === 'desc') {\n        orderBy = { price: 'desc' }\n      } else {\n        orderBy = { price: 'asc' }\n      }\n    }\n\n    if (filters.popularity) {\n      if (filters.popularity === 'asc') {\n        orderBy = { rating_avg: 'asc' }\n      } else {\n        orderBy = { rating_avg: 'desc' }\n      }\n    }\n    let take = 12\n    let skip = 0\n    if (filters.skip) {\n      skip = filters.skip\n    }\n\n    if (filters.take) {\n      take = filters.take\n    }\n\n    const search = await this.prisma.product.findMany({\n      where: { categories: { hasEvery: categories.categories } },\n      orderBy: orderBy,\n      take: take,\n      skip: skip,\n    })\n\n    const count = await this.prisma.product.aggregate({\n      where: { categories: { hasEvery: categories.categories } },\n      orderBy: orderBy,\n      _count: true,\n    })\n\n    return { count: count, products: search }\n  }\n\n  async isProduct(id: string) {\n    const product = await this.prisma.product.findUnique({ where: { id: id } })\n    return product\n  }\n\n  async isManyProduct(body: FindManyIdsDTO) {\n    let arr = body.ids\n    const product = await this.prisma.product.findMany({\n      where: {\n        id: { in: arr },\n      },\n    })\n\n    return product\n  }\n\n  async updateProducts(id: string, toUpdate: Partial) {\n    const productToUpdate = await this.isProduct(id)\n    if (!productToUpdate) {\n      throw new NotFoundException(`Product ${id} not found`)\n    } else {\n      let data = {}\n      data = { ...data, update_at: new Date() }\n      if (toUpdate.title) {\n        data = { ...data, title: toUpdate.title }\n      }\n\n      if (toUpdate.ref) {\n        data = { ...data, ref: toUpdate.ref }\n      }\n\n      if (toUpdate.brand) {\n        data = { ...data, brand: toUpdate.brand }\n      }\n\n      if (toUpdate.description) {\n        data = { ...data, description: toUpdate.description }\n      }\n      if (toUpdate.price) {\n        data = { ...data, price: parseFloat(toUpdate.description) }\n      }\n\n      if (toUpdate.DeliveryDate) {\n        data = { ...data, DeliveryDate: new Date(toUpdate.DeliveryDate) }\n      }\n\n      if (toUpdate.size) {\n        data = { ...data, size: toUpdate.size }\n      }\n\n      if (toUpdate.sustainable) {\n        let sustainable = Boolean(toUpdate.sustainable)\n        data = {\n          ...data,\n          sustainable: { update: { isActive: sustainable } },\n        }\n      }\n\n      if (toUpdate.quantity_available) {\n        const quantity = toUpdate.quantity_available\n        const { XXS, XS, S, M, L, XL, XXL, XXXL } = quantity\n        data = {\n          ...data,\n\n          quantity_available: {\n            update: {\n              XXS: XXS,\n              XS: XS,\n              S: S,\n              M: M,\n              L: L,\n              XL: XL,\n              XXL: XXL,\n              XXXL: XXXL,\n            },\n          },\n        }\n      }\n\n      return await this.prisma.product.update({\n        where: {\n          id: id,\n        },\n        data: data,\n      })\n    }\n  }\n\n  async deleteProduct(id: string) {\n    const productToDelete = await this.isProduct(id)\n    if (!productToDelete) {\n      throw new NotFoundException(`product ${id} not found`)\n    }\n    return this.prisma.product.delete({ where: { id: id } })\n  }\n\n  deleteManyProducts(body: FindManyIdsDTO) {\n    const ProductsToDelete = this.isManyProduct(body)\n    if (!ProductsToDelete) {\n      throw new NotFoundException('One or more  product(s) not found')\n    } else\n      return this.prisma.product.deleteMany({\n        where: { id: { in: body.ids } },\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuantityShortDTO.html":{"url":"classes/QuantityShortDTO.html","title":"class - QuantityShortDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuantityShortDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/quantity_short.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableQuantity\n                            \n                            \n                                cartId\n                            \n                            \n                                isProductOnCartID\n                            \n                            \n                                productId\n                            \n                            \n                                quantityShort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'quantity available by size'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/quantity_short.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/quantity_short.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProductOnCartID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ProductId from intermediary table of the products in Cart, number expected because of auto-increment'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/quantity_short.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'productID that we want to know if the supply is adequate/sufficient'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/quantity_short.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantityShort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'difference between quantity asked for and quantity available'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/quantity_short.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class QuantityShortDTO {\n  cartId: string;\n\n  @ApiProperty({\n    description:\n      'ProductId from intermediary table of the products in Cart, number expected because of auto-increment',\n  })\n  @IsNumber()\n  isProductOnCartID: number;\n\n  @ApiProperty({\n    description:\n      'productID that we want to know if the supply is adequate/sufficient',\n  })\n  @IsString()\n  productId: string;\n\n  @ApiProperty({ description: 'quantity available by size' })\n  @IsNumber()\n  availableQuantity: number;\n\n  @ApiProperty({\n    description: 'difference between quantity asked for and quantity available',\n  })\n  @IsNumber()\n  quantityShort: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/middlewares/current-cart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            currentCart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentCart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentCart:         Carts\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Carts\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common'\nimport { NextFunction, Request, Response } from 'express'\nimport { UsersService } from '../../users/users.service'\n\nimport { UserDto } from '../../users/dtos/user.dto'\nimport { Carts } from 'src/carts/dtos/UserCart.dto'\nimport { CartsService } from 'src/carts/carts.service'\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentCart?: Carts\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentCartMiddleware implements NestMiddleware {\n  constructor(private cartService: CartsService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { cartId } = req.session || {}\n\n    if (cartId) {\n      const cart = await this.cartService.isCart(cartId)\n      req.currentCart = cart\n    }\n    next()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request-1.html":{"url":"interfaces/Request-1.html","title":"interface - Request-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/middlewares/current-user.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            currentUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentUser:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common'\nimport { NextFunction, Request, Response } from 'express'\nimport { UserDto } from '../dtos/user.dto'\nimport { UsersService } from '../users.service'\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      currentUser?: UserDto\n    }\n  }\n}\n\n@Injectable()\nexport class CurrentUserMiddleware implements NestMiddleware {\n  constructor(private userService: UsersService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const { userId } = req.session || {}\n\n    if (userId) {\n      const user = await this.userService.isUserById(userId)\n      req.currentUser = user\n    }\n    next()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReviewsController.html":{"url":"controllers/ReviewsController.html","title":"controller - ReviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createReview\n                            \n                            \n                                deleteReview\n                            \n                            \n                                getratingByProduct\n                            \n                            \n                                getreviewsByProduct\n                            \n                            \n                                updateReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createReview\n                        \n                    \n                \n            \n            \n                \ncreateReview(createReviewData: CreateReviewDto, productId: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: CreateReviewDto, examples: undefined})@UseGuards(JwtAuthGuard)@Post('/create/:productId')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewData\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteReview\n                        \n                    \n                \n            \n            \n                \ndeleteReview(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:reviewId')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getratingByProduct\n                        \n                    \n                \n            \n            \n                \ngetratingByProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/ratings/:productId')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getreviewsByProduct\n                        \n                    \n                \n            \n            \n                \ngetreviewsByProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:productId')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateReview\n                        \n                    \n                \n            \n            \n                \nupdateReview(id: string, updateData: UpdateReviewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: UpdateReviewDto, description: 'Only send field to update, all field can be update except ID'})@Patch('/:reviewId')\n                \n            \n\n            \n                \n                    Defined in src/reviews/reviews.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { AuthGuard } from 'guards/auth.guard';\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard';\nimport { CurrentUser } from 'src/users/decorators/current-user.decorator';\n\nimport { CreateReviewDto } from './dtos/create-review.dto';\nimport { UpdateReviewDto } from './dtos/update-review.dto';\nimport { ReviewsService } from './reviews.service';\n\n@ApiTags('reviews')\n@Controller('reviews')\nexport class ReviewsController {\n  constructor(private reviewService: ReviewsService) {}\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: CreateReviewDto,\n    examples: {\n      review: {\n        value: {\n          title: 'Couleur peu conforme',\n          description: 'Couleur peu conforme aux photos, plutôt terne ',\n          rating_quality: 3,\n          rating_style: 2,\n          rating_size: 1,\n          pictures: [\n            {\n              src: 'https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/girl-926199_1920_aeityg.jpg',\n            },\n            {\n              src: 'https://res.cloudinary.com/dyj84szrx/image/upload/v1655884761/teeshirt/apparel-162192_1280_k0nq7t.png',\n            },\n          ],\n        },\n      },\n    },\n  })\n  @UseGuards(JwtAuthGuard)\n  @Post('/create/:productId')\n  createReview(\n    @Body() createReviewData: CreateReviewDto,\n    @Param('productId') productId: string,\n    @CurrentUser() user: User,\n  ) {\n    let userId = user.id;\n    let data = { createReviewData, productId, userId };\n    return this.reviewService.createReview(data);\n  }\n\n  @Get('/:productId')\n  getreviewsByProduct(@Param('productId') id: string) {\n    return this.reviewService.getreviewsByProduct(id);\n  }\n\n  @ApiBody({\n    type: UpdateReviewDto,\n    description: 'Only send field to update, all field can be update except ID',\n  })\n  @Patch('/:reviewId')\n  updateReview(\n    @Param('reviewId') id: string,\n    @Body() updateData: UpdateReviewDto,\n  ) {\n    return this.reviewService.updateReview(id, updateData);\n  }\n\n  @Delete('/:reviewId')\n  deleteReview(@Param('reviewId') id: string) {\n    return this.reviewService.deleteReview(id);\n  }\n  @Get('/ratings/:productId')\n  getratingByProduct(@Param('productId') id: string) {\n    return this.reviewService.getratingByProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewsModule.html":{"url":"modules/ReviewsModule.html","title":"module - ReviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nReviewsModule\n\nReviewsModule\n\nReviewsModule -->\n\nPrismaService->ReviewsModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ReviewsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReviewsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ReviewsController } from './reviews.controller';\nimport { ReviewsService } from './reviews.service';\n\n@Module({\n  controllers: [ReviewsController],\n  providers: [ReviewsService, PrismaService],\n})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewsService.html":{"url":"injectables/ReviewsService.html","title":"injectable - ReviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createReview\n                            \n                            \n                                    Async\n                                deleteReview\n                            \n                            \n                                    Async\n                                getratingByProduct\n                            \n                            \n                                    Async\n                                getreviewsByProduct\n                            \n                            \n                                    Async\n                                isProduct\n                            \n                            \n                                    Async\n                                isReview\n                            \n                            \n                                    Async\n                                updateRatingOnProduct\n                            \n                            \n                                    Async\n                                updateReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/reviews/reviews.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createReview(data)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReview(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getratingByProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getratingByProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getreviewsByProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getreviewsByProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    isReview(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRatingOnProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRatingOnProduct(data)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReview(id: string, updateData: UpdateReviewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reviews/reviews.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { PrismaService } from 'src/prisma/prisma.service'\n\nimport { newReview } from './customTypes/newreview.type'\nimport { CreateReviewDto } from './dtos/create-review.dto'\nimport { UpdateReviewDto } from './dtos/update-review.dto'\n\n@Injectable()\nexport class ReviewsService {\n  constructor(private prisma: PrismaService) {}\n\n  async isProduct(id: string) {\n    return await this.prisma.product.findUnique({ where: { id: id } })\n  }\n\n  async isReview(id: string) {\n    return await this.prisma.review.findUnique({\n      where: { id: id },\n    })\n  }\n\n  async createReview(data) {\n    let { createReviewData, productId, userId } = data\n    let { title, description, rating_quality, rating_style, rating_size } =\n      createReviewData\n\n    let rating_avg = (rating_quality + rating_style + rating_size) / 3\n\n    const product = await this.isProduct(productId)\n    if (!product) {\n      throw new Error('Product not found')\n    } else {\n      let rating = await this.getratingByProduct(product.id)\n      let data = {\n        productId: product.id,\n        rating_avg: rating,\n      }\n\n      await this.updateRatingOnProduct(data)\n\n      const newReview: newReview = {\n        title: title,\n        description: description,\n        rating_avg: parseFloat(rating_avg.toFixed(2)),\n        rating_quality: Number(rating_quality),\n        rating_style: Number(rating_style),\n        rating_size: Number(rating_size),\n        products: { connect: { id: productId } },\n        owner: { connect: { id: userId } },\n      }\n      if (createReviewData.pictures) {\n        newReview.pictures = {\n          createMany: { data: createReviewData.pictures },\n        }\n      }\n\n      const review = await this.prisma.review.create({\n        data: newReview,\n      })\n\n      return review\n    }\n  }\n\n  async getreviewsByProduct(id: string) {\n    const product = this.isProduct(id)\n    if (!product) {\n      throw new NotFoundException('Product not found')\n    } else {\n      const reviews = await this.prisma.review.findMany({\n        where: { productId: id },\n        include: { pictures: { select: { src: true } } },\n      })\n      if (!reviews) {\n        throw new Error('Reviews not found')\n      } else {\n        return reviews\n      }\n    }\n  }\n\n  async getratingByProduct(id: string) {\n    const product = this.isProduct(id)\n\n    if (!product) {\n      throw new NotFoundException('Product not found')\n    } else {\n      const reviews = await this.prisma.review.findMany({\n        where: { productId: id },\n        select: { rating_avg: true },\n      })\n      if (!reviews) {\n        throw new NotFoundException('Reviews not found')\n      } else {\n        let total = 0.0\n\n        if (reviews.length === 0) {\n          return 0\n        } else {\n          reviews.map((rating) => {\n            total = total + Number(rating.rating_avg)\n          })\n\n          let avg = total / reviews.length\n          return avg\n        }\n      }\n    }\n  }\n\n  async updateReview(id: string, updateData: UpdateReviewDto) {\n    let data: {}\n    data = { ...data, update_at: new Date() }\n\n    const reviewToUpdate = this.isReview(id)\n\n    if (!reviewToUpdate) {\n      throw new Error('review not found')\n    } else {\n      if (updateData.title) {\n        data = { ...data, title: updateData.title }\n      }\n      if (updateData.description) {\n        data = { ...data, description: updateData.description }\n      }\n      if (updateData.useful) {\n        data = { ...data, useful: updateData.useful }\n      }\n      if (updateData.rating_quality) {\n        data = { ...data, rating_quality: updateData.rating_quality }\n      }\n      if (updateData.rating_style) {\n        data = { ...data, rating_style: updateData.rating_style }\n      }\n      if (updateData.rating_size) {\n        data = { ...data, rating_size: updateData.rating_size }\n      }\n\n      const reviewToUpdate = await this.prisma.review.update({\n        where: {\n          id: id,\n        },\n        data: data,\n      })\n\n      if (\n        updateData.rating_size ||\n        updateData.rating_style ||\n        updateData.rating_quality\n      ) {\n        let rating_avg =\n          (reviewToUpdate.rating_quality +\n            reviewToUpdate.rating_style +\n            reviewToUpdate.rating_size) /\n          3\n\n        const newReview = await this.prisma.review.update({\n          where: {\n            id: id,\n          },\n          data: { rating_avg: rating_avg },\n        })\n\n        let rating = await this.getratingByProduct(reviewToUpdate.productId)\n\n        let data = {\n          productId: reviewToUpdate.productId,\n          rating_avg: rating,\n        }\n\n        await this.updateRatingOnProduct(data)\n\n        return newReview\n      } else {\n        return reviewToUpdate\n      }\n    }\n  }\n\n  async deleteReview(id: string) {\n    const reviewToDelete = await this.isReview(id)\n\n    if (!reviewToDelete) {\n      throw new Error('Review not found')\n    } else {\n      return this.prisma.review.delete({ where: { id: id } })\n    }\n  }\n\n  async updateRatingOnProduct(data) {\n    let { productId, rating_avg } = data\n    try {\n      await this.prisma.product.update({\n        where: { id: productId },\n        data: { rating_avg: rating_avg },\n      })\n    } catch (error) {\n      console.log('error update rating product', error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SerializeInterceptor.html":{"url":"classes/SerializeInterceptor.html","title":"class - SerializeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SerializeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            interceptors/serialize.interceptors.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dto: any)\n                    \n                \n                        \n                            \n                                Defined in interceptors/serialize.interceptors.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, handler: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in interceptors/serialize.interceptors.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  UseInterceptors,\n  NestInterceptor,\n  ExecutionContext,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { plainToClass } from 'class-transformer';\nimport { plainToInstance } from 'class-transformer';\n\ninterface ClassConstructor {\n  new (...args: any[]): {};\n}\n\nexport function Serialize(dto: ClassConstructor) {\n  return UseInterceptors(new SerializeInterceptor(dto));\n}\n\nexport class SerializeInterceptor implements NestInterceptor {\n  constructor(private dto: any) {}\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    // run something before a request is handled\n\n    return handler.handle().pipe(\n      map((data: any) => {\n        return plainToInstance(this.dto, data, {\n          excludeExtraneousValues: true,\n        });\n      }),\n    );\n    // run after request handler }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StripeController.html":{"url":"controllers/StripeController.html","title":"controller - StripeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StripeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe/stripe.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stripe\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  ForbiddenException,\n  GoneException,\n  Post,\n  Req,\n  Request,\n  Session,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiBasicAuth, ApiBearerAuth } from '@nestjs/swagger'\nimport { CurrentUser } from 'decorators/profile-user.decorator'\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\nimport { CartsService } from 'src/carts/carts.service'\nimport { CurrentCart } from 'src/carts/decorators/current-cart'\nimport { CreateCartDTO } from 'src/carts/dtos/create_cart.dto'\nimport { Carts } from 'src/carts/dtos/UserCart.dto'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { UserDto } from 'src/users/dtos/user.dto'\nimport { UsersService } from 'src/users/users.service'\nimport CreateChargeDto, { BodyChargeDto } from './dtos/BodyCharge.dto'\nimport DataChargeDto from './dtos/charge_data.dto'\nimport { StripeService } from './stripe.service'\n\n@Controller('stripe')\nexport class StripeController {\n  constructor(\n    private readonly stripeService: StripeService,\n    private userService: UsersService,\n    private prisma: PrismaService,\n    private deliveryService: DeliveryService,\n    private cartService: CartsService\n  ) {}\n\n  //   @Post()\n  //   @ApiBearerAuth()\n  //   @UseGuards(JwtAuthGuard)\n  //   async createCharge(\n  //     @Body() charge: BodyChargeDto,\n  //     @Request() req,\n\n  //     @CurrentCart() currentCart: Carts\n  //   ) {\n  //     // check if, quantity in cart are still availables\n  //     await this.cartService.checkQuantityInCart(currentCart.id)\n\n  //     //check if there is a free delivery\n  //     const isAffiliatedDelivery = await this.deliveryService.isDelivery(\n  //       currentCart.id\n  //     )\n  //     if (\n  //       !isAffiliatedDelivery ||\n  //       !isAffiliatedDelivery.affiliateUser?.stripeCustomerID\n  //     ) {\n  //       throw new ForbiddenException(\n  //         'Need affiliated delivery, please create delivery First '\n  //       )\n  //     } else {\n  //       let data = {\n  //         paymentMethod: charge.paymentMethodId,\n  //         amount: isAffiliatedDelivery.total,\n  //         customerId: isAffiliatedDelivery.affiliateUser.stripeCustomerID,\n  //       }\n\n  //       return await this.stripeService.charge(data)\n  //     }\n  //}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeModule.html":{"url":"modules/StripeModule.html","title":"module - StripeModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StripeModule\n\n\n\ncluster_StripeModule_providers\n\n\n\n\nCartsService\n\nCartsService\n\n\n\nStripeModule\n\nStripeModule\n\nStripeModule -->\n\nCartsService->StripeModule\n\n\n\nStripeModule -->\n\nCartsService->StripeModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nStripeModule -->\n\nDeliveryService->StripeModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nStripeModule -->\n\nPrismaService->StripeModule\n\n\n\nStripeModule -->\n\nPrismaService->StripeModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nStripeModule -->\n\nProductsService->StripeModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nStripeModule -->\n\nStripeService->StripeModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nStripeModule -->\n\nUsersService->StripeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stripe/stripe.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartsService\n                        \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StripeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { CartsService } from 'src/carts/carts.service'\nimport { DeliveryModule } from 'src/delivery/delivery.module'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { ProductsService } from 'src/products/products.service'\nimport { UsersService } from 'src/users/users.service'\nimport { StripeController } from './stripe.controller'\nimport { StripeService } from './stripe.service'\n\n@Module({\n  controllers: [StripeController],\n  providers: [\n    StripeService,\n    UsersService,\n    PrismaService,\n    CartsService,\n    PrismaService,\n    CartsService,\n    ProductsService,\n    DeliveryService,\n  ],\n})\nexport class StripeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StripeService.html":{"url":"injectables/StripeService.html","title":"injectable - StripeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stripe/stripe.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stripe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                charge\n                            \n                            \n                                    Async\n                                createStripeCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/stripe/stripe.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        charge\n                        \n                    \n                \n            \n            \n                \n                    \n                    charge(data)\n                \n            \n\n\n            \n                \n                    Defined in src/stripe/stripe.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createStripeCustomer\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStripeCustomer(name: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/stripe/stripe.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stripe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stripe\n\n                    \n                \n                    \n                        \n                                Defined in src/stripe/stripe.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\nimport { UsersService } from 'src/users/users.service'\nimport Stripe from 'stripe'\n\n@Injectable()\nexport class StripeService {\n  private stripe: Stripe\n  constructor(private configService: ConfigService) {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n      apiVersion: '2020-08-27',\n    })\n  }\n\n  async createStripeCustomer(name: string, email: string) {\n    return this.stripe.customers.create({\n      name,\n      email,\n    })\n  }\n\n  public async charge(data) {\n    let { paymentMethod, amount, customerId } = data\n    console.log('data', data)\n\n    // return this.stripe.paymentIntents.create({\n    //   amount,\n    //   customer: customerId,\n    //   payment_method: paymentMethodId,\n    //   currency: process.env.STRIPE_CURRENCY,\n    //   confirm: true,\n    // })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sustainable.html":{"url":"classes/Sustainable.html","title":"class - Sustainable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sustainable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(300, {message: 'Description is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsDecimal,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsNumberString,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\nimport { Optional } from '@nestjs/common';\n\nexport class Sustainable {\n  isActive: boolean;\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n}\nexport class CreateProductDto {\n  @IsArray()\n  categories: Array;\n\n  @IsString()\n  ref: string;\n\n  @IsString()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @IsString()\n  @MaxLength(300, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @IsString()\n  brand: string;\n\n  @IsArray()\n  color: Array;\n\n  @Optional()\n  style: string;\n\n  @IsNotEmpty()\n  sustainable: Sustainable;\n\n  @IsString()\n  DeliveryDate: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsArray()\n  size: Array;\n\n  @IsNotEmpty()\n  quantity_available: ProductSizes;\n\n  @IsArray()\n  pictures: Array;\n}\n\nexport interface ProductSizes {\n  XXS: number;\n  XS: number;\n  S: number;\n  M: number;\n  L: number;\n  XL: number;\n  XXL: number;\n  XXXL: number;\n}\n\nexport enum ProductMorphology {\n  A,\n  V,\n  H,\n  X,\n  O,\n}\n\nexport interface PicturesTags {\n  src: string;\n  stylePicture?: string;\n  morphoPicture?: ProductMorphology;\n  genderPicture?: string;\n  categoriesPicture?: string;\n  colorPicture?: string;\n  sizePicture?: ProductSizes;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenDto.html":{"url":"classes/TokenDto.html","title":"class - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional } from 'class-validator';\nimport { Adress } from './create-user.dto';\nimport { Morphology } from '@prisma/client';\nimport { Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TokenDto {\n  @ApiProperty()\n  @Expose()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Total_cartDTO.html":{"url":"classes/Total_cartDTO.html","title":"class - Total_cartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Total_cartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/total_cart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartId\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/total_cart.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/total_cart.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class Total_cartDTO {\n  @ApiProperty()\n  @IsNumber()\n  total: number;\n\n  @ApiProperty()\n  @IsString()\n  cartId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReviewDto.html":{"url":"classes/UpdateReviewDto.html","title":"class - UpdateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/dtos/update-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                pictures\n                            \n                            \n                                rating_quality\n                            \n                            \n                                rating_size\n                            \n                            \n                                rating_style\n                            \n                            \n                                title\n                            \n                            \n                                useful\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({maxLength: 160})@IsString()@IsOptional()@MaxLength(160, {message: 'Description is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only Int number between 0 and 5'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only Int number between 0 and 5'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating_style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only Int number between 0 and 5'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({maxLength: 50})@IsString()@IsOptional()@MaxLength(50, {message: 'Title is too long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useful\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only Int number between 0 and 5'})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reviews/dtos/update-review.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsNumber,\n  IsOptional,\n  IsString,\n  MaxLength,\n} from 'class-validator';\n\nexport class UpdateReviewDto {\n  @ApiPropertyOptional({ maxLength: 50 })\n  @IsString()\n  @IsOptional()\n  @MaxLength(50, {\n    message: 'Title is too long',\n  })\n  title: string;\n\n  @ApiPropertyOptional({ maxLength: 160 })\n  @IsString()\n  @IsOptional()\n  @MaxLength(160, {\n    message: 'Description is too long',\n  })\n  description: string;\n\n  @ApiPropertyOptional({ description: 'only Int number between 0 and 5' })\n  @IsOptional()\n  @IsNumber()\n  rating_quality: number;\n\n  @ApiPropertyOptional({ description: 'only Int number between 0 and 5' })\n  @IsOptional()\n  @IsNumber()\n  rating_style: number;\n\n  @ApiPropertyOptional({ description: 'only Int number between 0 and 5' })\n  @IsOptional()\n  @IsNumber()\n  rating_size: number;\n\n  @ApiPropertyOptional({ description: 'only Int number between 0 and 5' })\n  @IsOptional()\n  @IsBoolean()\n  useful: boolean;\n\n  @ApiPropertyOptional({ type: [String] })\n  @IsOptional()\n  pictures: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCartDTO.html":{"url":"classes/UserCartDTO.html","title":"class - UserCartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/UserCart.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carts\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Carts[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/UserCart.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/UserCart.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/UserCart.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Decimal } from '@prisma/client/runtime';\nimport { Expose } from 'class-transformer';\n\nexport class UserCartDTO {\n  @ApiProperty()\n  @Expose()\n  id: string;\n\n  @ApiProperty()\n  @Expose()\n  email: string;\n\n  @ApiProperty({ type: [String] })\n  @Expose()\n  carts: Carts[];\n}\n\nexport interface Carts {\n  id: string;\n  created_at: Date;\n  update_at: Date;\n  status: string;\n  delivery_fees: Decimal;\n  total: Decimal;\n  delivery_date: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admin\n                            \n                            \n                                    Optional\n                                adress_Bill\n                            \n                            \n                                    Optional\n                                adress_Delivery\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                morphology\n                            \n                            \n                                size\n                            \n                            \n                                token\n                            \n                            \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        adress_Bill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdressDelivery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        adress_Delivery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdressDelivery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        morphology\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Morphology\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional } from 'class-validator'\nimport { Adress } from './create-user.dto'\nimport { AdressDelivery, Morphology } from '@prisma/client'\nimport { Expose } from 'class-transformer'\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger'\n\nexport class UserDto {\n  @ApiProperty()\n  @Expose()\n  id: string\n\n  @ApiProperty()\n  @Expose()\n  lastname: string\n\n  @ApiProperty()\n  @Expose()\n  email: string\n\n  @ApiProperty()\n  @Expose()\n  @IsOptional()\n  morphology: Morphology\n\n  @ApiProperty()\n  @Expose()\n  @IsOptional()\n  size: string\n\n  @ApiProperty()\n  @Expose()\n  @IsOptional()\n  weight: string\n\n  @Expose()\n  @ApiPropertyOptional()\n  @IsOptional()\n  admin: boolean\n\n  @Expose()\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Delivery?: AdressDelivery\n\n  @Expose()\n  @IsOptional()\n  token: string\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  adress_Bill?: AdressDelivery\n\n  // @ApiPropertyOptional()\n  // @IsOptional()\n  // stripeCustomerID?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                signout\n                            \n                            \n                                signUp\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser(user: UserDto, session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/currentUser')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@ApiBearerAuth()@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signout\n                        \n                    \n                \n            \n            \n                \n                    \n                    signout(session: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/signout')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(createUserData: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CreateUserDto, description: 'only send field to update, all fields can be updated except pictures for now', examples: undefined})@Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: UserDto, toUpdate: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiBody({type: UserDto, description: 'only send field to update, all fields can be updated except pictures for now', examples: undefined})@Patch()@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toUpdate\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Patch,\n  Post,\n  Session,\n  UseGuards,\n} from '@nestjs/common'\nimport { AuthGuard } from 'guards/auth.guard'\nimport { JwtAuthGuard } from 'guards/jwt-auth.guard'\n\n//\nimport { Serialize } from 'interceptors/serialize.interceptors'\nimport { CartsService } from 'src/carts/carts.service'\n\nimport { AuthService } from '../auth/auth.service'\n\nimport { CurrentUser } from './decorators/current-user.decorator'\nimport { CreateUserDto } from './dtos/create-user.dto'\nimport { UserDto } from './dtos/user.dto'\nimport { UsersService } from './users.service'\n\nimport { User } from '@prisma/client'\nimport { Request } from 'express'\nimport { TokenDto } from './dtos/token.dto'\nimport { LocalAuthGuard } from 'guards/local-auth.guard'\nimport { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger'\n\n@ApiTags('users')\n@Serialize(UserDto)\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private userService: UsersService,\n    private authService: AuthService\n  ) {}\n\n  @ApiBody({\n    type: CreateUserDto,\n    description:\n      'only send field to update, all fields can be updated except pictures for now',\n    examples: {\n      user: {\n        value: {\n          email: 'nestor@test.fr',\n          password: 'azerty64',\n          firstname: 'fanny',\n          lastname: 'martin',\n          adress_Delivery: {\n            number: 24,\n            street: 'rue du port',\n            postcode: 59000,\n            city: 'Lille',\n            country: 'France',\n          },\n          morphology: 'X',\n          size: '173cm',\n          weight: '58kg',\n        },\n      },\n    },\n  })\n  @Post('/signup')\n  signUp(@Body() createUserData: CreateUserDto) {\n    return this.authService.signUp(createUserData)\n  }\n\n  @Get('/signout')\n  async signout(@Session() session: any) {\n    session.userId = null\n  }\n\n  @ApiBearerAuth()\n  @Get('/currentUser')\n  @UseGuards(JwtAuthGuard)\n  currentUser(@CurrentUser() user: UserDto, @Session() session: any) {\n    return user\n  }\n\n  @ApiBearerAuth()\n  @ApiBody({\n    type: UserDto,\n    description:\n      'only send field to update, all fields can be updated except pictures for now',\n    examples: {\n      toUpdate: {\n        value: {\n          email: 'nestor2@test.fr',\n          size: '160cm',\n          morphology: 'A',\n        },\n      },\n    },\n  })\n  @Patch()\n  @UseGuards(JwtAuthGuard)\n  updateUser(@CurrentUser() user: UserDto, @Body() toUpdate: Partial) {\n    return this.userService.updateUser(user, toUpdate)\n  }\n\n  @Delete()\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  deleteUser(@CurrentUser() user: UserDto) {\n    return this.userService.DeleteUser(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nUsersModule -->\n\nCartsService->UsersModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nUsersModule -->\n\nDeliveryService->UsersModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nUsersModule -->\n\nProductsService->UsersModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nUsersModule -->\n\nStripeService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CartsService\n                        \n                        \n                            DeliveryService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ProductsService\n                        \n                        \n                            StripeService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common'\nimport { JwtService } from '@nestjs/jwt'\nimport { CartsService } from 'src/carts/carts.service'\nimport { DeliveryService } from 'src/delivery/delivery.service'\nimport { PrismaService } from 'src/prisma/prisma.service'\n\nimport { ProductsService } from 'src/products/products.service'\nimport { StripeService } from 'src/stripe/stripe.service'\n\nimport { AuthService } from '../auth/auth.service'\nimport { CurrentUserMiddleware } from './middlewares/current-user.middleware'\n\nimport { UsersController } from './users.controller'\nimport { UsersService } from './users.service'\n\n@Module({\n  controllers: [UsersController],\n  providers: [\n    UsersService,\n    PrismaService,\n    AuthService,\n    CartsService,\n    ProductsService,\n    JwtService,\n    StripeService,\n    DeliveryService,\n  ],\n})\nexport class UsersModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(CurrentUserMiddleware).forRoutes('*')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                DeleteUser\n                            \n                            \n                                    Async\n                                isUserByEmail\n                            \n                            \n                                    Async\n                                isUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserData)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteUser(user)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    isUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(user, toUpdate)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toUpdate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PrismaService } from '../prisma/prisma.service'\nimport { createUser } from './customTypes/user.type'\nimport { randomBytes, scrypt as _scrypt } from 'crypto'\nimport { promisify } from 'util'\n\nconst scrypt = promisify(_scrypt)\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async isUserById(id: string) {\n    if (!id) {\n      return null\n    } else {\n      return await this.prisma.user.findUnique({\n        where: {\n          id: id,\n        },\n      })\n    }\n  }\n\n  async isUserByEmail(email: string) {\n    return await this.prisma.user.findUnique({\n      where: {\n        email: email,\n      },\n    })\n  }\n\n  async createUser(createUserData) {\n    const { email, password, adress_Delivery, lastname, firstname, token } =\n      createUserData\n    const myUser = await this.isUserByEmail(email)\n\n    if (!myUser) {\n      let userData: createUser = {\n        email: email,\n        password: password,\n\n        lastname: lastname,\n        firstname: firstname,\n        token: createUserData.token,\n      }\n\n      if (createUserData.adress_Delivery) {\n        userData = { ...userData, adress_Delivery: { create: adress_Delivery } }\n      }\n\n      if (createUserData.morphology) {\n        userData = { ...userData, morphology: createUserData.morphology }\n      }\n\n      if (createUserData.size) {\n        userData = { ...userData, size: createUserData.size }\n      }\n      if (createUserData.weight) {\n        userData = { ...userData, weight: createUserData.weight }\n      }\n\n      if (createUserData.adress_Bill) {\n        createUserData.adress_Bill.number = Number(\n          createUserData.adress_Bill.number,\n        )\n        createUserData.adress_Bill.postcode = Number(\n          createUserData.adress_Bill.postcode,\n        )\n        userData = {\n          ...userData,\n          adress_Bill: { create: createUserData.adress_Bill },\n        }\n      }\n      const user = await this.prisma.user.create({ data: userData })\n      return user\n    } else {\n      return null\n    }\n  }\n\n  async updateUser(user, toUpdate) {\n    let data = {}\n\n    if (toUpdate.email) {\n      data = { ...data, email: toUpdate.email }\n    }\n    if (toUpdate.size) {\n      data = { ...data, size: toUpdate.size }\n    }\n    if (toUpdate.morphology) {\n      data = { ...data, morphology: toUpdate.morphology }\n    }\n\n    if (toUpdate.password) {\n      const salt = randomBytes(8).toString('hex')\n      const hash = (await scrypt(toUpdate.password, salt, 32)) as Buffer\n      const result = salt + '.' + hash.toString('hex')\n      toUpdate.password = result\n      data = { ...data, password: result }\n    }\n\n    if (toUpdate.weight) {\n      data = { ...data, email: toUpdate.email }\n    }\n    if (toUpdate.adress_Bill) {\n      toUpdate.adress_Bill.number = Number(toUpdate.adress_Bill.number)\n      toUpdate.adress_Bill.postcode = Number(toUpdate.adress_Bill.postcode)\n      data = {\n        ...data,\n        adress_Bill: { update: toUpdate.adress_Bill },\n      }\n    }\n    if (toUpdate.adress_Delivery) {\n      toUpdate.adress_Bill.number = Number(toUpdate.adress_Bill.number)\n      toUpdate.adress_Bill.postcode = Number(toUpdate.adress_Bill.postcode)\n      data = {\n        ...data,\n        adress_Bill: { update: toUpdate.adress_Bill },\n      }\n    }\n    const userUpdated = await this.prisma.user.update({\n      data: data,\n      where: { id: user.id },\n    })\n    return userUpdated\n  }\n\n  async DeleteUser(user) {\n    let userToDelete = await this.prisma.user.delete({\n      where: { id: user.id },\n    })\n\n    return userToDelete\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductDTO.html":{"url":"classes/addProductDTO.html","title":"class - addProductDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/addProduct.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartId\n                            \n                            \n                                productId\n                            \n                            \n                                    Optional\n                                quantityWanted\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/addProduct.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'productID to put in cart'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/addProduct.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityWanted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/addProduct.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Size\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'product size wanted (XS to XXL'})@IsEnum(Size)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/addProduct.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Size } from '@prisma/client';\nexport class addProductDTO {\n  @ApiProperty({ description: 'product size wanted (XS to XXL' })\n  @IsEnum(Size)\n  size: Size;\n\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  @IsNumber()\n  @IsOptional()\n  quantityWanted?: number;\n\n  @ApiProperty({ description: 'productID to put in cart' })\n  @IsString()\n  productId: string;\n\n  @ApiProperty()\n  @IsString()\n  cartId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/addProductDataDTO.html":{"url":"classes/addProductDataDTO.html","title":"class - addProductDataDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  addProductDataDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/dtos/add_Product_Data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                quantityWanted\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quantityWanted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'product quantity wanted, if empty, by default, it will be 1 '})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/add_Product_Data.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Size\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'product size wanted (XS to XXL'})@IsEnum(Size)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/carts/dtos/add_Product_Data.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Size } from '@prisma/client';\nexport class addProductDataDTO {\n  @ApiProperty({ description: 'product size wanted (XS to XXL' })\n  @IsEnum(Size)\n  size: Size;\n\n  @ApiPropertyOptional({\n    description: 'product quantity wanted, if empty, by default, it will be 1 ',\n  })\n  @IsNumber()\n  @IsOptional()\n  quantityWanted?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/adressBillCreate.html":{"url":"interfaces/adressBillCreate.html","title":"interface - adressBillCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  adressBillCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/customTypes/user.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         Adress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Adress\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Morphology } from '@prisma/client'\nimport { Adress } from '../dtos/create-user.dto'\n\nexport interface createUser {\n  email: string\n  password: string\n  morphology?: Morphology\n  adress_Delivery?: adressDeliveryCreate\n  adress_Bill?: adressBillCreate\n  weight?: string\n  size?: string\n  token?: string\n  lastname: string\n  firstname: string\n}\n\nexport interface adressDeliveryCreate {\n  create: Adress\n}\n\nexport interface adressBillCreate {\n  create: Adress\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/adressDeliveryCreate.html":{"url":"interfaces/adressDeliveryCreate.html","title":"interface - adressDeliveryCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  adressDeliveryCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/customTypes/user.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            create\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        create:         Adress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Adress\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Morphology } from '@prisma/client'\nimport { Adress } from '../dtos/create-user.dto'\n\nexport interface createUser {\n  email: string\n  password: string\n  morphology?: Morphology\n  adress_Delivery?: adressDeliveryCreate\n  adress_Bill?: adressBillCreate\n  weight?: string\n  size?: string\n  token?: string\n  lastname: string\n  firstname: string\n}\n\nexport interface adressDeliveryCreate {\n  create: Adress\n}\n\nexport interface adressBillCreate {\n  create: Adress\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                decorators/profile-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                guards/admin.guard.ts\n            \n            guard\n            AdminGUard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                interceptors/serialize.interceptors.ts\n            \n            class\n            SerializeInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                interceptors/serialize.interceptors.ts\n            \n            interface\n            ClassConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                interceptors/serialize.interceptors.ts\n            \n            function\n            Serialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            cookieSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            variable\n            scrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/customType/google_JWT.type.ts\n            \n            interface\n            googleJWT\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dtos/user-auth.dto.ts\n            \n            class\n            userAuthDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/facebook.strategy.ts\n            \n            injectable\n            FacebookStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/carts.controller.ts\n            \n            controller\n            CartsController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/carts/carts.service.ts\n            \n            injectable\n            CartsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/carts/custonType/CartDB.ts\n            \n            interface\n            CartDbData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/carts/custonType/CartDB.ts\n            \n            interface\n            ownerCart\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/carts/custonType/CartDB.ts\n            \n            interface\n            productsCart\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/carts/decorators/current-cart.ts\n            \n            variable\n            CurrentCart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/carts/dtos/UserCart.dto.ts\n            \n            class\n            UserCartDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/carts/dtos/UserCart.dto.ts\n            \n            interface\n            Carts\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/carts/dtos/addProduct.dto.ts\n            \n            class\n            addProductDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/carts/dtos/add_Product_Data.dto.ts\n            \n            class\n            addProductDataDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/dtos/add_to_cart.dto.ts\n            \n            class\n            AddToCartDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/carts/dtos/create_cart.dto.ts\n            \n            class\n            CreateCartDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/carts/dtos/quantity_short.dto.ts\n            \n            class\n            QuantityShortDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/carts/dtos/total_cart.dto.ts\n            \n            class\n            Total_cartDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/middlewares/current-cart.ts\n            \n            injectable\n            CurrentCartMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/carts/middlewares/current-cart.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/delivery/delivery.controller.ts\n            \n            controller\n            DeliveryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/delivery/delivery.service.ts\n            \n            injectable\n            DeliveryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/delivery/dtos/create_delivery.dto.ts\n            \n            class\n            DeliveryData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/delivery/dtos/delivery.dto.ts\n            \n            class\n            DeliveryData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/customTypes/all_payments.ts\n            \n            interface\n            OrderBy\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/payments/customTypes/all_payments.ts\n            \n            interface\n            PaymentsFilters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/payments/dtos/create_payment.dto.ts\n            \n            class\n            newPaymentDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payments/dtos/payment.dto.ts\n            \n            class\n            PaymentDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payments/payments.controller.ts\n            \n            controller\n            PaymentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payments/payments.service.ts\n            \n            injectable\n            PaymentsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            class\n            Sustainable\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            interface\n            PicturesTags\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/products/dtos/create-product.dto.ts\n            \n            interface\n            ProductSizes\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/products/dtos/filters.dto.ts\n            \n            class\n            filtersProductsDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/dtos/find-many.dto.ts\n            \n            class\n            FindManyIdsDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/reviews/customTypes/newreview.type.ts\n            \n            interface\n            newReview\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/reviews/dtos/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reviews/dtos/update-review.dto.ts\n            \n            class\n            UpdateReviewDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/reviews/reviews.controller.ts\n            \n            controller\n            ReviewsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reviews/reviews.service.ts\n            \n            injectable\n            ReviewsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/stripe/dtos/BodyCharge.dto.ts\n            \n            class\n            BodyChargeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stripe/dtos/charge_data.dto.ts\n            \n            class\n            DataChargeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stripe/stripe.controller.ts\n            \n            controller\n            StripeController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stripe/stripe.service.ts\n            \n            injectable\n            StripeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/customTypes/user.type.ts\n            \n            interface\n            adressBillCreate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/customTypes/user.type.ts\n            \n            interface\n            adressDeliveryCreate\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/customTypes/user.type.ts\n            \n            interface\n            createUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            interface\n            Adress\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dtos/token.dto.ts\n            \n            class\n            TokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            injectable\n            CurrentUserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/middlewares/current-user.middleware.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            scrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            dateInNmonths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                utils/utils.ts\n            \n            variable\n            mode\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/createUser.html":{"url":"interfaces/createUser.html","title":"interface - createUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  createUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/customTypes/user.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adress_Bill\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adress_Delivery\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            morphology\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adress_Bill\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adress_Bill:         adressBillCreate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         adressBillCreate\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adress_Delivery\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adress_Delivery:         adressDeliveryCreate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         adressDeliveryCreate\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        morphology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        morphology:     Morphology\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Morphology\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Morphology } from '@prisma/client'\nimport { Adress } from '../dtos/create-user.dto'\n\nexport interface createUser {\n  email: string\n  password: string\n  morphology?: Morphology\n  adress_Delivery?: adressDeliveryCreate\n  adress_Bill?: adressBillCreate\n  weight?: string\n  size?: string\n  token?: string\n  lastname: string\n  firstname: string\n}\n\nexport interface adressDeliveryCreate {\n  create: Adress\n}\n\nexport interface adressBillCreate {\n  create: Adress\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.3\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.3\n        \n            @nestjs/swagger : ^6.0.4\n        \n            @prisma/client : ^3.15.2\n        \n            @types/cookie-session : ^2.0.44\n        \n            @types/passport-facebook : ^2.1.11\n        \n            body-parse : ^0.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-session : ^2.0.0\n        \n            crypto-js : ^4.1.1\n        \n            express : ^4.18.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            nodemon : ^2.0.19\n        \n            npm-check-updates : ^15.2.6\n        \n            passport : ^0.6.0\n        \n            passport-facebook : ^3.0.0\n        \n            passport-google-oauth2 : ^0.2.0\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            stripe : ^9.14.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProductMorphology   (src/.../create-product.dto.ts)\n                        \n                        \n                            sort   (src/.../filters.dto.ts)\n                        \n                        \n                            Sort   (src/.../payment.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/products/dtos/create-product.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductMorphology\n                    \n                \n                        \n                            \n                                 A\n                            \n                        \n                        \n                            \n                                 V\n                            \n                        \n                        \n                            \n                                 H\n                            \n                        \n                        \n                            \n                                 X\n                            \n                        \n                        \n                            \n                                 O\n                            \n                        \n            \n        \n\n    src/products/dtos/filters.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n            \n        \n\n    src/payments/dtos/payment.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Sort\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/filtersProductsDTO.html":{"url":"classes/filtersProductsDTO.html","title":"class - filtersProductsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  filtersProductsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/filters.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                popularity\n                            \n                            \n                                priceSort\n                            \n                            \n                                skip\n                            \n                            \n                                sortDate\n                            \n                            \n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        popularity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         sort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only asc or desc accepted,no '' needed,value by default desc'})@IsEnum(sort)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/filters.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        priceSort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         sort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'only asc or desc accepted,no '' needed, value by default asc'})@IsEnum(sort)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/filters.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Paginate:number of results to skip, by default 0'})@IsEnum(sort)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/filters.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'filter by default, only asc or desc accepted, no '' needed, value by default desc '})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/filters.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Paginate:number of results to take into account, by default 14'})@IsEnum(sort)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/filters.dto.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDateString,\n  IsDecimal,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport enum sort {\n  asc,\n  desc,\n}\nexport class filtersProductsDTO {\n  @ApiPropertyOptional({\n    description:\n      \"filter by default, only asc or desc accepted, no '' needed, value by default desc \",\n  })\n  @IsOptional()\n  sortDate: string;\n\n  @ApiPropertyOptional({\n    description: \"only asc or desc accepted,no '' needed, value by default asc\",\n  })\n  @IsEnum(sort)\n  @IsOptional()\n  priceSort: sort;\n\n  @ApiPropertyOptional({\n    description: \"only asc or desc accepted,no '' needed,value by default desc\",\n  })\n  @IsEnum(sort)\n  @IsOptional()\n  popularity: sort;\n\n  @ApiPropertyOptional({\n    description: 'Paginate:number of results to skip, by default 0',\n  })\n  @IsEnum(sort)\n  @IsOptional()\n  skip: number;\n\n  @ApiPropertyOptional({\n    description:\n      'Paginate:number of results to take into account, by default 14',\n  })\n  @IsEnum(sort)\n  @IsOptional()\n  take: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Serialize   (interceptors/.../serialize.interceptors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    interceptors/serialize.interceptors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Serialize\n                        \n                    \n                \n            \n            \n                \nSerialize(dto: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ClassConstructor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/googleJWT.html":{"url":"interfaces/googleJWT.html","title":"interface - googleJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  googleJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/customType/google_JWT.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface googleJWT {\n  email: string;\n  id?: string;\n  admin?: boolean;\n  token?: string;\n  firstName?: string;\n  lastName?: string;\n  picture?: string;\n  accessToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nE-Commerce Backend\nMIT License\n\nTable of contents\n\nDescription\nBuilt With\nInstallation Instructions and Requirement\nNode.js Installation\nSQL database\nClone the Code and install dependencies\nAuthentification\n\n\nBefore starting\nCompodocs\nSwagger\nHow does this API work ? \nFirst product\nFirst cart\nAdd product(s)\nFirst product(s)\nAuthentification\nDelivery\nPayment\n\n\n\n\nStay In touch\n\n\nDescription\n\nThis project creates the back-end code for an e-commerce site via NestJs Framework. This application uses Express.js API and Prisma  to interact with a PostgreSQL database. The API Routes are created using RESTful CRUD methods. Since there is no front-end code, the application was tested using Postman . This Application is documented by SWAGGER and COMPODOCS\n\n\n\nBuilt With\n\nNestJs\nJavaScript\nTypescript\nPostgreSQL\nPostico\nPrisma\nSwagger\nCompoDocs\n\n\n\n\nInstallation Instructions and Requirement\n\n\n\nNode.js Installation\n\nPlease check that you have Node.js globally installed on your computer. \n If not, try reinstalling Node.js by following this link: https://nodejs.org/en/\n\n\n\n\n\nSQL database\n\n\n\nTo run, this project require to install PostgreSQL. If you don't have installed it yet, please check on their website : https://www.postgresql.org/\nDon't forget to add your DataBase in your .env\n\n\n\n\n\nClone the Code and install dependencies\n\n The first thing to do is to open git bash command line, and then simply you can clone the project under any of your favorite places as the following:\n\n\ngit clone https://gitlab.com/marine-user-agency/clothes_ecommerce.git\n\n\n\n\n\n\nAuthentification\n\nDon't forget to add a secret Key fot JWT in your .env. You can choose any string you want.\nIf you want to use Facebook and Google auth, you need to create one and add id-user and secret-key in your env file.\nMore information: https://console.cloud.google.com/apis (for google) and https://developers.facebook.com/apps/ (facebook)\nBefore Starting\n\nPlease to understand infrastructure, routes possibler, watch before :\n\n\n\nCOMPODOCS\n\n\nTo run it :\n\n$ npx @compodoc/compodoc -p tsconfig.json -sOpen your browser and navigate to http://localhost:8080\nif you have any trouble, please check nestJs documentation :\nhttps://docs.nestjs.com/recipes/documentation\n\n\n \n\nSWAGGER\n\nOpen your browser and navigate to http://localhost:3000/api\n\n# Running the app\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n\n# production mode\n$ npm run start:prodHow does this API work - API CHANNEL ?\n\nSTEP 1 : Create your first product \n\n\nhttp://localhost:3000/products/createSTEP 2 : Create your CART with your first product\n\n\nhttp://localhost:3000/carts/add/cart/:productIdSTEP 3 : Add product from your cart\n\n```bash\nhttp://localhost:3000/add/product/:productId/:cartId\n```\n\nSTEP 3 bis : Remove product from your cart also \n\n```bash\nhttp://localhost:3000/remove/product/:productId/:cartId\n```\n\nSTEP 4: Auth \n\nTo go further, you need to be logged in :\n\nsignUp:\nhttp://localhost:3000/users/signupBasic Auth :\nhttp://localhost:3000/loginGoogle Auth :\nhttp://localhost:3000/login/googleSTEP 5: Add delivery\n\n\nTo add delivery, you need first to be logged in and have registered a delivery adress\nhttp://localhost:3000/delivery/create/:cartIdSTEP 6: Add paiement\n\n\nhttp://localhost:3000/payments/createStay in touch\n\n\nAuthor - Marine Corbel\nStructure - USER\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/newPaymentDTO.html":{"url":"classes/newPaymentDTO.html","title":"class - newPaymentDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  newPaymentDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payments/dtos/create_payment.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class newPaymentDTO {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/newReview.html":{"url":"interfaces/newReview.html","title":"interface - newReview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  newReview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reviews/customTypes/newreview.type.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pictures\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            rating_avg\n                                        \n                                \n                                \n                                        \n                                            rating_quality\n                                        \n                                \n                                \n                                        \n                                            rating_size\n                                        \n                                \n                                \n                                        \n                                            rating_style\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictures:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating_avg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating_avg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating_quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating_quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating_style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating_style:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface newReview {\n  title: string;\n  description: string;\n  rating_avg: number;\n  rating_quality: number;\n  rating_style: number;\n  rating_size: number;\n  products: object;\n  pictures?: object;\n  owner: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ReviewsModule\n\n\n\ncluster_ReviewsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFacebookStrategy \n\nFacebookStrategy \n\nFacebookStrategy  -->\n\nAuthModule->FacebookStrategy \n\n\n\n\n\nGoogleStrategy \n\nGoogleStrategy \n\nGoogleStrategy  -->\n\nAuthModule->GoogleStrategy \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nLocalStrategy \n\nLocalStrategy \n\nLocalStrategy  -->\n\nAuthModule->LocalStrategy \n\n\n\n\n\nCartsModule\n\nCartsModule\n\nAppModule -->\n\nCartsModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nAppModule -->\n\nPaymentsModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nStripeModule\n\nStripeModule\n\nAppModule -->\n\nStripeModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nCartsService\n\nCartsService\n\nAuthModule -->\n\nCartsService->AuthModule\n\n\n\nCartsModule -->\n\nCartsService->CartsModule\n\n\n\nDeliveryModule -->\n\nCartsService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nCartsService->PaymentsModule\n\n\n\nStripeModule -->\n\nCartsService->StripeModule\n\n\n\nStripeModule -->\n\nCartsService->StripeModule\n\n\n\nUsersModule -->\n\nCartsService->UsersModule\n\n\n\nAppModule -->\n\nCartsService->AppModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nAuthModule -->\n\nDeliveryService->AuthModule\n\n\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nDeliveryService->PaymentsModule\n\n\n\nStripeModule -->\n\nDeliveryService->StripeModule\n\n\n\nUsersModule -->\n\nDeliveryService->UsersModule\n\n\n\nAppModule -->\n\nDeliveryService->AppModule\n\n\n\n\n\nGoogleStrategy\n\nGoogleStrategy\n\nAuthModule -->\n\nGoogleStrategy->AuthModule\n\n\n\nAppModule -->\n\nGoogleStrategy->AppModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\nAppModule -->\n\nPaymentsService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nCartsModule -->\n\nPrismaService->CartsModule\n\n\n\nDeliveryModule -->\n\nPrismaService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nPrismaService->PaymentsModule\n\n\n\nProductsModule -->\n\nPrismaService->ProductsModule\n\n\n\nReviewsModule -->\n\nPrismaService->ReviewsModule\n\n\n\nStripeModule -->\n\nPrismaService->StripeModule\n\n\n\nStripeModule -->\n\nPrismaService->StripeModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nAuthModule -->\n\nProductsService->AuthModule\n\n\n\nCartsModule -->\n\nProductsService->CartsModule\n\n\n\nDeliveryModule -->\n\nProductsService->DeliveryModule\n\n\n\nDeliveryModule -->\n\nProductsService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nProductsService->PaymentsModule\n\n\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\nStripeModule -->\n\nProductsService->StripeModule\n\n\n\nUsersModule -->\n\nProductsService->UsersModule\n\n\n\nAppModule -->\n\nProductsService->AppModule\n\n\n\n\n\nStripeService\n\nStripeService\n\nAuthModule -->\n\nStripeService->AuthModule\n\n\n\nDeliveryModule -->\n\nStripeService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nStripeService->PaymentsModule\n\n\n\nStripeModule -->\n\nStripeService->StripeModule\n\n\n\nUsersModule -->\n\nStripeService->UsersModule\n\n\n\nAppModule -->\n\nStripeService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nDeliveryModule -->\n\nUsersService->DeliveryModule\n\n\n\nPaymentsModule -->\n\nUsersService->PaymentsModule\n\n\n\nStripeModule -->\n\nUsersService->StripeModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\nFacebookStrategy\n\nFacebookStrategy\n\nAuthModule -->\n\nFacebookStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nReviewsService\n\nReviewsService\n\nReviewsModule -->\n\nReviewsService->ReviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ownerCart.html":{"url":"interfaces/ownerCart.html","title":"interface - ownerCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ownerCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/custonType/CartDB.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connect\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connect:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StatusCart } from '@prisma/client';\nimport { Decimal } from '@prisma/client/runtime';\n\nexport interface CartDbData {\n  delivery_fees?: number;\n  delivery_date: Date;\n  total: number;\n  status: StatusCart;\n}\n\nexport interface ownerCart {\n  connect: object;\n}\n\nexport interface productsCart {\n  connect: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/productsCart.html":{"url":"interfaces/productsCart.html","title":"interface - productsCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  productsCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/carts/custonType/CartDB.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connect\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connect:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StatusCart } from '@prisma/client';\nimport { Decimal } from '@prisma/client/runtime';\n\nexport interface CartDbData {\n  delivery_fees?: number;\n  delivery_date: Date;\n  total: number;\n  status: StatusCart;\n}\n\nexport interface ownerCart {\n  connect: object;\n}\n\nexport interface productsCart {\n  connect: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userAuthDTO.html":{"url":"classes/userAuthDTO.html","title":"class - userAuthDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userAuthDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/user-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                admin\n                            \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                size\n                            \n                            \n                                sub\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/user-auth.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class userAuthDTO {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  password: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  size: string;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  token: object;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  admin?: boolean;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  sub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieSession   (src/.../app.module.ts)\n                        \n                        \n                            CurrentCart   (src/.../current-cart.ts)\n                        \n                        \n                            CurrentUser   (decorators/.../profile-user.decorator.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            dateInNmonths   (utils/.../utils.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            mode   (utils/.../utils.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            scrypt   (src/.../auth.service.ts)\n                        \n                        \n                            scrypt   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('cookie-session')\n                    \n                \n\n\n        \n    \n\n    src/carts/decorators/current-cart.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest()\n\n    return request.currentCart\n  }\n)\n                    \n                \n\n\n        \n    \n\n    decorators/profile-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    return request.profile;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: never, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest()\n\n    return request.user\n  }\n)\n                    \n                \n\n\n        \n    \n\n    utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dateInNmonths\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (n) => {\n  let d = new Date();\n  return d.setMonth(d.getMonth() + n);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (arr) => {\n  const mode = {};\n  let max = 0,\n    count = 0;\n\n  for (let i = 0; i \n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: process.env.JWTSecretKey,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promisify(_scrypt)\n                    \n                \n\n\n        \n    \n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        scrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promisify(_scrypt)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
